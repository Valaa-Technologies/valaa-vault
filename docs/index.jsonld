[
  {
    "@id": "https://valospace.org/index",
    "@context": {
      "@base": "https://valospace.org/0#",
      "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
      "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
      "xsd": "http://www.w3.org/2001/XMLSchema#",
      "owl": "http://www.w3.org/2002/07/owl#",
      "dc": "http://purl.org/dc/elements/1.1/",
      "VSbomdoc": "https://valospace.org/sbomdoc/0#",
      "VKernel": "https://valospace.org/kernel/0#",
      "VDoc": "https://valospace.org/vdoc/0#",
      "VRevdoc": "https://valospace.org/revdoc/0#",
      "restriction": {
        "@reverse": "owl:onProperty"
      },
      "VRevdoc:tooltipContent": {
        "@id": "#tooltipContent",
        "@type": "@id"
      },
      "VDoc:content": {
        "@id": "#content",
        "@container": "@list",
        "@type": "@id"
      },
      "VDoc:entries": {
        "@id": "#entries",
        "@container": "@list",
        "@type": "@id"
      },
      "VDoc:words": {
        "@id": "#words",
        "@container": "@list",
        "@type": "@id"
      },
      "VDoc:lines": {
        "@id": "#lines",
        "@container": "@list",
        "@type": "@id"
      },
      "VDoc:columns": {
        "@id": "#columns",
        "@container": "@list",
        "@type": "@id"
      },
      "VDoc:map": {
        "@id": "#map",
        "@type": "@id"
      },
      "VDoc:cell": {
        "@id": "#cell",
        "@type": "@id"
      },
      "VEngine": "https://valospace.org/engine/0#",
      "V": "https://valospace.org/0#",
      "VState": "https://valospace.org/state/0#",
      "VScript": "https://valospace.org/script/0#",
      "VLog": "https://valospace.org/log/0#",
      "VPlot": "https://valospace.org/plot/0#",
      "V:Chronicle.createPartitionURI": {
        "@id": "#Chronicle.createPartitionURI",
        "@type": "@id"
      },
      "V:Chronicle.createChronicleURI": {
        "@id": "#Chronicle.createChronicleURI",
        "@type": "@id"
      },
      "V:Chronicle.tryPartitionConnection": {
        "@id": "#Chronicle.tryPartitionConnection",
        "@type": "@id"
      },
      "V:Chronicle.tryConnection": {
        "@id": "#Chronicle.tryConnection",
        "@type": "@id"
      },
      "V:Chronicle.acquirePartitionConnection": {
        "@id": "#Chronicle.acquirePartitionConnection",
        "@type": "@id"
      },
      "V:Chronicle.acquireConnection": {
        "@id": "#Chronicle.acquireConnection",
        "@type": "@id"
      },
      "V:Chronicle.sourcerChronicle": {
        "@id": "#Chronicle.sourcerChronicle",
        "@type": "@id"
      },
      "V:immediateContent": {
        "@id": "#immediateContent",
        "@type": "@id"
      },
      "V:interpretContent": {
        "@id": "#interpretContent",
        "@type": "@id"
      },
      "V:immediateURL": {
        "@id": "#immediateURL",
        "@type": "@id"
      },
      "V:getURL": {
        "@id": "#getURL",
        "@type": "@id"
      },
      "V:Relatable.getRelationsOf": {
        "@id": "#Relatable.getRelationsOf",
        "@type": "@id"
      },
      "V:Relatable.getIncomingRelationsOf": {
        "@id": "#Relatable.getIncomingRelationsOf",
        "@type": "@id"
      },
      "V:getRelations": {
        "@id": "#getRelations",
        "@type": "@id"
      },
      "V:getRelationTargets": {
        "@id": "#getRelationTargets",
        "@type": "@id"
      },
      "V:setRelations": {
        "@id": "#setRelations",
        "@type": "@id"
      },
      "V:getIncomingRelations": {
        "@id": "#getIncomingRelations",
        "@type": "@id"
      },
      "V:getIncomingRelationSources": {
        "@id": "#getIncomingRelationSources",
        "@type": "@id"
      },
      "V:setIncomingRelations": {
        "@id": "#setIncomingRelations",
        "@type": "@id"
      },
      "V:Resource.activate": {
        "@id": "#Resource.activate",
        "@type": "@id"
      },
      "V:Resource.isActive": {
        "@id": "#Resource.isActive",
        "@type": "@id"
      },
      "V:Resource.getFieldOf": {
        "@id": "#Resource.getFieldOf",
        "@type": "@id"
      },
      "V:Resource.setFieldOf": {
        "@id": "#Resource.setFieldOf",
        "@type": "@id"
      },
      "V:Resource.getOwnerOf": {
        "@id": "#Resource.getOwnerOf",
        "@type": "@id"
      },
      "V:Resource.setOwnerOf": {
        "@id": "#Resource.setOwnerOf",
        "@type": "@id"
      },
      "V:Resource.getActiveResource": {
        "@id": "#Resource.getActiveResource",
        "@type": "@id"
      },
      "V:Resource.tryActiveResource": {
        "@id": "#Resource.tryActiveResource",
        "@type": "@id"
      },
      "V:Resource.recombine": {
        "@id": "#Resource.recombine",
        "@type": "@id"
      },
      "V:Resource.destroy": {
        "@id": "#Resource.destroy",
        "@type": "@id"
      },
      "V:Resource.prototype.hasOwnProperty": {
        "@id": "#Resource.prototype.hasOwnProperty",
        "@type": "@id"
      },
      "V:getField": {
        "@id": "#getField",
        "@type": "@id"
      },
      "V:getFieldCoupling": {
        "@id": "#getFieldCoupling",
        "@type": "@id"
      },
      "V:setField": {
        "@id": "#setField",
        "@type": "@id"
      },
      "V:addToField": {
        "@id": "#addToField",
        "@type": "@id"
      },
      "V:removeFromField": {
        "@id": "#removeFromField",
        "@type": "@id"
      },
      "V:replaceWithinField": {
        "@id": "#replaceWithinField",
        "@type": "@id"
      },
      "V:setOwner": {
        "@id": "#setOwner",
        "@type": "@id"
      },
      "V:getEntity": {
        "@id": "#getEntity",
        "@type": "@id"
      },
      "V:getMedia": {
        "@id": "#getMedia",
        "@type": "@id"
      },
      "V:getFixedResource": {
        "@id": "#getFixedResource",
        "@type": "@id"
      },
      "V:getFixedEntity": {
        "@id": "#getFixedEntity",
        "@type": "@id"
      },
      "V:getFixedMedia": {
        "@id": "#getFixedMedia",
        "@type": "@id"
      },
      "V:getFixedRelation": {
        "@id": "#getFixedRelation",
        "@type": "@id"
      },
      "V:obtainFixedResource": {
        "@id": "#obtainFixedResource",
        "@type": "@id"
      },
      "V:instantiate": {
        "@id": "#instantiate",
        "@type": "@id"
      },
      "V:duplicate": {
        "@id": "#duplicate",
        "@type": "@id"
      },
      "V:prepareBlob": {
        "@id": "#prepareBlob",
        "@type": "@id"
      },
      "V:prepareBvob": {
        "@id": "#prepareBvob",
        "@type": "@id"
      },
      "V:Scope.createIdentifer": {
        "@id": "#Scope.createIdentifer",
        "@type": "@id"
      },
      "V:getProperty": {
        "@id": "#getProperty",
        "@type": "@id"
      },
      "V:getHostGlobal": {
        "@id": "#getHostGlobal",
        "@type": "@id"
      },
      "V:getFickleId": {
        "@id": "#getFickleId",
        "@type": "@id"
      },
      "V:createDerivedId": {
        "@id": "#createDerivedId",
        "@type": "@id"
      },
      "V:hasInterface": {
        "@id": "#hasInterface",
        "@type": "@id"
      },
      "V:chronicleRoot": {
        "@id": "#chronicleRoot",
        "@type": "@id"
      },
      "V:partition": {
        "@id": "#partition",
        "@type": "@id"
      },
      "V:container": {
        "@id": "#container",
        "@type": "@id"
      },
      "V:nodes": {
        "@id": "#nodes",
        "@container": "@list",
        "@type": "@id"
      },
      "V:directory": {
        "@id": "#directory",
        "@type": "@id"
      },
      "V:entries": {
        "@id": "#entries",
        "@container": "@list",
        "@type": "@id"
      },
      "V:parent": {
        "@id": "#parent",
        "@type": "@id"
      },
      "V:entities": {
        "@id": "#entities",
        "@container": "@list",
        "@type": "@id"
      },
      "V:folder": {
        "@id": "#folder",
        "@type": "@id"
      },
      "V:medias": {
        "@id": "#medias",
        "@container": "@list",
        "@type": "@id"
      },
      "V:content": {
        "@id": "#content",
        "@type": "@id"
      },
      "V:connector": {
        "@id": "#connector",
        "@type": "@id"
      },
      "V:connectedRelations": {
        "@id": "#connectedRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "V:source": {
        "@id": "#source",
        "@type": "@id"
      },
      "V:outRelations": {
        "@id": "#outRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "V:target": {
        "@id": "#target",
        "@type": "@id"
      },
      "V:inRelations": {
        "@id": "#inRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "V:pairedSource": {
        "@id": "#pairedSource",
        "@type": "@id"
      },
      "V:pairedOutRelations": {
        "@id": "#pairedOutRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "V:pairedTarget": {
        "@id": "#pairedTarget",
        "@type": "@id"
      },
      "V:pairedInRelations": {
        "@id": "#pairedInRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "V:connectedSource": {
        "@id": "#connectedSource",
        "@type": "@id"
      },
      "V:connectedOutRelations": {
        "@id": "#connectedOutRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "V:connectedTarget": {
        "@id": "#connectedTarget",
        "@type": "@id"
      },
      "V:connectedInRelations": {
        "@id": "#connectedInRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "V:relations": {
        "@id": "#relations",
        "@container": "@list",
        "@type": "@id"
      },
      "V:outgoingRelations": {
        "@id": "#outgoingRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "V:incomingRelations": {
        "@id": "#incomingRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "V:vrid": {
        "@id": "#vrid",
        "@container": "@list",
        "@type": "@id"
      },
      "V:prototype": {
        "@id": "#prototype",
        "@type": "@id"
      },
      "V:derivations": {
        "@id": "#derivations",
        "@type": "@id"
      },
      "V:ownFields": {
        "@id": "#ownFields",
        "@type": "@id"
      },
      "V:inheritors": {
        "@id": "#inheritors",
        "@type": "@id"
      },
      "V:instances": {
        "@id": "#instances",
        "@type": "@id"
      },
      "V:ghostPrototype": {
        "@id": "#ghostPrototype",
        "@type": "@id"
      },
      "V:ghosts": {
        "@id": "#ghosts",
        "@type": "@id"
      },
      "V:materializedGhosts": {
        "@id": "#materializedGhosts",
        "@type": "@id"
      },
      "V:unnamedCouplings": {
        "@id": "#unnamedCouplings",
        "@type": "@id"
      },
      "V:ghostHost": {
        "@id": "#ghostHost",
        "@type": "@id"
      },
      "V:ghostOwner": {
        "@id": "#ghostOwner",
        "@type": "@id"
      },
      "V:ghostOwnlings": {
        "@id": "#ghostOwnlings",
        "@type": "@id"
      },
      "V:contentReferrers": {
        "@id": "#contentReferrers",
        "@type": "@id"
      },
      "V:owner": {
        "@id": "#owner",
        "@type": "@id"
      },
      "V:name": {
        "@id": "#name",
        "@type": "@id"
      },
      "V:inheritancePrototype": {
        "@id": "#inheritancePrototype",
        "@type": "@id"
      },
      "V:instancePrototype": {
        "@id": "#instancePrototype",
        "@type": "@id"
      },
      "V:ownlings": {
        "@id": "#ownlings",
        "@container": "@list",
        "@type": "@id"
      },
      "V:unnamedOwnlings": {
        "@id": "#unnamedOwnlings",
        "@type": "@id"
      },
      "V:prototypeAlias": {
        "@id": "#prototypeAlias",
        "@type": "@id"
      },
      "V:scope": {
        "@id": "#scope",
        "@type": "@id"
      },
      "V:value": {
        "@id": "#value",
        "@type": "@id"
      },
      "V:properties": {
        "@id": "#properties",
        "@container": "@list",
        "@type": "@id"
      }
    },
    "dc:title": "Valos introduction and valospace API reference",
    "VDoc:tags": [
      "PRIMARY",
      "INTRODUCTION",
      "ONTOLOGY",
      "VALONAUT"
    ],
    "VRevdoc:package": "@valos/kernel",
    "VRevdoc:version": "0.35.0-rc.35",
    "VRevdoc:preferredPrefix": "V",
    "VRevdoc:baseIRI": "https://valospace.org/0#",
    "VRevdoc:referencedModules": {
      "https://valospace.org/engine/0#": "@valos/engine/VEngine",
      "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
      "https://valospace.org/state/0#": "@valos/state/VState",
      "https://valospace.org/script/0#": "@valos/script/VScript",
      "https://valospace.org/0#": "@valos/space/V",
      "https://valospace.org/log/0#": "@valos/log/VLog",
      "https://valospace.org/plot/0#": "@valos/plot/VPlot"
    },
    "VRevdoc:extenderModules": {},
    "respecConfig": {
      "subtitle": "0.35.0-rc.35",
      "specStatus": "unofficial",
      "editors": [
        {
          "name": "Iridian Kiiskinen",
          "url": "https://valaatech.github.io/fabric/authors/iridian",
          "github": "http://github.com/valospace"
        }
      ],
      "authors": [],
      "shortName": "valos"
    },
    "documents": {
      "0": {
        "@id": "https://valospace.org/0",
        "tags": [
          "PRIMARY",
          "INTRODUCTION",
          "ONTOLOGY",
          "VALONAUT"
        ],
        "subProfiles": [],
        "title": "Valos introduction and valospace API reference",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                [
                  {
                    "@type": "VRevdoc:Tooltip",
                    "VDoc:content": [
                      {
                        "VDoc:em": true,
                        "VDoc:content": [
                          {
                            "VDoc:strong": true,
                            "VDoc:content": [
                              "'Valos extends boundlessly across the valospace-time fabric.'"
                            ]
                          },
                          " (...in progress(tm))"
                        ]
                      }
                    ],
                    "VRevdoc:tooltipContent": [
                      {
                        "VDoc:strong": true,
                        "VDoc:content": [
                          "-> Vertically"
                        ]
                      },
                      ": as a full application development solution\nvalos radically simplifies the semantic web technology stack.",
                      null,
                      {
                        "VDoc:strong": true,
                        "VDoc:content": [
                          "-> Horizontally"
                        ]
                      },
                      ": as a global, de-centralized ecosystem\nvalos eases cross-organization interfacing.",
                      null,
                      {
                        "VDoc:strong": true,
                        "VDoc:content": [
                          "-> In depth"
                        ]
                      },
                      ": with its unified resource model valos blurs\nthe boundary between frontends and backends.",
                      null,
                      {
                        "VDoc:strong": true,
                        "VDoc:content": [
                          "-> Temporally"
                        ]
                      },
                      ": valos unifies document state and change\nupdates into seamless event stream *chronicles*."
                    ]
                  }
                ]
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "In other words, valos is a bit ambitious and a lot to take in at once."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "To address this the first part of this document provides separate\nintroduction paths into valos for a software developer\n(referred to as ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "a valonaut"
                      ],
                      "VDoc:ref": "/valonaut"
                    }
                  ]
                },
                "), for a\nsystems operator (as ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "a technician"
                      ],
                      "VDoc:ref": "/technician"
                    }
                  ]
                },
                ") and\nfor a project manager (as ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "a voyager"
                      ],
                      "VDoc:ref": "/voyager"
                    }
                  ]
                },
                ")."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Choosing the most familiar path helps you to get hands-on the quickest."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The second part of this document is the ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "valospace"
                  ],
                  "VDoc:ref": "valospace"
                },
                " API reference and is aimed for valonauts for repeat viewing."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The three traditional roles of application developer, systems operator\nand project manager have their own unique characteristics in valos\necosystem and are called valonaut, technician and voyager respectively."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Each role has a detailed (editor's note: eventually) how-to guide which\nare linked and briefly introduced below. The roles support each other\nand the guides reflect this. The hands-on introduction section of each\nguide also gives a high-level overview of the rest."
              ]
            },
            {
              "VDoc:entries": {
                "valonaut": {
                  "@id": "https://valospace.org/valonaut",
                  "tags": [
                    "PRIMARY",
                    "ROLE"
                  ],
                  "subProfiles": [
                    "everyone",
                    "personal",
                    "student",
                    "prototypist",
                    "etc"
                  ],
                  "title": [
                    {
                      "VDoc:strong": true,
                      "VDoc:content": [
                        "Valonauts"
                      ]
                    },
                    " develop valospace apps for users"
                  ],
                  "abstract": {
                    "@type": "VDoc:Chapter",
                    "VDoc:content": [
                      {
                        "@type": "VDoc:Paragraph",
                        "VDoc:content": [
                          "This document is the first introduction for valonauts - the primary\ncontent creators - to the ValOS ecosystem and its core tools."
                        ]
                      }
                    ]
                  },
                  "introduction": {
                    "@type": "VDoc:Chapter",
                    "VDoc:content": [
                      {
                        "@type": "VDoc:Paragraph",
                        "VDoc:content": [
                          "As a valonaut you create, share and deploy web content and\ninteractive applications fully from inside ",
                          {
                            "@type": "VDoc:Reference",
                            "VDoc:content": [
                              "valospace"
                            ],
                            "VDoc:ref": "@valos/space"
                          },
                          "."
                        ]
                      },
                      {
                        "@type": "VDoc:Paragraph",
                        "VDoc:content": [
                          "You use a web editor called ",
                          {
                            "@type": "VDoc:Reference",
                            "VDoc:content": [
                              "Zero"
                            ],
                            "VDoc:ref": "Zero"
                          },
                          " and with it employ\ntraditional web technologies; HTML5, CSS and the Javascript\ndialect ",
                          {
                            "@type": "VDoc:Reference",
                            "VDoc:content": [
                              "valoscript"
                            ],
                            "VDoc:ref": "@valos/script"
                          }
                        ]
                      },
                      {
                        "@type": "VDoc:Paragraph",
                        "VDoc:content": [
                          "The skills you learn to do this are like cycling or writing - they\nare used to support your other interests. While you don't need to\nbecome a professional you certainly can!"
                        ]
                      }
                    ]
                  },
                  "package": "@valos/kernel-vault",
                  "version": "0.35.0-rc.33"
                },
                "technician": {
                  "@id": "https://valospace.org/technician",
                  "tags": [
                    "PRIMARY",
                    "ROLE"
                  ],
                  "subProfiles": [
                    "contributor",
                    "developer",
                    "administrator",
                    "devops",
                    "hacker",
                    "etc"
                  ],
                  "title": [
                    {
                      "VDoc:strong": true,
                      "VDoc:content": [
                        "Technicians"
                      ]
                    },
                    " deploy and maintain the valos fabric infrastructure"
                  ],
                  "abstract": {
                    "@type": "VDoc:Chapter",
                    "VDoc:content": [
                      {
                        "@type": "VDoc:Paragraph",
                        "VDoc:content": [
                          "This document is the first introduction for ValOS technicians -\nthe primary infrastructure developers and operators - to the ValOS\necosystem and its infrastructure toolchains and workflows."
                        ]
                      }
                    ]
                  },
                  "introduction": {
                    "@type": "VDoc:Chapter",
                    "VDoc:content": [
                      {
                        "@type": "VDoc:Paragraph",
                        "VDoc:content": [
                          "As a technician you develop and operate the ",
                          {
                            "VRevdoc:dfn": "#fabric",
                            "VDoc:content": [
                              {
                                "VDoc:strong": true,
                                "VDoc:content": [
                                  {
                                    "@type": "VDoc:Reference",
                                    "VDoc:content": [
                                      "ValOS fabric"
                                    ],
                                    "VDoc:ref": "#fabric"
                                  }
                                ]
                              },
                              ", ",
                              "the globally distributed web-like infrastructure of servers,\n    services and components which underlies the Valospace"
                            ]
                          },
                          "."
                        ]
                      },
                      {
                        "@type": "VDoc:Paragraph",
                        "VDoc:content": [
                          "You use ",
                          {
                            "@type": "VDoc:Reference",
                            "VDoc:content": [
                              "vlm"
                            ],
                            "VDoc:ref": "@/valma"
                          },
                          " and employ your existing,\nlikely professional knowledge of JavaScript, Node.js, DevOps,\nbackend, library and other software development skills."
                        ]
                      },
                      {
                        "@type": "VDoc:Paragraph",
                        "VDoc:content": [
                          "You create new open source and/or proprietary node packages. These\npermanently create new fabric functionalities and ",
                          {
                            "@type": "VDoc:Reference",
                            "VDoc:content": [
                              "expand"
                            ],
                            "VDoc:ref": "expand"
                          },
                          " the Valospace by integrating it to old world systems."
                        ]
                      }
                    ]
                  },
                  "package": "@valos/kernel-vault",
                  "version": "0.35.0-rc.33"
                },
                "voyager": {
                  "@id": "https://valospace.org/voyager",
                  "tags": [
                    "PRIMARY",
                    "ROLE"
                  ],
                  "subProfiles": [
                    "enthusiast",
                    "entrepreneur",
                    "evangelist",
                    "investor",
                    "business_owner",
                    "sales_rep",
                    "etc"
                  ],
                  "title": [
                    {
                      "VDoc:strong": true,
                      "VDoc:content": [
                        "Voyagers"
                      ]
                    },
                    " understand valos capabilities in order to make decisions"
                  ],
                  "abstract": {
                    "@type": "VDoc:Chapter",
                    "VDoc:content": [
                      {
                        "@type": "VDoc:Paragraph",
                        "VDoc:content": [
                          "This document is the first introduction for ValOS voyagers - the first\nadopters, entrepreneurs and evangelists - to the ValOS ecosystem, its\nphilosophy and its ultimate goals."
                        ]
                      }
                    ]
                  },
                  "introduction": {
                    "@type": "VDoc:Chapter",
                    "VDoc:content": [
                      {
                        "@type": "VDoc:Paragraph",
                        "VDoc:content": [
                          "As a voyager you have stakes that matter. Whether you were to\ninvest on a ValOS collaborator as a financier, to adopt ValOS as\ntechnology as an executive or just to commit your personal time and\nenergy on a ValOS project you need to ",
                          {
                            "VDoc:em": true,
                            "VDoc:content": [
                              "see"
                            ]
                          },
                          " forward."
                        ]
                      },
                      {
                        "@type": "VDoc:Paragraph",
                        "VDoc:content": [
                          "To make sound decisions and to position yourself proactively you\nneed to understand the big picture and philosophy of the ValOS\necosystem. Only then you can enlighten others."
                        ]
                      },
                      {
                        "@type": "VDoc:Paragraph",
                        "VDoc:content": [
                          "You use tailored but real-world ValOS demo setups to illustrate\nhow ValOS a solution could be configured to meet the needs at hand.\nYour audience can be your customer, your team or even just\nyourself."
                        ]
                      }
                    ]
                  },
                  "package": "@valos/kernel-vault",
                  "version": "0.35.0-rc.33"
                }
              },
              "VDoc:map": {
                "VDoc:content": [
                  {
                    "@type": "VDoc:Chapter",
                    "dc:title": {
                      "VDoc:em": true,
                      "VDoc:content": [
                        {
                          "@type": "VDoc:Reference",
                          "VDoc:content": [
                            [
                              "How do ",
                              {
                                "VDoc:selectField": "title"
                              },
                              "?"
                            ]
                          ],
                          "VDoc:ref": [
                            "VDoc:selectKey",
                            "#introduction"
                          ]
                        }
                      ]
                    },
                    "VDoc:content": [
                      {
                        "VDoc:selectField": "introduction"
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        "valospaceAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The 'V' namespace defines the valospace resource types and fields."
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "V",
        "VRevdoc:baseIRI": "https://valospace.org/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/state/0#": "@valos/state/VState",
          "https://valospace.org/0#": "@valos/space/V",
          "https://valospace.org/log/0#": "@valos/log/VLog",
          "https://valospace.org/plot/0#": "@valos/plot/VPlot"
        },
        "VRevdoc:extenderModules": {},
        "package": "@valos/kernel-vault",
        "version": "0.35.0-rc.34"
      },
      "@id": "documents",
      "sbom": {
        "@id": "https://valospace.org/sbom",
        "tags": [
          "PRIMARY",
          "SBOM"
        ],
        "subProfiles": [],
        "title": "@valos/kernel-vault@0.35.0-rc.34 Software Bill of Materials",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This document is an autogenerated ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "CycloneDX"
                  ],
                  "VDoc:ref": "https://cyclonedx.org/"
                },
                " ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "SBoM document"
                  ],
                  "VDoc:ref": "https://www.owasp.org/index.php/Component_Analysis#Software_Bill-of-Materials_.28SBOM.29"
                }
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Configure @valos/type-vault-sbom.introduction section using",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VDoc source graph syntax"
                  ],
                  "VDoc:ref": "@valos/vdoc#source_graph"
                },
                "\nto define the content of this section."
              ]
            }
          ]
        },
        "package": "@valos/kernel-vault",
        "version": "0.35.0-rc.34"
      },
      "engine": {
        "@id": "https://valospace.org/engine",
        "tags": [
          "FABRIC",
          "WORKSPACE",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "@valos/engine library workspace",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "ValOS Engine API and Schema"
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Edit me - this is the first payload chapter. Abstract and SOTD are\nessential ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReSpec boilerplate"
                  ],
                  "VDoc:ref": "https://github.com/w3c/respec/wiki/ReSpec-Editor's-Guide#essential-w3c-boilerplate"
                }
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "See ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReVDoc tutorial"
                  ],
                  "VDoc:ref": "@valos/revdoc/tutorial"
                },
                " for\ninstructions on how to write revdoc source documents."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "See also ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReVdoc specification"
                  ],
                  "VDoc:ref": "@valos/revdoc"
                },
                " and ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VDoc specification"
                  ],
                  "VDoc:ref": "@valos/vdoc"
                },
                " for reference documentation."
              ]
            }
          ]
        },
        "fabricAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "'VEngine' namespace provides vocabulary for describing and defining\nthe valosheath and its types, objects, properties, methods and constants."
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VEngine",
        "VRevdoc:baseIRI": "https://valospace.org/engine/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/valk/0#": "@valos/valk/VValk",
          "https://valospace.org/state/0#": "@valos/state/VState",
          "https://valospace.org/0#": "@valos/space/V"
        },
        "VRevdoc:extenderModules": {
          "https://valospace.org/0#": "@valos/engine/V"
        },
        "package": "@valos/engine",
        "version": "0.35.0-rc.35"
      },
      "inspire/Lens/0": {
        "@id": "https://valospace.org/inspire/Lens/0",
        "tags": [
          "VALOSHEATH",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "Lens namespace",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This document describes how the ",
                {
                  "@type": "VRevdoc:Package",
                  "VDoc:content": [
                    {
                      "VDoc:em": true,
                      "VDoc:content": [
                        "@valos/inspire"
                      ]
                    }
                  ],
                  "VDoc:ref": "@valos/inspire"
                },
                " gateway\nrenders valospace user interfaces and also contains the 'Lens'\nnamespace API reference."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "See the ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "'On' namespace reference"
                  ],
                  "VDoc:ref": "@valos/sourcerer/On"
                },
                " for\nhow to access the HTML5 events API from valospace."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "A valos inspire application UI is written as ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VSX text content"
                  ],
                  "VDoc:ref": "#vsx"
                },
                " that is stored inside ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "valospace medias"
                  ],
                  "VDoc:ref": "V:Media"
                },
                ".\nThese media are in turn are referenced by ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    {
                      "VDoc:em": true,
                      "VDoc:content": [
                        "LENS properties"
                      ]
                    }
                  ],
                  "VDoc:ref": "#lens_properties"
                },
                "\nof valospace resources."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The application root resource has such a LENS property referencing the\napplication landing page VSX media. When this root resource is given as\nan entry point to the end-user @valos/inspire gateway it will load all\nnecessary application valospace resources. Using these resources and\ntheir medias the gateway presents the application user interface to the\nend-user as an interactive web application."
              ]
            }
          ]
        },
        "valosheathAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                [
                  "The 'Lens' namespace defines the primary valospace UI component\nvocabulary. This vocabulary is the API between the UI code written by\na valonaut and the @valos/inspire UI engine.",
                  "Roughly speaking the Lens namespace terms are:",
                  {
                    "VDoc:content": [
                      {
                        "@type": "VDoc:BulletList",
                        "VDoc:lines": [
                          [
                            "used by the Inspire engine to identify an attribute value given to\n  a UI element by the valonaut. Engine then uses this to either display\n  and customize the UI behavior or to invoke callbacks written by the\n  valonaut."
                          ],
                          {
                            "@type": "VDoc:Paragraph",
                            "VDoc:content": [
                              "used by the valonaut to instruct an UI element to use an value or\n  default implementation that is provided by the inspire engine and\n  is identified by the term."
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "\n\nThe 'Lens' terms are marked with tags which describe their qualities.\nThere are three primary tags:",
                  {
                    "VDoc:content": [
                      {
                        "@type": "VDoc:BulletList",
                        "VDoc:lines": [
                          [
                            {
                              "@type": "VDoc:Reference",
                              "VDoc:content": [
                                [
                                  {
                                    "VDoc:em": true,
                                    "VDoc:content": [
                                      "Attribute"
                                    ]
                                  }
                                ]
                              ],
                              "VDoc:ref": "#Attribute"
                            },
                            " tagged terms identify an ",
                            {
                              "@type": "VDoc:Reference",
                              "VDoc:content": [
                                "element attribute"
                              ],
                              "VDoc:ref": "@valos/inspire/Lens#section_element_attributes"
                            },
                            ". These attributes affect only the element itself."
                          ],
                          {
                            "@type": "VDoc:Paragraph",
                            "VDoc:content": [
                              {
                                "@type": "VDoc:Reference",
                                "VDoc:content": [
                                  [
                                    {
                                      "VDoc:em": true,
                                      "VDoc:content": [
                                        "Context"
                                      ]
                                    }
                                  ]
                                ],
                                "VDoc:ref": "#Context"
                              },
                              " tagged terms identify a ",
                              {
                                "@type": "VDoc:Reference",
                                "VDoc:content": [
                                  {
                                    "VDoc:em": true,
                                    "VDoc:content": [
                                      "context variable"
                                    ]
                                  }
                                ],
                                "VDoc:ref": "@valos/inspire/Lens#section_context_variables"
                              },
                              ". Context variables of an element affect all of its child elements."
                            ]
                          },
                          {
                            "@type": "VDoc:Paragraph",
                            "VDoc:content": [
                              {
                                "@type": "VDoc:Reference",
                                "VDoc:content": [
                                  [
                                    {
                                      "VDoc:em": true,
                                      "VDoc:content": [
                                        "Lens"
                                      ]
                                    }
                                  ]
                                ],
                                "VDoc:ref": "@valos/inspire/Lens#section_lens_terms"
                              },
                              " denotes\n  a term that can be used in VSX element bodies to display content"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  [
                    {
                      "VDoc:em": true,
                      "VDoc:content": [
                        "Lens"
                      ]
                    },
                    "-terms"
                  ],
                  " which are also tagged with either ",
                  [
                    {
                      "VDoc:em": true,
                      "VDoc:content": [
                        "Attribute"
                      ]
                    }
                  ],
                  " or ",
                  [
                    {
                      "VDoc:em": true,
                      "VDoc:content": [
                        "Context"
                      ]
                    }
                  ],
                  " are known as ",
                  {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "lens slots"
                    ],
                    "VDoc:ref": "@valos/inspire/Lens#lens_slots"
                  },
                  ".\n\nThere are also auxiliary tags:",
                  {
                    "VDoc:content": [
                      {
                        "@type": "VDoc:BulletList",
                        "VDoc:lines": [
                          [
                            "'Primary' denotes the most commonly used terms"
                          ],
                          {
                            "@type": "VDoc:Paragraph",
                            "VDoc:content": [
                              "'Internal' denotes a term that is not intended to be used directly\n  from valospace but has relevant internal semantics and is thus\n  documented."
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "Lens",
        "VRevdoc:baseIRI": "https://valospace.org/inspire/Lens/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/0#": "@valos/space/V",
          "https://valospace.org/inspire/On/0#": "@valos/sourcerer/On",
          "https://valospace.org/inspire/Lens/0#": "@valos/inspire/Lens"
        },
        "VRevdoc:extenderModules": {
          "https://valospace.org/inspire/On/0#": "@valos/inspire/On"
        },
        "package": "@valos/inspire",
        "version": "0.35.0-rc.35"
      },
      "inspire/Lens": {
        "@id": "https://valospace.org/inspire/Lens",
        "tags": [
          "VALOSHEATH",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "Lens namespace",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This document describes how the ",
                {
                  "@type": "VRevdoc:Package",
                  "VDoc:content": [
                    {
                      "VDoc:em": true,
                      "VDoc:content": [
                        "@valos/inspire"
                      ]
                    }
                  ],
                  "VDoc:ref": "@valos/inspire"
                },
                " gateway\nrenders valospace user interfaces and also contains the 'Lens'\nnamespace API reference."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "See the ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "'On' namespace reference"
                  ],
                  "VDoc:ref": "@valos/sourcerer/On"
                },
                " for\nhow to access the HTML5 events API from valospace."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "A valos inspire application UI is written as ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VSX text content"
                  ],
                  "VDoc:ref": "#vsx"
                },
                " that is stored inside ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "valospace medias"
                  ],
                  "VDoc:ref": "V:Media"
                },
                ".\nThese media are in turn are referenced by ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    {
                      "VDoc:em": true,
                      "VDoc:content": [
                        "LENS properties"
                      ]
                    }
                  ],
                  "VDoc:ref": "#lens_properties"
                },
                "\nof valospace resources."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The application root resource has such a LENS property referencing the\napplication landing page VSX media. When this root resource is given as\nan entry point to the end-user @valos/inspire gateway it will load all\nnecessary application valospace resources. Using these resources and\ntheir medias the gateway presents the application user interface to the\nend-user as an interactive web application."
              ]
            }
          ]
        },
        "valosheathAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                [
                  "The 'Lens' namespace defines the primary valospace UI component\nvocabulary. This vocabulary is the API between the UI code written by\na valonaut and the @valos/inspire UI engine.",
                  "Roughly speaking the Lens namespace terms are:",
                  {
                    "VDoc:content": [
                      {
                        "@type": "VDoc:BulletList",
                        "VDoc:lines": [
                          [
                            "used by the Inspire engine to identify an attribute value given to\n  a UI element by the valonaut. Engine then uses this to either display\n  and customize the UI behavior or to invoke callbacks written by the\n  valonaut."
                          ],
                          {
                            "@type": "VDoc:Paragraph",
                            "VDoc:content": [
                              "used by the valonaut to instruct an UI element to use an value or\n  default implementation that is provided by the inspire engine and\n  is identified by the term."
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "\n\nThe 'Lens' terms are marked with tags which describe their qualities.\nThere are three primary tags:",
                  {
                    "VDoc:content": [
                      {
                        "@type": "VDoc:BulletList",
                        "VDoc:lines": [
                          [
                            {
                              "@type": "VDoc:Reference",
                              "VDoc:content": [
                                [
                                  {
                                    "VDoc:em": true,
                                    "VDoc:content": [
                                      "Attribute"
                                    ]
                                  }
                                ]
                              ],
                              "VDoc:ref": "#Attribute"
                            },
                            " tagged terms identify an ",
                            {
                              "@type": "VDoc:Reference",
                              "VDoc:content": [
                                "element attribute"
                              ],
                              "VDoc:ref": "@valos/inspire/Lens#section_element_attributes"
                            },
                            ". These attributes affect only the element itself."
                          ],
                          {
                            "@type": "VDoc:Paragraph",
                            "VDoc:content": [
                              {
                                "@type": "VDoc:Reference",
                                "VDoc:content": [
                                  [
                                    {
                                      "VDoc:em": true,
                                      "VDoc:content": [
                                        "Context"
                                      ]
                                    }
                                  ]
                                ],
                                "VDoc:ref": "#Context"
                              },
                              " tagged terms identify a ",
                              {
                                "@type": "VDoc:Reference",
                                "VDoc:content": [
                                  {
                                    "VDoc:em": true,
                                    "VDoc:content": [
                                      "context variable"
                                    ]
                                  }
                                ],
                                "VDoc:ref": "@valos/inspire/Lens#section_context_variables"
                              },
                              ". Context variables of an element affect all of its child elements."
                            ]
                          },
                          {
                            "@type": "VDoc:Paragraph",
                            "VDoc:content": [
                              {
                                "@type": "VDoc:Reference",
                                "VDoc:content": [
                                  [
                                    {
                                      "VDoc:em": true,
                                      "VDoc:content": [
                                        "Lens"
                                      ]
                                    }
                                  ]
                                ],
                                "VDoc:ref": "@valos/inspire/Lens#section_lens_terms"
                              },
                              " denotes\n  a term that can be used in VSX element bodies to display content"
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  [
                    {
                      "VDoc:em": true,
                      "VDoc:content": [
                        "Lens"
                      ]
                    },
                    "-terms"
                  ],
                  " which are also tagged with either ",
                  [
                    {
                      "VDoc:em": true,
                      "VDoc:content": [
                        "Attribute"
                      ]
                    }
                  ],
                  " or ",
                  [
                    {
                      "VDoc:em": true,
                      "VDoc:content": [
                        "Context"
                      ]
                    }
                  ],
                  " are known as ",
                  {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "lens slots"
                    ],
                    "VDoc:ref": "@valos/inspire/Lens#lens_slots"
                  },
                  ".\n\nThere are also auxiliary tags:",
                  {
                    "VDoc:content": [
                      {
                        "@type": "VDoc:BulletList",
                        "VDoc:lines": [
                          [
                            "'Primary' denotes the most commonly used terms"
                          ],
                          {
                            "@type": "VDoc:Paragraph",
                            "VDoc:content": [
                              "'Internal' denotes a term that is not intended to be used directly\n  from valospace but has relevant internal semantics and is thus\n  documented."
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "Lens",
        "VRevdoc:baseIRI": "https://valospace.org/inspire/Lens/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/0#": "@valos/space/V",
          "https://valospace.org/inspire/On/0#": "@valos/sourcerer/On",
          "https://valospace.org/inspire/Lens/0#": "@valos/inspire/Lens"
        },
        "VRevdoc:extenderModules": {
          "https://valospace.org/inspire/On/0#": "@valos/inspire/On"
        },
        "package": "@valos/inspire",
        "version": "0.35.0-rc.35"
      },
      "inspire/On/0": {
        "@id": "https://valospace.org/inspire/On/0",
        "tags": [
          "VALOSHEATH",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "The valosheath 'On' namespace reference",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This document is a revdoc template document 'onNamespace' created by\nwrite-revdoc."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Edit me - this is the first payload chapter. Abstract and SOTD are\nessential ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReSpec boilerplate"
                  ],
                  "VDoc:ref": "https://github.com/w3c/respec/wiki/ReSpec-Editor's-Guide#essential-w3c-boilerplate"
                }
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "See ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReVDoc tutorial"
                  ],
                  "VDoc:ref": "@valos/revdoc/tutorial"
                },
                " for\ninstructions on how to write revdoc source documents."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "See also ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReVdoc specification"
                  ],
                  "VDoc:ref": "@valos/revdoc"
                },
                " and ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VDoc specification"
                  ],
                  "VDoc:ref": "@valos/vdoc"
                },
                " for reference documentation."
              ]
            }
          ]
        },
        "valosheathAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                [
                  "The ValOS 'On' namespace provides the event handler names used by\nValOS gateway both within fabric and valospace addEventHandler calls.",
                  null,
                  "Like HTML5 events these callbacks are called with a synthetic event as\ntheir first argument.",
                  "The namespace contains all new event names introduced by ",
                  {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "valos kernel"
                    ],
                    "VDoc:ref": "@valos/kernel"
                  },
                  " but also inherits all HTML5 event names verbatim.",
                  null,
                  "Note: ValOS event names will not conflict with currently known web\nevent names and effort is made to ensure that there are no future\nconflicts either. However should new web API event names conflict with\nvalos names the ValOS event names take primacy. Conflicting web event\nnames are then made available in the 'On' namespace with \"web\" text as\na prefix."
                ]
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "On",
        "VRevdoc:baseIRI": "https://valospace.org/inspire/On/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/0#": "@valos/space/V",
          "https://valospace.org/inspire/Lens/0#": "@valos/inspire/Lens",
          "https://valospace.org/state/0#": "@valos/state/VState",
          "https://valospace.org/log/0#": "@valos/log/VLog"
        },
        "VRevdoc:extenderModules": {
          "https://valospace.org/log/0#": "@valos/log/VLog",
          "https://valospace.org/0#": "@valos/sourcerer/V",
          "https://valospace.org/valk/0#": "@valos/sourcerer/VValk"
        },
        "package": "@valos/inspire",
        "version": "0.35.0-rc.35"
      },
      "inspire/On": {
        "@id": "https://valospace.org/inspire/On",
        "tags": [
          "VALOSHEATH",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "The valosheath 'On' namespace reference",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This document is a revdoc template document 'onNamespace' created by\nwrite-revdoc."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Edit me - this is the first payload chapter. Abstract and SOTD are\nessential ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReSpec boilerplate"
                  ],
                  "VDoc:ref": "https://github.com/w3c/respec/wiki/ReSpec-Editor's-Guide#essential-w3c-boilerplate"
                }
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "See ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReVDoc tutorial"
                  ],
                  "VDoc:ref": "@valos/revdoc/tutorial"
                },
                " for\ninstructions on how to write revdoc source documents."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "See also ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReVdoc specification"
                  ],
                  "VDoc:ref": "@valos/revdoc"
                },
                " and ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VDoc specification"
                  ],
                  "VDoc:ref": "@valos/vdoc"
                },
                " for reference documentation."
              ]
            }
          ]
        },
        "valosheathAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                [
                  "The ValOS 'On' namespace provides the event handler names used by\nValOS gateway both within fabric and valospace addEventHandler calls.",
                  null,
                  "Like HTML5 events these callbacks are called with a synthetic event as\ntheir first argument.",
                  "The namespace contains all new event names introduced by ",
                  {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "valos kernel"
                    ],
                    "VDoc:ref": "@valos/kernel"
                  },
                  " but also inherits all HTML5 event names verbatim.",
                  null,
                  "Note: ValOS event names will not conflict with currently known web\nevent names and effort is made to ensure that there are no future\nconflicts either. However should new web API event names conflict with\nvalos names the ValOS event names take primacy. Conflicting web event\nnames are then made available in the 'On' namespace with \"web\" text as\na prefix."
                ]
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "On",
        "VRevdoc:baseIRI": "https://valospace.org/inspire/On/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/0#": "@valos/space/V",
          "https://valospace.org/inspire/Lens/0#": "@valos/inspire/Lens",
          "https://valospace.org/state/0#": "@valos/state/VState",
          "https://valospace.org/log/0#": "@valos/log/VLog"
        },
        "VRevdoc:extenderModules": {
          "https://valospace.org/log/0#": "@valos/log/VLog",
          "https://valospace.org/0#": "@valos/sourcerer/V",
          "https://valospace.org/valk/0#": "@valos/sourcerer/VValk"
        },
        "package": "@valos/inspire",
        "version": "0.35.0-rc.35"
      },
      "inspire": {
        "@id": "https://valospace.org/inspire",
        "tags": [
          "FABRIC",
          "WORKSPACE",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "@valos/inspire library workspace",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "ValOS Inspire application gateway"
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Edit me - this is the first payload chapter. Abstract and SOTD are\nessential ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReSpec boilerplate"
                  ],
                  "VDoc:ref": "https://github.com/w3c/respec/wiki/ReSpec-Editor's-Guide#essential-w3c-boilerplate"
                }
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "See ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReVDoc tutorial"
                  ],
                  "VDoc:ref": "@valos/revdoc/tutorial"
                },
                " for\ninstructions on how to write revdoc source documents."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "See also ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReVdoc specification"
                  ],
                  "VDoc:ref": "@valos/revdoc"
                },
                " and ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VDoc specification"
                  ],
                  "VDoc:ref": "@valos/vdoc"
                },
                " for reference documentation."
              ]
            }
          ]
        },
        "fabricAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The inspire gateway fabric API"
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VInspire",
        "VRevdoc:baseIRI": "https://valospace.org/inspire/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/0#": "@valos/space/V",
          "https://valospace.org/inspire/Lens/0#": "@valos/inspire/Lens"
        },
        "VRevdoc:extenderModules": {
          "https://valospace.org/inspire/On/0#": "@valos/inspire/On"
        },
        "package": "@valos/inspire",
        "version": "0.35.0-rc.35"
      },
      "inspire/VRevela/0": {
        "@id": "https://valospace.org/inspire/VRevela/0",
        "tags": [
          "INTRODUCTORY",
          "FABRIC",
          "ONTOLOGY",
          "TESTDOC"
        ],
        "subProfiles": [],
        "title": "revela.json format specification",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "revela.json (pronounced: ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "revelation"
                  ]
                },
                ") is a JSON\nconfiguration file in which all \"!!!\" key values (",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "spreads"
                  ]
                },
                ")\nare evaluated and their results then spread and merged on top of the\nsurrounding object."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The evaluation allows for VPath operations, most notably importing\nrelative config files and accessing their subsections. Together the\nevaluation, spread and merge allow for fine-grained ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "DRY"
                  ],
                  "VDoc:ref": "https://en.wikipedia.org/wiki/Don%27t_repeat_yourself"
                },
                "\nfor various valos fabric config files."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VRevdoc:Example",
              "dc:title": "trivial revelation patch",
              "VDoc:content": [
                {
                  "@type": "VDoc:Paragraph",
                  "VDoc:content": [
                    [
                      "we expect",
                      {
                        "VDoc:blockquote": true,
                        "VDoc:content": [
                          {
                            "@type": "VDoc:CharacterData",
                            "VDoc:content": [
                              " lazyPatchRevelations(gatewayMock,\n    { a: [1] },\n    { a: [2] })"
                            ]
                          }
                        ]
                      }
                    ],
                    "toEqual",
                    {
                      "VDoc:blockquote": true,
                      "VDoc:content": [
                        {
                          "@type": "VDoc:CharacterData",
                          "VDoc:content": [
                            " ({ a: [1, 2] })"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "@type": "VRevdoc:Example",
              "dc:title": "spread of a simple relative import",
              "VDoc:content": [
                {
                  "@type": "VDoc:Paragraph",
                  "VDoc:content": [
                    [
                      "we expect",
                      {
                        "VDoc:blockquote": true,
                        "VDoc:content": [
                          {
                            "@type": "VDoc:CharacterData",
                            "VDoc:content": [
                              " lazyPatchRevelations(gatewayMock,\n    {},\n    { \"!!!\": \"./path\" })"
                            ]
                          }
                        ]
                      }
                    ],
                    "toMatchObject",
                    {
                      "VDoc:blockquote": true,
                      "VDoc:content": [
                        {
                          "@type": "VDoc:CharacterData",
                          "VDoc:content": [
                            " ({ revealOrigin: \"/site/revelation/path\", someField: 1 })"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "@type": "VRevdoc:Example",
              "dc:title": "spread of an explicit site root import followed by field access",
              "VDoc:content": [
                {
                  "@type": "VDoc:Paragraph",
                  "VDoc:content": [
                    [
                      "we expect",
                      {
                        "VDoc:blockquote": true,
                        "VDoc:content": [
                          {
                            "@type": "VDoc:CharacterData",
                            "VDoc:content": [
                              " lazyPatchRevelations(gatewayMock,\n    \"\",\n    { \"!!!\": [\"/path\", \"revealOrigin\"] })"
                            ]
                          }
                        ]
                      }
                    ],
                    "toEqual",
                    {
                      "VDoc:blockquote": true,
                      "VDoc:content": [
                        {
                          "@type": "VDoc:CharacterData",
                          "VDoc:content": [
                            "\"/site/path\""
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "@type": "VRevdoc:Example",
              "dc:title": "spread of a URI import followed by pick-array append",
              "VDoc:content": [
                {
                  "@type": "VDoc:Paragraph",
                  "VDoc:content": [
                    [
                      "we expect",
                      {
                        "VDoc:blockquote": true,
                        "VDoc:content": [
                          {
                            "@type": "VDoc:CharacterData",
                            "VDoc:content": [
                              " lazyPatchRevelations(gatewayMock,\n    [0],\n    { \"!!!\": [\n      [\"@$https.foobar.com%2Fpath\"],\n      [[\"@.:fetchedField\"], [\"@.:options@.:revealOrigin@@\"]],\n    ] },\n    undefined,\n    [\"last\"])"
                            ]
                          }
                        ]
                      }
                    ],
                    "toEqual",
                    {
                      "VDoc:blockquote": true,
                      "VDoc:content": [
                        {
                          "@type": "VDoc:CharacterData",
                          "VDoc:content": [
                            " [0, 1, \"https://foobar.com/path\", \"last\"]"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "@type": "VRevdoc:Example",
              "dc:title": "non-evaluated spreader contents to be segmented but non-cemented",
              "VDoc:content": [
                {
                  "@type": "VDoc:Paragraph",
                  "VDoc:content": [
                    [
                      "we expect",
                      {
                        "VDoc:blockquote": true,
                        "VDoc:content": [
                          {
                            "@type": "VDoc:CharacterData",
                            "VDoc:content": [
                              " lazyPatchRevelations(gatewayMock,\n    {},\n    { \"!!!\": [\"@@\", [{ value: [\"@$expanded.but-unbound\"] }]] })"
                            ]
                          }
                        ]
                      }
                    ],
                    "toEqual",
                    {
                      "VDoc:blockquote": true,
                      "VDoc:content": [
                        {
                          "@type": "VDoc:CharacterData",
                          "VDoc:content": [
                            " ({ value: [\"@$expanded\", \"but-unbound\"] })"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "@type": "VRevdoc:Example",
              "dc:title": "nested import & invoke spread to resolve all spreads",
              "VDoc:content": [
                {
                  "@type": "VDoc:Paragraph",
                  "VDoc:content": [
                    [
                      "we expect",
                      {
                        "VDoc:blockquote": true,
                        "VDoc:content": [
                          {
                            "@type": "VDoc:CharacterData",
                            "VDoc:content": [
                              " expose(lazyPatchRevelations(gatewayMock,\n    {},\n    {\n      out: {\n        \"!!!\": {\n          prefixes: {\n            \"/test/v0\": {\n              name: \"test\",\n              \"test-lib\": {\n                preset: 10, overridden: 10, sessionDuration: 0,\n                view: { focus: \"focus to be overwritten\", nulled: \"nulled to be overwritten\" },\n                unboundAndUnsegmented: [\"@$un.bound\"],\n              },\n            },\n          },\n        },\n        prefixes: {\n          \"/test/v0\": {\n            \"!!!\": [\"@@\", [\"@!:test-lib\"], [\"@!invoke:callMe\", [{\n              view: {\n                focus: \"valaa-aws://example.org/deployment?id=@$~raw.f0c5-f0c5@@\",\n                nulled: null,\n              },\n              identity: { \"!!!\": [\"./config\", \"revealOrigin\"] },\n              sessionDuration: 86400,\n              unboundButSectioned: [\"@$also.unbound\"],\n            }]]],\n            \"test-lib\": { overridden: 20 },\n          },\n        }\n      }\n    }))"
                            ]
                          }
                        ]
                      }
                    ],
                    "toEqual",
                    {
                      "VDoc:blockquote": true,
                      "VDoc:content": [
                        {
                          "@type": "VDoc:CharacterData",
                          "VDoc:content": [
                            " ({\n  out: {\n    prefixes: {\n      \"/test/v0\": {\n        name: \"test\",\n        \"test-lib\": {\n          preset: 10, overridden: 20, sessionDuration: 86400,\n          view: { focus: \"valaa-aws://example.org/deployment?id=@$~raw.f0c5-f0c5@@\", nulled: null },\n          identity: \"/site/revelation/config\",\n          unboundAndUnsegmented: [\"@$un.bound\"],\n          unboundButSectioned: [\"@$also\", \"unbound\"],\n        }\n      }\n    }\n  }\n})"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        "fabricAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "'VRevela' namespace provides the vocabulary for revela.json\nconfiguration files."
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VRevela",
        "VRevdoc:baseIRI": "https://valospace.org/revela/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/plot/0#": "@valos/plot/VPlot",
          "https://valospace.org/state/0#": "@valos/state/VState",
          "https://valospace.org/valk/0#": "@valos/valk/VValk",
          "https://valospace.org/0#": "@valos/space/V",
          "https://valospace.org/inspire/Lens/0#": "@valos/inspire/Lens"
        },
        "VRevdoc:extenderModules": {
          "https://valospace.org/inspire/On/0#": "@valos/inspire/On"
        },
        "package": "@valos/inspire",
        "version": "0.35.0-rc.35"
      },
      "inspire/VRevela": {
        "@id": "https://valospace.org/inspire/VRevela",
        "tags": [
          "INTRODUCTORY",
          "FABRIC",
          "ONTOLOGY",
          "TESTDOC"
        ],
        "subProfiles": [],
        "title": "revela.json format specification",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "revela.json (pronounced: ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "revelation"
                  ]
                },
                ") is a JSON\nconfiguration file in which all \"!!!\" key values (",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "spreads"
                  ]
                },
                ")\nare evaluated and their results then spread and merged on top of the\nsurrounding object."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The evaluation allows for VPath operations, most notably importing\nrelative config files and accessing their subsections. Together the\nevaluation, spread and merge allow for fine-grained ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "DRY"
                  ],
                  "VDoc:ref": "https://en.wikipedia.org/wiki/Don%27t_repeat_yourself"
                },
                "\nfor various valos fabric config files."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VRevdoc:Example",
              "dc:title": "trivial revelation patch",
              "VDoc:content": [
                {
                  "@type": "VDoc:Paragraph",
                  "VDoc:content": [
                    [
                      "we expect",
                      {
                        "VDoc:blockquote": true,
                        "VDoc:content": [
                          {
                            "@type": "VDoc:CharacterData",
                            "VDoc:content": [
                              " lazyPatchRevelations(gatewayMock,\n    { a: [1] },\n    { a: [2] })"
                            ]
                          }
                        ]
                      }
                    ],
                    "toEqual",
                    {
                      "VDoc:blockquote": true,
                      "VDoc:content": [
                        {
                          "@type": "VDoc:CharacterData",
                          "VDoc:content": [
                            " ({ a: [1, 2] })"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "@type": "VRevdoc:Example",
              "dc:title": "spread of a simple relative import",
              "VDoc:content": [
                {
                  "@type": "VDoc:Paragraph",
                  "VDoc:content": [
                    [
                      "we expect",
                      {
                        "VDoc:blockquote": true,
                        "VDoc:content": [
                          {
                            "@type": "VDoc:CharacterData",
                            "VDoc:content": [
                              " lazyPatchRevelations(gatewayMock,\n    {},\n    { \"!!!\": \"./path\" })"
                            ]
                          }
                        ]
                      }
                    ],
                    "toMatchObject",
                    {
                      "VDoc:blockquote": true,
                      "VDoc:content": [
                        {
                          "@type": "VDoc:CharacterData",
                          "VDoc:content": [
                            " ({ revealOrigin: \"/site/revelation/path\", someField: 1 })"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "@type": "VRevdoc:Example",
              "dc:title": "spread of an explicit site root import followed by field access",
              "VDoc:content": [
                {
                  "@type": "VDoc:Paragraph",
                  "VDoc:content": [
                    [
                      "we expect",
                      {
                        "VDoc:blockquote": true,
                        "VDoc:content": [
                          {
                            "@type": "VDoc:CharacterData",
                            "VDoc:content": [
                              " lazyPatchRevelations(gatewayMock,\n    \"\",\n    { \"!!!\": [\"/path\", \"revealOrigin\"] })"
                            ]
                          }
                        ]
                      }
                    ],
                    "toEqual",
                    {
                      "VDoc:blockquote": true,
                      "VDoc:content": [
                        {
                          "@type": "VDoc:CharacterData",
                          "VDoc:content": [
                            "\"/site/path\""
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "@type": "VRevdoc:Example",
              "dc:title": "spread of a URI import followed by pick-array append",
              "VDoc:content": [
                {
                  "@type": "VDoc:Paragraph",
                  "VDoc:content": [
                    [
                      "we expect",
                      {
                        "VDoc:blockquote": true,
                        "VDoc:content": [
                          {
                            "@type": "VDoc:CharacterData",
                            "VDoc:content": [
                              " lazyPatchRevelations(gatewayMock,\n    [0],\n    { \"!!!\": [\n      [\"@$https.foobar.com%2Fpath\"],\n      [[\"@.:fetchedField\"], [\"@.:options@.:revealOrigin@@\"]],\n    ] },\n    undefined,\n    [\"last\"])"
                            ]
                          }
                        ]
                      }
                    ],
                    "toEqual",
                    {
                      "VDoc:blockquote": true,
                      "VDoc:content": [
                        {
                          "@type": "VDoc:CharacterData",
                          "VDoc:content": [
                            " [0, 1, \"https://foobar.com/path\", \"last\"]"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "@type": "VRevdoc:Example",
              "dc:title": "non-evaluated spreader contents to be segmented but non-cemented",
              "VDoc:content": [
                {
                  "@type": "VDoc:Paragraph",
                  "VDoc:content": [
                    [
                      "we expect",
                      {
                        "VDoc:blockquote": true,
                        "VDoc:content": [
                          {
                            "@type": "VDoc:CharacterData",
                            "VDoc:content": [
                              " lazyPatchRevelations(gatewayMock,\n    {},\n    { \"!!!\": [\"@@\", [{ value: [\"@$expanded.but-unbound\"] }]] })"
                            ]
                          }
                        ]
                      }
                    ],
                    "toEqual",
                    {
                      "VDoc:blockquote": true,
                      "VDoc:content": [
                        {
                          "@type": "VDoc:CharacterData",
                          "VDoc:content": [
                            " ({ value: [\"@$expanded\", \"but-unbound\"] })"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "@type": "VRevdoc:Example",
              "dc:title": "nested import & invoke spread to resolve all spreads",
              "VDoc:content": [
                {
                  "@type": "VDoc:Paragraph",
                  "VDoc:content": [
                    [
                      "we expect",
                      {
                        "VDoc:blockquote": true,
                        "VDoc:content": [
                          {
                            "@type": "VDoc:CharacterData",
                            "VDoc:content": [
                              " expose(lazyPatchRevelations(gatewayMock,\n    {},\n    {\n      out: {\n        \"!!!\": {\n          prefixes: {\n            \"/test/v0\": {\n              name: \"test\",\n              \"test-lib\": {\n                preset: 10, overridden: 10, sessionDuration: 0,\n                view: { focus: \"focus to be overwritten\", nulled: \"nulled to be overwritten\" },\n                unboundAndUnsegmented: [\"@$un.bound\"],\n              },\n            },\n          },\n        },\n        prefixes: {\n          \"/test/v0\": {\n            \"!!!\": [\"@@\", [\"@!:test-lib\"], [\"@!invoke:callMe\", [{\n              view: {\n                focus: \"valaa-aws://example.org/deployment?id=@$~raw.f0c5-f0c5@@\",\n                nulled: null,\n              },\n              identity: { \"!!!\": [\"./config\", \"revealOrigin\"] },\n              sessionDuration: 86400,\n              unboundButSectioned: [\"@$also.unbound\"],\n            }]]],\n            \"test-lib\": { overridden: 20 },\n          },\n        }\n      }\n    }))"
                            ]
                          }
                        ]
                      }
                    ],
                    "toEqual",
                    {
                      "VDoc:blockquote": true,
                      "VDoc:content": [
                        {
                          "@type": "VDoc:CharacterData",
                          "VDoc:content": [
                            " ({\n  out: {\n    prefixes: {\n      \"/test/v0\": {\n        name: \"test\",\n        \"test-lib\": {\n          preset: 10, overridden: 20, sessionDuration: 86400,\n          view: { focus: \"valaa-aws://example.org/deployment?id=@$~raw.f0c5-f0c5@@\", nulled: null },\n          identity: \"/site/revelation/config\",\n          unboundAndUnsegmented: [\"@$un.bound\"],\n          unboundButSectioned: [\"@$also\", \"unbound\"],\n        }\n      }\n    }\n  }\n})"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        "fabricAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "'VRevela' namespace provides the vocabulary for revela.json\nconfiguration files."
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VRevela",
        "VRevdoc:baseIRI": "https://valospace.org/revela/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/plot/0#": "@valos/plot/VPlot",
          "https://valospace.org/state/0#": "@valos/state/VState",
          "https://valospace.org/valk/0#": "@valos/valk/VValk",
          "https://valospace.org/0#": "@valos/space/V",
          "https://valospace.org/inspire/Lens/0#": "@valos/inspire/Lens"
        },
        "VRevdoc:extenderModules": {
          "https://valospace.org/inspire/On/0#": "@valos/inspire/On"
        },
        "package": "@valos/inspire",
        "version": "0.35.0-rc.35"
      },
      "kernel/0": {
        "@id": "https://valospace.org/kernel/0",
        "tags": [
          "PRIMARY",
          "DOMAIN",
          "ONTOLOGY",
          "TECHNICIAN"
        ],
        "subProfiles": [],
        "title": "@valos/kernel domain content reference",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "@valos/kernel domain  includes all core infrastructure components of ValOS -\nthe Valaa Open System."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "These components are hosted at the ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "npmjs repository within @valos namespace"
                  ],
                  "VDoc:ref": "https://www.npmjs.com/search?q=%40valos"
                },
                "."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "These components are developed at the ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "valos git repository"
                  ],
                  "VDoc:ref": "https://github.com/valaatech/kernel"
                },
                "."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "ValOS ecosystem revolves around various roles. This document is\na reference document of the ValOS fabric systems and structures\nand is directed for technicians. Check out the brief\ndescription and introductions of the other roles as well."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "Valma"
                  ],
                  "VDoc:ref": "Valma"
                },
                " itself is a collection of tools for interacting\nwith the ValOS ecosystem, most notable of which is ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    [
                      {
                        "VDoc:em": true,
                        "VDoc:content": [
                          "vlm"
                        ]
                      },
                      " the command line script invoker"
                    ]
                  ],
                  "VDoc:ref": "@/valma"
                },
                "."
              ]
            },
            {
              "VDoc:lookup": "documents",
              "@type": "VDoc:Table",
              "VDoc:columns": {
                "VDoc:entries": [
                  {
                    "@type": "VDoc:Header",
                    "VDoc:content": [
                      "Your role:"
                    ],
                    "VDoc:cell": {
                      "VDoc:heading": true,
                      "VDoc:content": [
                        {
                          "VDoc:strong": true,
                          "VDoc:content": [
                            {
                              "@type": "VDoc:Reference",
                              "VDoc:content": [
                                "VDoc:selectKey"
                              ],
                              "VDoc:ref": "VDoc:selectKey"
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "@type": "VDoc:Header",
                    "VDoc:content": [
                      "Your answer..."
                    ],
                    "VDoc:cell": {
                      "VDoc:strong": true,
                      "VDoc:content": [
                        {
                          "VDoc:em": true,
                          "VDoc:content": [
                            {
                              "@type": "VDoc:Reference",
                              "VDoc:content": [
                                {
                                  "VDoc:selectField": "title"
                                }
                              ],
                              "VDoc:ref": [
                                "VDoc:selectKey",
                                "#introduction"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "VDoc:cell": "introduction",
                    "@type": "VDoc:Header",
                    "VDoc:content": {
                      "VDoc:em": true,
                      "VDoc:content": [
                        "Introduction:"
                      ]
                    },
                    "VDoc:wide": true,
                    "VDoc:tall": true
                  },
                  {
                    "@type": "VDoc:Header",
                    "VDoc:content": {
                      "VDoc:em": true,
                      "VDoc:content": [
                        "Aliases:"
                      ]
                    },
                    "VDoc:wide": true,
                    "VDoc:cell": {
                      "VDoc:em": true,
                      "VDoc:content": [
                        {
                          "@type": "VDoc:Reference",
                          "VDoc:content": [
                            {
                              "VDoc:words": {
                                "VDoc:selectField": "subProfiles"
                              }
                            }
                          ],
                          "VDoc:ref": [
                            "VDoc:selectKey",
                            "#section_profiles"
                          ]
                        }
                      ]
                    }
                  }
                ]
              },
              "VDoc:entries": [
                "technician",
                "valonaut",
                "voyager"
              ]
            }
          ]
        },
        "fabricAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The 'VKernel' namespace provides the vocabulary for valos fabric core\nconcepts and for describing and defining valos ontologies in specific."
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VKernel",
        "VRevdoc:baseIRI": "https://valospace.org/kernel/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/state/0#": "@valos/state/VState",
          "https://valospace.org/valk/0#": "@valos/valk/VValk",
          "https://valospace.org/log/0#": "@valos/log/VLog"
        },
        "VRevdoc:extenderModules": {},
        "package": "@valos/kernel",
        "version": "0.35.0-rc.35"
      },
      "kernel": {
        "@id": "https://valospace.org/kernel",
        "tags": [
          "PRIMARY",
          "DOMAIN",
          "ONTOLOGY",
          "TECHNICIAN"
        ],
        "subProfiles": [],
        "title": "@valos/kernel domain content reference",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "@valos/kernel domain  includes all core infrastructure components of ValOS -\nthe Valaa Open System."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "These components are hosted at the ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "npmjs repository within @valos namespace"
                  ],
                  "VDoc:ref": "https://www.npmjs.com/search?q=%40valos"
                },
                "."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "These components are developed at the ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "valos git repository"
                  ],
                  "VDoc:ref": "https://github.com/valaatech/kernel"
                },
                "."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "ValOS ecosystem revolves around various roles. This document is\na reference document of the ValOS fabric systems and structures\nand is directed for technicians. Check out the brief\ndescription and introductions of the other roles as well."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "Valma"
                  ],
                  "VDoc:ref": "Valma"
                },
                " itself is a collection of tools for interacting\nwith the ValOS ecosystem, most notable of which is ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    [
                      {
                        "VDoc:em": true,
                        "VDoc:content": [
                          "vlm"
                        ]
                      },
                      " the command line script invoker"
                    ]
                  ],
                  "VDoc:ref": "@/valma"
                },
                "."
              ]
            },
            {
              "VDoc:lookup": "documents",
              "@type": "VDoc:Table",
              "VDoc:columns": {
                "VDoc:entries": [
                  {
                    "@type": "VDoc:Header",
                    "VDoc:content": [
                      "Your role:"
                    ],
                    "VDoc:cell": {
                      "VDoc:heading": true,
                      "VDoc:content": [
                        {
                          "VDoc:strong": true,
                          "VDoc:content": [
                            {
                              "@type": "VDoc:Reference",
                              "VDoc:content": [
                                "VDoc:selectKey"
                              ],
                              "VDoc:ref": "VDoc:selectKey"
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "@type": "VDoc:Header",
                    "VDoc:content": [
                      "Your answer..."
                    ],
                    "VDoc:cell": {
                      "VDoc:strong": true,
                      "VDoc:content": [
                        {
                          "VDoc:em": true,
                          "VDoc:content": [
                            {
                              "@type": "VDoc:Reference",
                              "VDoc:content": [
                                {
                                  "VDoc:selectField": "title"
                                }
                              ],
                              "VDoc:ref": [
                                "VDoc:selectKey",
                                "#introduction"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "VDoc:cell": "introduction",
                    "@type": "VDoc:Header",
                    "VDoc:content": {
                      "VDoc:em": true,
                      "VDoc:content": [
                        "Introduction:"
                      ]
                    },
                    "VDoc:wide": true,
                    "VDoc:tall": true
                  },
                  {
                    "@type": "VDoc:Header",
                    "VDoc:content": {
                      "VDoc:em": true,
                      "VDoc:content": [
                        "Aliases:"
                      ]
                    },
                    "VDoc:wide": true,
                    "VDoc:cell": {
                      "VDoc:em": true,
                      "VDoc:content": [
                        {
                          "@type": "VDoc:Reference",
                          "VDoc:content": [
                            {
                              "VDoc:words": {
                                "VDoc:selectField": "subProfiles"
                              }
                            }
                          ],
                          "VDoc:ref": [
                            "VDoc:selectKey",
                            "#section_profiles"
                          ]
                        }
                      ]
                    }
                  }
                ]
              },
              "VDoc:entries": [
                "technician",
                "valonaut",
                "voyager"
              ]
            }
          ]
        },
        "fabricAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The 'VKernel' namespace provides the vocabulary for valos fabric core\nconcepts and for describing and defining valos ontologies in specific."
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VKernel",
        "VRevdoc:baseIRI": "https://valospace.org/kernel/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/state/0#": "@valos/state/VState",
          "https://valospace.org/valk/0#": "@valos/valk/VValk",
          "https://valospace.org/log/0#": "@valos/log/VLog"
        },
        "VRevdoc:extenderModules": {},
        "package": "@valos/kernel",
        "version": "0.35.0-rc.35"
      },
      "log": {
        "@id": "https://valospace.org/log",
        "tags": [
          "WORKSPACE",
          "FABRIC",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "@valos/log library workspace",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Specifies the ValOS event log JSON-LD format and the 'VLog' namespace"
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "VLog"
                  ]
                },
                " together with ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VState:"
                  ],
                  "VDoc:ref": "VState:"
                },
                " ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VPlot:"
                  ],
                  "VDoc:ref": "VPlot:"
                },
                " and ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VValk:"
                  ],
                  "VDoc:ref": "VValk:"
                },
                " forms the infrastructural foundation ie. the ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "fabric"
                  ]
                },
                " of the valospace.",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "VLog"
                  ]
                },
                " provides the temporal dimension and so enables change and reactions."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Edit me - this is the first payload chapter. Abstract and SOTD are\nessential ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReSpec boilerplate"
                  ],
                  "VDoc:ref": "https://github.com/w3c/respec/wiki/ReSpec-Editor's-Guide#essential-w3c-boilerplate"
                }
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "See ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReVDoc tutorial"
                  ],
                  "VDoc:ref": "@valos/revdoc/tutorial"
                },
                " for\ninstructions on how to write revdoc source documents."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "See also ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReVdoc specification"
                  ],
                  "VDoc:ref": "@valos/revdoc"
                },
                " and ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VDoc specification"
                  ],
                  "VDoc:ref": "@valos/vdoc"
                },
                " for reference documentation."
              ]
            }
          ]
        },
        "fabricAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The vocabulary for defining the ValOS chronicle event log structure\nand for adding content and behaviors to it."
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VLog",
        "VRevdoc:baseIRI": "https://valospace.org/log/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/plot/0#": "@valos/plot/VPlot",
          "https://valospace.org/state/0#": "@valos/state/VState",
          "https://valospace.org/valk/0#": "@valos/valk/VValk"
        },
        "VRevdoc:extenderModules": {},
        "package": "@valos/log",
        "version": "0.35.0-rc.35"
      },
      "plot": {
        "@id": "https://valospace.org/plot",
        "tags": [
          "WORKSPACE",
          "FABRIC",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "@valos/plot library workspace",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Specifies the hierarchical ValOS plot string format and the 'VPlot' namespace"
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "VPlot"
                  ]
                },
                " together with ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VState:"
                  ],
                  "VDoc:ref": "VState:"
                },
                " ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VLog:"
                  ],
                  "VDoc:ref": "VLog:"
                },
                " and ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VValk:"
                  ],
                  "VDoc:ref": "VValk:"
                },
                " form the infrastructural foundation ie. the ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "fabric"
                  ]
                },
                " of the valospace.",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "VPlot"
                  ]
                },
                " provides the basic primitive used to identify resources\nand define computations and so underlies the other three fabric\ncomponents."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Edit me - this is the first payload chapter. Abstract and SOTD are\nessential ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReSpec boilerplate"
                  ],
                  "VDoc:ref": "https://github.com/w3c/respec/wiki/ReSpec-Editor's-Guide#essential-w3c-boilerplate"
                }
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "See ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReVDoc tutorial"
                  ],
                  "VDoc:ref": "@valos/revdoc/tutorial"
                },
                " for\ninstructions on how to write revdoc source documents."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "See also ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReVdoc specification"
                  ],
                  "VDoc:ref": "@valos/revdoc"
                },
                " and ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VDoc specification"
                  ],
                  "VDoc:ref": "@valos/vdoc"
                },
                " for reference documentation."
              ]
            }
          ]
        },
        "fabricAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The vocabulary for defining the hierarchical ValOS identifiers and for\nextending them with new step semantics"
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VPlot",
        "VRevdoc:baseIRI": "https://valospace.org/plot/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/state/0#": "@valos/state/VState",
          "https://valospace.org/log/0#": "@valos/log/VLog",
          "https://valospace.org/valk/0#": "@valos/valk/VValk"
        },
        "VRevdoc:extenderModules": {},
        "package": "@valos/plot",
        "version": "0.35.0-rc.35"
      },
      "raem/0": {
        "@id": "https://valospace.org/raem/0",
        "tags": [
          "PRIMARY",
          "INTRODUCTORY",
          "VALOSPACE",
          "WORKSPACE",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "ValOS Resources And Events Model (ValOS-RAEM) API, schema and ontology",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This library provides the definitions and reference implementation\nfor the fundamental ",
                {
                  "@type": "VDoc:CharacterData",
                  "VDoc:content": [
                    "ValOS Resources"
                  ]
                },
                " and ",
                {
                  "@type": "VDoc:CharacterData",
                  "VDoc:content": [
                    "ValOS Events"
                  ]
                },
                "\nsystems."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This library provides the definitions and reference implementations\nfor the fundamental ",
                {
                  "@type": "VDoc:CharacterData",
                  "VDoc:content": [
                    "ValOS Resources"
                  ]
                },
                " and ",
                {
                  "@type": "VDoc:CharacterData",
                  "VDoc:content": [
                    "ValOS Events"
                  ]
                },
                "\nsystems."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                {
                  "VDoc:q": true,
                  "VDoc:content": [
                    [
                      "A ValOS Resource ",
                      {
                        "@type": "VDoc:CharacterData",
                        "VDoc:content": [
                          "resource"
                        ]
                      },
                      " represents a well-defined part of\n  the world. It has a well-defined state at each particular moment in time."
                    ]
                  ]
                }
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                {
                  "VDoc:q": true,
                  "VDoc:content": [
                    [
                      "A ValOS Event ",
                      {
                        "@type": "VDoc:CharacterData",
                        "VDoc:content": [
                          "event"
                        ]
                      },
                      " represents a dynamic change to a\n  resource by describing the change from previous to subsequent resource\n  states at a particular time."
                    ]
                  ]
                }
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The interplay of these distinct yet interwoven systems forms the\nfoundation of the Valaa Open System."
              ]
            }
          ]
        },
        "valospaceAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The 'VRaem' namespace describes the @valos/raem library public API."
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VRaem",
        "VRevdoc:baseIRI": "https://valospace.org/raem/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/state/0#": "@valos/state/VState",
          "https://valospace.org/log/0#": "@valos/log/VLog",
          "https://valospace.org/valk/0#": "@valos/valk/VValk",
          "https://valospace.org/0#": "@valos/space/V",
          "https://valospace.org/plot/0#": "@valos/plot/VPlot"
        },
        "VRevdoc:extenderModules": {
          "https://valospace.org/state/0#": "@valos/raem/VState",
          "https://valospace.org/valk/0#": "@valos/raem/VValk",
          "https://valospace.org/0#": "@valos/raem/V"
        },
        "package": "@valos/raem",
        "version": "0.35.0-rc.35"
      },
      "raem": {
        "@id": "https://valospace.org/raem",
        "tags": [
          "PRIMARY",
          "INTRODUCTORY",
          "VALOSPACE",
          "WORKSPACE",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "ValOS Resources And Events Model (ValOS-RAEM) API, schema and ontology",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This library provides the definitions and reference implementation\nfor the fundamental ",
                {
                  "@type": "VDoc:CharacterData",
                  "VDoc:content": [
                    "ValOS Resources"
                  ]
                },
                " and ",
                {
                  "@type": "VDoc:CharacterData",
                  "VDoc:content": [
                    "ValOS Events"
                  ]
                },
                "\nsystems."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This library provides the definitions and reference implementations\nfor the fundamental ",
                {
                  "@type": "VDoc:CharacterData",
                  "VDoc:content": [
                    "ValOS Resources"
                  ]
                },
                " and ",
                {
                  "@type": "VDoc:CharacterData",
                  "VDoc:content": [
                    "ValOS Events"
                  ]
                },
                "\nsystems."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                {
                  "VDoc:q": true,
                  "VDoc:content": [
                    [
                      "A ValOS Resource ",
                      {
                        "@type": "VDoc:CharacterData",
                        "VDoc:content": [
                          "resource"
                        ]
                      },
                      " represents a well-defined part of\n  the world. It has a well-defined state at each particular moment in time."
                    ]
                  ]
                }
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                {
                  "VDoc:q": true,
                  "VDoc:content": [
                    [
                      "A ValOS Event ",
                      {
                        "@type": "VDoc:CharacterData",
                        "VDoc:content": [
                          "event"
                        ]
                      },
                      " represents a dynamic change to a\n  resource by describing the change from previous to subsequent resource\n  states at a particular time."
                    ]
                  ]
                }
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The interplay of these distinct yet interwoven systems forms the\nfoundation of the Valaa Open System."
              ]
            }
          ]
        },
        "valospaceAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The 'VRaem' namespace describes the @valos/raem library public API."
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VRaem",
        "VRevdoc:baseIRI": "https://valospace.org/raem/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/state/0#": "@valos/state/VState",
          "https://valospace.org/log/0#": "@valos/log/VLog",
          "https://valospace.org/valk/0#": "@valos/valk/VValk",
          "https://valospace.org/0#": "@valos/space/V",
          "https://valospace.org/plot/0#": "@valos/plot/VPlot"
        },
        "VRevdoc:extenderModules": {
          "https://valospace.org/state/0#": "@valos/raem/VState",
          "https://valospace.org/valk/0#": "@valos/raem/VValk",
          "https://valospace.org/0#": "@valos/raem/V"
        },
        "package": "@valos/raem",
        "version": "0.35.0-rc.35"
      },
      "raem/VPath/VPath.JSON": {
        "@id": "https://valospace.org/raem/VPath/VPath.JSON",
        "tags": [],
        "subProfiles": [],
        "title": "VPath JSON representations",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "VPath JSON is a JSON representation of VPath strings. It\nhas two formats: generic 'VPath outlines' and their strict subset\n'sectioned VPaths'."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Sectioned VPaths are the verbose, machine-processible canonical\nJSON 1-1 representation of VPath strings. Outlines are the more\nconcise, writable and readable but non-canonical format: many different\noutlines can have the same VPath meaning. The normalization of an\noutline into its canonical, sectioned VPath is called disjoining."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "As sectioned VPaths are a subset of VPath outlines, a sectioned VPath\nalways disjoins into itself.\n"
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "VPath JSON is a JSON representation of a VPath string.\nDifferent VPath JSON objects can express the same VPath which allows\nthe most suitable representation to be chosen based on use case."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The canonical subset of VPath JSON (with 1-1 mapping to VPath strings)\nis called sectioned VPaths. These use a limited subset of JSON\nprimitives and are designed to be easily machine-processible."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Finally, the remaining, non-sectioned VPath JSON objects are called\nVPath outlines. Arbitrary JSON objects can be trivially escaped as\nVPath outline, allowing for generic JSON <-> VPath roundtripping.\nEdit me - this is the first payload chapter. Abstract and SOTD are\nessential ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReSpec boilerplate"
                  ],
                  "VDoc:ref": "https://github.com/w3c/respec/wiki/ReSpec-Editor's-Guide#essential-w3c-boilerplate"
                }
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "See ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReVDoc tutorial"
                  ],
                  "VDoc:ref": "@valos/revdoc/tutorial"
                },
                " for\ninstructions on how to write revdoc source documents."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "See also ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReVdoc specification"
                  ],
                  "VDoc:ref": "@valos/revdoc"
                },
                " and ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VDoc specification"
                  ],
                  "VDoc:ref": "@valos/vdoc"
                },
                " for reference documentation."
              ]
            }
          ]
        },
        "package": "@valos/raem",
        "version": "0.35.0-rc.35"
      },
      "raem/VPath/VPath": {
        "@id": "https://valospace.org/raem/VPath/VPath",
        "tags": [],
        "subProfiles": [],
        "title": "ValOS Path",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "ValOS Paths ('VPaths') are recursively structured general purpose\nstrings. They have a simple grammar making them readily URI embeddable."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "A step below JSON in generality they are the fundamental\nprimitive used by valos to implement resource identifiers, valospace\nqueries, deterministic JSON serialization, an intermediate language\nfor computation, a configuration language, JSON-LD interactions and\nmore."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "VPaths have a formalized mechanism for making parameterized use of\ncontext-specific definitions. This enables integrations to semantic\nweb. This context-specific yet formally semantic system forms the\ncornerstone of valos security architecture."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "\nA subset of VPaths called 'vrids' contain a fixed starting point and\nidentify valospace resources."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "VPaths contain 'context terms' which refer to definitions provided by\nthe surrounding context, usually as references to some external\nontology. This allows VPath semantics to be extended in domain\nspecific but reusable manner."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The primary example of a VPath context is the JSON-LD @context of a ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ValOS event chronicle"
                  ],
                  "VDoc:ref": "@valos/sourcerer/valos-event-log"
                },
                "\nwhich provides the semantics for all VPaths that appear inside the\nchronicle.\n    "
              ]
            }
          ]
        },
        "package": "@valos/raem",
        "version": "0.35.0-rc.35"
      },
      "revdoc/0": {
        "@id": "https://valospace.org/revdoc/0",
        "tags": [
          "PRIMARY",
          "FABRIC",
          "WORKSPACE",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "ReVDoc - ReSpec document VDoc extension",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This document specifies VRevdoc, a ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VDoc extension"
                  ],
                  "VDoc:ref": "@valos/vdoc#extension"
                },
                "\nfor extracting and emitting ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReSpec documents"
                  ],
                  "VDoc:ref": "https://github.com/w3c/respec"
                },
                "."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "VRevdoc is a VDoc extension which can produce ReSpec documents."
              ]
            }
          ]
        },
        "fabricAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "'VRevdoc' namespace provides vocabulary and definitions which are\ntailored for emitting ReSpec html output documents."
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VRevdoc",
        "VRevdoc:baseIRI": "https://valospace.org/revdoc/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/vdoc/0#": "@valos/vdoc/VDoc",
          "https://valospace.org/revdoc/0#": "@valos/revdoc/VRevdoc"
        },
        "VRevdoc:extenderModules": {},
        "package": "@valos/revdoc",
        "version": "0.35.0-rc.35"
      },
      "revdoc": {
        "@id": "https://valospace.org/revdoc",
        "tags": [
          "PRIMARY",
          "FABRIC",
          "WORKSPACE",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "ReVDoc - ReSpec document VDoc extension",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This document specifies VRevdoc, a ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VDoc extension"
                  ],
                  "VDoc:ref": "@valos/vdoc#extension"
                },
                "\nfor extracting and emitting ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReSpec documents"
                  ],
                  "VDoc:ref": "https://github.com/w3c/respec"
                },
                "."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "VRevdoc is a VDoc extension which can produce ReSpec documents."
              ]
            }
          ]
        },
        "fabricAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "'VRevdoc' namespace provides vocabulary and definitions which are\ntailored for emitting ReSpec html output documents."
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VRevdoc",
        "VRevdoc:baseIRI": "https://valospace.org/revdoc/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/vdoc/0#": "@valos/vdoc/VDoc",
          "https://valospace.org/revdoc/0#": "@valos/revdoc/VRevdoc"
        },
        "VRevdoc:extenderModules": {},
        "package": "@valos/revdoc",
        "version": "0.35.0-rc.35"
      },
      "revdoc/tutorial": {
        "@id": "https://valospace.org/revdoc/tutorial",
        "tags": [],
        "subProfiles": [],
        "title": "ReVDoc Tutorial",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This document is a revdoc template document 'tutorial' created by\nwrite-revdoc."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Edit me - this is the first payload chapter. Abstract and SOTD are\nessential ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReSpec boilerplate"
                  ],
                  "VDoc:ref": "https://github.com/w3c/respec/wiki/ReSpec-Editor's-Guide#essential-w3c-boilerplate"
                },
                "."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "See ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReVDoc tutorial"
                  ],
                  "VDoc:ref": "@valos/revdoc/tutorial"
                },
                " for\ninstructions on how to write revdoc source documents."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "See also ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReVdoc specification"
                  ],
                  "VDoc:ref": "@valos/revdoc"
                },
                " and ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VDoc specification"
                  ],
                  "VDoc:ref": "@valos/vdoc"
                },
                " for reference documentation."
              ]
            }
          ]
        },
        "package": "@valos/revdoc",
        "version": "0.35.0-rc.35"
      },
      "sbomdoc/0": {
        "@id": "https://valospace.org/sbomdoc/0",
        "tags": [
          "PRIMARY",
          "FABRIC",
          "WORKSPACE",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "SBoMDoc - Software Bill of Materials VDoc extension",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This document specifies SBomDoc, a ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VDoc extension"
                  ],
                  "VDoc:ref": "@valos/vdoc#extension"
                },
                "\nfor extracting and emitting ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "CycloneDX BOM documents"
                  ],
                  "VDoc:ref": "https://cyclonedx.org/"
                },
                "\nin various formats."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "VSbomdoc is a VDoc extension which uses CycloneDX namespaces and can\nemit BOM documents in various formats."
              ]
            }
          ]
        },
        "fabricAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "'VSbomdoc' namespace provides vocabulary and definitions which are\ntailored for representing CycloneDX SBoM analysis semantic content."
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VSbomdoc",
        "VRevdoc:baseIRI": "https://valospace.org/sbomdoc/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/vdoc/0#": "@valos/vdoc/VDoc",
          "https://valospace.org/revdoc/0#": "@valos/revdoc/VRevdoc",
          "https://valospace.org/sbomdoc/0#": "@valos/sbomdoc/VSbomdoc"
        },
        "VRevdoc:extenderModules": {},
        "package": "@valos/sbomdoc",
        "version": "0.35.0-rc.35"
      },
      "sbomdoc": {
        "@id": "https://valospace.org/sbomdoc",
        "tags": [
          "PRIMARY",
          "FABRIC",
          "WORKSPACE",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "SBoMDoc - Software Bill of Materials VDoc extension",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This document specifies SBomDoc, a ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VDoc extension"
                  ],
                  "VDoc:ref": "@valos/vdoc#extension"
                },
                "\nfor extracting and emitting ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "CycloneDX BOM documents"
                  ],
                  "VDoc:ref": "https://cyclonedx.org/"
                },
                "\nin various formats."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "VSbomdoc is a VDoc extension which uses CycloneDX namespaces and can\nemit BOM documents in various formats."
              ]
            }
          ]
        },
        "fabricAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "'VSbomdoc' namespace provides vocabulary and definitions which are\ntailored for representing CycloneDX SBoM analysis semantic content."
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VSbomdoc",
        "VRevdoc:baseIRI": "https://valospace.org/sbomdoc/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/vdoc/0#": "@valos/vdoc/VDoc",
          "https://valospace.org/revdoc/0#": "@valos/revdoc/VRevdoc",
          "https://valospace.org/sbomdoc/0#": "@valos/sbomdoc/VSbomdoc"
        },
        "VRevdoc:extenderModules": {},
        "package": "@valos/sbomdoc",
        "version": "0.35.0-rc.35"
      },
      "script/0": {
        "@id": "https://valospace.org/script/0",
        "tags": [
          "PRIMARY",
          "INTRODUCTORY",
          "VALOSPACE",
          "WORKSPACE",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "ValOS Script API, schema",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This library provides the definitions and reference implementation\nfor valoscript, the valospace ECMAScript dialect."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Valoscript extends ECMAScript 5 object model transparently for\nmanipulating valospace resources. The valoscript interpreter creates ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "events"
                  ],
                  "VDoc:ref": "VLog:Event"
                },
                " from all valospace resource\nmodification side-effects and groups all such side effects into\ntransactions. Valoscript retains ECMAScript 5 syntax and semantics."
              ]
            }
          ]
        },
        "valospaceAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The 'VScript' namespace describes the @valos/sourcerer API."
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VScript",
        "VRevdoc:baseIRI": "https://valospace.org/script/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/state/0#": "@valos/state/VState",
          "https://valospace.org/log/0#": "@valos/log/VLog",
          "https://valospace.org/valk/0#": "@valos/valk/VValk"
        },
        "VRevdoc:extenderModules": {
          "https://valospace.org/0#": "@valos/script/V",
          "https://valospace.org/valk/0#": "@valos/script/VValk"
        },
        "package": "@valos/script",
        "version": "0.35.0-rc.35"
      },
      "script": {
        "@id": "https://valospace.org/script",
        "tags": [
          "PRIMARY",
          "INTRODUCTORY",
          "VALOSPACE",
          "WORKSPACE",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "ValOS Script API, schema",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This library provides the definitions and reference implementation\nfor valoscript, the valospace ECMAScript dialect."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Valoscript extends ECMAScript 5 object model transparently for\nmanipulating valospace resources. The valoscript interpreter creates ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "events"
                  ],
                  "VDoc:ref": "VLog:Event"
                },
                " from all valospace resource\nmodification side-effects and groups all such side effects into\ntransactions. Valoscript retains ECMAScript 5 syntax and semantics."
              ]
            }
          ]
        },
        "valospaceAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The 'VScript' namespace describes the @valos/sourcerer API."
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VScript",
        "VRevdoc:baseIRI": "https://valospace.org/script/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/state/0#": "@valos/state/VState",
          "https://valospace.org/log/0#": "@valos/log/VLog",
          "https://valospace.org/valk/0#": "@valos/valk/VValk"
        },
        "VRevdoc:extenderModules": {
          "https://valospace.org/0#": "@valos/script/V",
          "https://valospace.org/valk/0#": "@valos/script/VValk"
        },
        "package": "@valos/script",
        "version": "0.35.0-rc.35"
      },
      "sourcerer/0": {
        "@id": "https://valospace.org/sourcerer/0",
        "tags": [
          "PRIMARY",
          "INTRODUCTORY",
          "VALOSPACE",
          "WORKSPACE",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "ValOS Sourcerer API, schema",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This library provides the definitions and reference implementation\nof the ValOS sourcerer architecture which is used to route ",
                {
                  "@type": "VDoc:CharacterData",
                  "VDoc:content": [
                    "ValOS event streams"
                  ]
                },
                "."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": []
        },
        "valospaceAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The 'VSourcerer' namespace describes the @valos/sourcerer library public API."
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VSourcerer",
        "VRevdoc:baseIRI": "https://valospace.org/sourcerer/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/state/0#": "@valos/state/VState",
          "https://valospace.org/log/0#": "@valos/log/VLog",
          "https://valospace.org/valk/0#": "@valos/valk/VValk",
          "https://valospace.org/0#": "@valos/space/V"
        },
        "VRevdoc:extenderModules": {
          "https://valospace.org/log/0#": "@valos/log/VLog",
          "https://valospace.org/0#": "@valos/sourcerer/V",
          "https://valospace.org/valk/0#": "@valos/sourcerer/VValk"
        },
        "package": "@valos/sourcerer",
        "version": "0.35.0-rc.35"
      },
      "sourcerer": {
        "@id": "https://valospace.org/sourcerer",
        "tags": [
          "PRIMARY",
          "INTRODUCTORY",
          "VALOSPACE",
          "WORKSPACE",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "ValOS Sourcerer API, schema",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This library provides the definitions and reference implementation\nof the ValOS sourcerer architecture which is used to route ",
                {
                  "@type": "VDoc:CharacterData",
                  "VDoc:content": [
                    "ValOS event streams"
                  ]
                },
                "."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": []
        },
        "valospaceAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The 'VSourcerer' namespace describes the @valos/sourcerer library public API."
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VSourcerer",
        "VRevdoc:baseIRI": "https://valospace.org/sourcerer/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/state/0#": "@valos/state/VState",
          "https://valospace.org/log/0#": "@valos/log/VLog",
          "https://valospace.org/valk/0#": "@valos/valk/VValk",
          "https://valospace.org/0#": "@valos/space/V"
        },
        "VRevdoc:extenderModules": {
          "https://valospace.org/log/0#": "@valos/log/VLog",
          "https://valospace.org/0#": "@valos/sourcerer/V",
          "https://valospace.org/valk/0#": "@valos/sourcerer/VValk"
        },
        "package": "@valos/sourcerer",
        "version": "0.35.0-rc.35"
      },
      "sourcerer/valos-event-log": {
        "@id": "https://valospace.org/sourcerer/valos-event-log",
        "tags": [],
        "subProfiles": [],
        "title": "ValOS Event Log",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "ValOS Event Log is an ordered, numbered sequence of JSON-LD documents.\nEach document represents a single event. Together these events\nincrementally, exclusively and deterministically specify the state\nchanges of a single valospace chronicle from its initial empty state to\nthe current state after the most recent event."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "TODO."
              ]
            }
          ]
        },
        "package": "@valos/sourcerer",
        "version": "0.35.0-rc.35"
      },
      "sourcerer/VState": {
        "@id": "https://valospace.org/sourcerer/VState",
        "tags": [],
        "subProfiles": [],
        "title": "ValOS state serialization format",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "ValOS state format specification for serializing valospace state into\na JSON-LD document with a well-defined underlying semantic ontology."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "JSON-LD is the primary state format. Some of this information is lost\nwhen it is expanded as triples.\n"
              ]
            },
            {
              "@id": "state_example"
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "\nTODO."
              ]
            }
          ]
        },
        "package": "@valos/sourcerer",
        "version": "0.35.0-rc.35"
      },
      "space": {
        "@id": "https://valospace.org/space",
        "tags": [
          "WORKSPACE",
          "VALOSPACE",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "@valos/space library workspace",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Specifies 'valospace' the globally distributed resource network and its related 'V' ontology namespace"
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Edit me - this is the first payload chapter. Abstract and SOTD are\nessential ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReSpec boilerplate"
                  ],
                  "VDoc:ref": "https://github.com/w3c/respec/wiki/ReSpec-Editor's-Guide#essential-w3c-boilerplate"
                }
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "See ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReVDoc tutorial"
                  ],
                  "VDoc:ref": "@valos/revdoc/tutorial"
                },
                " for\ninstructions on how to write revdoc source documents."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "See also ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReVdoc specification"
                  ],
                  "VDoc:ref": "@valos/revdoc"
                },
                " and ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VDoc specification"
                  ],
                  "VDoc:ref": "@valos/vdoc"
                },
                " for reference documentation."
              ]
            }
          ]
        },
        "valospaceAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The 'V' namespace defines the valospace resource types and fields."
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "V",
        "VRevdoc:baseIRI": "https://valospace.org/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/state/0#": "@valos/state/VState",
          "https://valospace.org/0#": "@valos/space/V",
          "https://valospace.org/log/0#": "@valos/log/VLog",
          "https://valospace.org/plot/0#": "@valos/plot/VPlot"
        },
        "VRevdoc:extenderModules": {},
        "package": "@valos/space",
        "version": "0.35.0-rc.35"
      },
      "state": {
        "@id": "https://valospace.org/state",
        "tags": [
          "WORKSPACE",
          "FABRIC",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "@valos/state library workspace",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Provides the ValOS resource state specification and the 'VState' ontology namespace"
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "VState"
                  ]
                },
                " together with ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VLog:"
                  ],
                  "VDoc:ref": "VLog:"
                },
                " ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VPlot:"
                  ],
                  "VDoc:ref": "VPlot:"
                },
                " and ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VValk:"
                  ],
                  "VDoc:ref": "VValk:"
                },
                " form the infrastructural foundation ie. the ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "fabric"
                  ]
                },
                " of the valospace.",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "VState"
                  ]
                },
                " provides the data model and so enables structure and\nmeanings."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Edit me - this is the first payload chapter. Abstract and SOTD are\nessential ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReSpec boilerplate"
                  ],
                  "VDoc:ref": "https://github.com/w3c/respec/wiki/ReSpec-Editor's-Guide#essential-w3c-boilerplate"
                }
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "See ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReVDoc tutorial"
                  ],
                  "VDoc:ref": "@valos/revdoc/tutorial"
                },
                " for\ninstructions on how to write revdoc source documents."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "See also ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReVdoc specification"
                  ],
                  "VDoc:ref": "@valos/revdoc"
                },
                " and ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VDoc specification"
                  ],
                  "VDoc:ref": "@valos/vdoc"
                },
                " for reference documentation."
              ]
            }
          ]
        },
        "fabricAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The vocabulary for defining the ValOS state core model and for\nextending it with new types and fields."
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VState",
        "VRevdoc:baseIRI": "https://valospace.org/state/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/plot/0#": "@valos/plot/VPlot",
          "https://valospace.org/log/0#": "@valos/log/VLog",
          "https://valospace.org/valk/0#": "@valos/valk/VValk",
          "https://valospace.org/0#": "@valos/space/V"
        },
        "VRevdoc:extenderModules": {},
        "package": "@valos/state",
        "version": "0.35.0-rc.35"
      },
      "twindoc/0": {
        "@id": "https://valospace.org/twindoc/0",
        "tags": [
          "PRIMARY",
          "FABRIC",
          "WORKSPACE",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "TwinDoc - Valospace Hypertwin VDoc extension",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This document specifies VTwindoc, a ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VDoc extension"
                  ],
                  "VDoc:ref": "@valos/vdoc#extension"
                },
                "\nwhich specifies an isomorphism and synchronization transformations\nbetween VDoc documents and valospace resources."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "More specifically VTwindoc allows for the serialization and\ndeserialization of an arbitrary selection of valospace resources\ninto a VDoc document array and back even if the source resources\nare not a representation of a VDoc document nor use any VDoc core\nor extension ontologies."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "VTwindoc provides both full isomorphic synchronization as well as\nincremental, additive updates between VDoc documents and valospace\nresources.\nThe fully isomoprhic extraction and emission transformations to\nvalospace resources provide lossless roundtrips to both directions:",
                {
                  "VDoc:content": [
                    {
                      "@type": "VDoc:NumberedList",
                      "VDoc:lines": [
                        [
                          "emit + extract: a roundtrip starting from VDocState into valospace back into VDocState"
                        ],
                        {
                          "@type": "VDoc:Paragraph",
                          "VDoc:content": [
                            "extract + emit: a roundtrip starting from valospace into VDocState back into valospace"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "VTwindoc also specifies incremental transformations which are given\na diff base in addition to the source and which compute a diffset and\nthen merge the resulting diffset to the pre-existing transformation\ntarget. This not only gives performance advantages but also makes it\npossible to have the final document be a combination of several\npartial primary sources."
              ]
            }
          ]
        },
        "fabricAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "'VTwindoc' namespace provides vocabulary for defining hypertwin\nmappings and configurations; actual hypertwin content is represented\nusing the valos core ontologies and possible extension content\nontologies."
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VTwindoc",
        "VRevdoc:baseIRI": "https://valospace.org/twindoc/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/twindoc/0#": "@valos/twindoc/VTwindoc"
        },
        "VRevdoc:extenderModules": {},
        "package": "@valos/twindoc",
        "version": "0.35.0-rc.35"
      },
      "twindoc": {
        "@id": "https://valospace.org/twindoc",
        "tags": [
          "PRIMARY",
          "FABRIC",
          "WORKSPACE",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "TwinDoc - Valospace Hypertwin VDoc extension",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This document specifies VTwindoc, a ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VDoc extension"
                  ],
                  "VDoc:ref": "@valos/vdoc#extension"
                },
                "\nwhich specifies an isomorphism and synchronization transformations\nbetween VDoc documents and valospace resources."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "More specifically VTwindoc allows for the serialization and\ndeserialization of an arbitrary selection of valospace resources\ninto a VDoc document array and back even if the source resources\nare not a representation of a VDoc document nor use any VDoc core\nor extension ontologies."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "VTwindoc provides both full isomorphic synchronization as well as\nincremental, additive updates between VDoc documents and valospace\nresources.\nThe fully isomoprhic extraction and emission transformations to\nvalospace resources provide lossless roundtrips to both directions:",
                {
                  "VDoc:content": [
                    {
                      "@type": "VDoc:NumberedList",
                      "VDoc:lines": [
                        [
                          "emit + extract: a roundtrip starting from VDocState into valospace back into VDocState"
                        ],
                        {
                          "@type": "VDoc:Paragraph",
                          "VDoc:content": [
                            "extract + emit: a roundtrip starting from valospace into VDocState back into valospace"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "VTwindoc also specifies incremental transformations which are given\na diff base in addition to the source and which compute a diffset and\nthen merge the resulting diffset to the pre-existing transformation\ntarget. This not only gives performance advantages but also makes it\npossible to have the final document be a combination of several\npartial primary sources."
              ]
            }
          ]
        },
        "fabricAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "'VTwindoc' namespace provides vocabulary for defining hypertwin\nmappings and configurations; actual hypertwin content is represented\nusing the valos core ontologies and possible extension content\nontologies."
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VTwindoc",
        "VRevdoc:baseIRI": "https://valospace.org/twindoc/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/twindoc/0#": "@valos/twindoc/VTwindoc"
        },
        "VRevdoc:extenderModules": {},
        "package": "@valos/twindoc",
        "version": "0.35.0-rc.35"
      },
      "type-vault/AssortedTutorials": {
        "@id": "https://valospace.org/type-vault/AssortedTutorials",
        "tags": [
          "PRIMARY",
          "HOW_TO"
        ],
        "subProfiles": [],
        "title": "Assorted tutorials",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            "This document is a collection of tutorials and possibly other notes",
            " created by Jaradacl based on the tasks given. (During first few days at least)"
          ]
        },
        "introduction": {},
        "package": "@valos/type-vault",
        "version": "0.35.0-rc.35"
      },
      "valk": {
        "@id": "https://valospace.org/valk",
        "tags": [
          "WORKSPACE",
          "FABRIC",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "@valos/valk library workspace",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Provides the ValOS core model computation specification and the 'VValk' ontology namespace"
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "VValk"
                  ]
                },
                " together with ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VState:"
                  ],
                  "VDoc:ref": "VState:"
                },
                " ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VLog:"
                  ],
                  "VDoc:ref": "VLog:"
                },
                " and ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VPlot:"
                  ],
                  "VDoc:ref": "VPlot:"
                },
                " form the infrastructural foundation ie. the ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "fabric"
                  ]
                },
                " of the valospace.",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "VValk"
                  ]
                },
                " provides the intermediate language used for declarative\nand imperative logic alike."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Edit me - this is the first payload chapter. Abstract and SOTD are\nessential ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReSpec boilerplate"
                  ],
                  "VDoc:ref": "https://github.com/w3c/respec/wiki/ReSpec-Editor's-Guide#essential-w3c-boilerplate"
                }
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "See ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReVDoc tutorial"
                  ],
                  "VDoc:ref": "@valos/revdoc/tutorial"
                },
                " for\ninstructions on how to write revdoc source documents."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "See also ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "ReVdoc specification"
                  ],
                  "VDoc:ref": "@valos/revdoc"
                },
                " and ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VDoc specification"
                  ],
                  "VDoc:ref": "@valos/vdoc"
                },
                " for reference documentation."
              ]
            }
          ]
        },
        "fabricAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The vocabulary for defining ValOS computations and for\nadding defining new semantics to it."
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VValk",
        "VRevdoc:baseIRI": "https://valospace.org/valk/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/plot/0#": "@valos/plot/VPlot",
          "https://valospace.org/state/0#": "@valos/state/VState",
          "https://valospace.org/log/0#": "@valos/log/VLog",
          "https://valospace.org/0#": "@valos/space/V"
        },
        "VRevdoc:extenderModules": {},
        "package": "@valos/valk",
        "version": "0.35.0-rc.35"
      },
      "vdoc/0": {
        "@id": "https://valospace.org/vdoc/0",
        "tags": [
          "PRIMARY",
          "FABRIC",
          "WORKSPACE",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "VDoc - ValOS document interchange specification",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This document specifies VDoc, a ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "a JSON-LD"
                  ],
                  "VDoc:ref": "https://www.w3.org/TR/json-ld11/"
                },
                "-based documentation\nhuman-machine-valospace interchange format."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                {
                  "VRevdoc:dfn": "#vdoc",
                  "VDoc:content": [
                    {
                      "VDoc:strong": true,
                      "VDoc:content": [
                        {
                          "@type": "VDoc:Reference",
                          "VDoc:content": [
                            "VDoc"
                          ],
                          "VDoc:ref": "#vdoc"
                        }
                      ]
                    },
                    " is an extensible JSON-LD interchange\n  specification for extracting documents from varying sources,\n  passing the now-machine-manipulable interchange document around\n  and subsequently producing documents of specific formats such\n  as Valospace resources, markdown, ReSpec HTML and browser and\n  ansi-colored console outputs."
                  ]
                }
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Motivation for this specification is to provide the foundation for\ndocument ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "Valospace hypertwins"
                  ],
                  "VDoc:ref": "@valos/hypertwin"
                },
                " by\nsupporting the ValOS resources as an emission target. This allows all\nkinds of documents to be accessible from within Valospace with minimal\nadditional tooling.\nThis is not made an explicit design goal unto itself; instead the\ndesign goals are chosen to be generic in a way that satisfies this goal\nas the original author believes this leads to better design."
              ]
            }
          ]
        },
        "fabricAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                [
                  "'VDoc' namespace specifies the vocabulary for the human facing\ndocument structure of the valos document interchange format.",
                  "Human facing structure includes primitives such as chapters, titles,\nlists, tables, cross-references etc.: primitives which are sufficiently\ncommon and meaningful across all types of documents.\n\nVDoc core ontology explicitly does not specify any semantic meanings\noutside the document structure itself."
                ]
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VDoc",
        "VRevdoc:baseIRI": "https://valospace.org/vdoc/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/vdoc/0#": "@valos/vdoc/VDoc"
        },
        "VRevdoc:extenderModules": {},
        "package": "@valos/vdoc",
        "version": "0.35.0-rc.35"
      },
      "vdoc": {
        "@id": "https://valospace.org/vdoc",
        "tags": [
          "PRIMARY",
          "FABRIC",
          "WORKSPACE",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "VDoc - ValOS document interchange specification",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This document specifies VDoc, a ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "a JSON-LD"
                  ],
                  "VDoc:ref": "https://www.w3.org/TR/json-ld11/"
                },
                "-based documentation\nhuman-machine-valospace interchange format."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                {
                  "VRevdoc:dfn": "#vdoc",
                  "VDoc:content": [
                    {
                      "VDoc:strong": true,
                      "VDoc:content": [
                        {
                          "@type": "VDoc:Reference",
                          "VDoc:content": [
                            "VDoc"
                          ],
                          "VDoc:ref": "#vdoc"
                        }
                      ]
                    },
                    " is an extensible JSON-LD interchange\n  specification for extracting documents from varying sources,\n  passing the now-machine-manipulable interchange document around\n  and subsequently producing documents of specific formats such\n  as Valospace resources, markdown, ReSpec HTML and browser and\n  ansi-colored console outputs."
                  ]
                }
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Motivation for this specification is to provide the foundation for\ndocument ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "Valospace hypertwins"
                  ],
                  "VDoc:ref": "@valos/hypertwin"
                },
                " by\nsupporting the ValOS resources as an emission target. This allows all\nkinds of documents to be accessible from within Valospace with minimal\nadditional tooling.\nThis is not made an explicit design goal unto itself; instead the\ndesign goals are chosen to be generic in a way that satisfies this goal\nas the original author believes this leads to better design."
              ]
            }
          ]
        },
        "fabricAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                [
                  "'VDoc' namespace specifies the vocabulary for the human facing\ndocument structure of the valos document interchange format.",
                  "Human facing structure includes primitives such as chapters, titles,\nlists, tables, cross-references etc.: primitives which are sufficiently\ncommon and meaningful across all types of documents.\n\nVDoc core ontology explicitly does not specify any semantic meanings\noutside the document structure itself."
                ]
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VDoc",
        "VRevdoc:baseIRI": "https://valospace.org/vdoc/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/vdoc/0#": "@valos/vdoc/VDoc"
        },
        "VRevdoc:extenderModules": {},
        "package": "@valos/vdoc",
        "version": "0.35.0-rc.35"
      },
      "web-spindle": {
        "@id": "https://valospace.org/web-spindle",
        "tags": [],
        "subProfiles": [],
        "title": "Web API spindle",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Web API spindle extends the gateway with a http(s) service endpoint\nwhich maps valospace resources to a RESTful API using a reusable\ndeclarative route mapping definition JSON-LD document."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Once a well-defined mapping definition for some use case is created and\ndocumented by a technician then all valonauts are able to create\nconforming resource structures fully inside the valospace. After that\na service provider can be commissioned to expose those resources via\nsome internet endpoint using the mapping definition."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "As is traditional the web API spindle is configured via a set of route\npatterns which are matched against incoming request IRIs."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The mapping definition is JSON-LD document (created by a technician)\nwhich describes a set of routes and their mapping vpaths to valospace\nresources. These paths typically originate from a single, configurable\n",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "service index"
                  ]
                },
                " valospace resource."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "A well-defined and documented mapping definition for some use case can\nbe reused. A valonaut can create a conforming valospace service index\nand its surrounding resource structure and then request for a service\nfrom a ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "web API provider"
                  ]
                },
                " by providing only the mapping\ndefinition, the service index and any necessary security credentials."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The route definition format is ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "JSON schema"
                  ],
                  "VDoc:ref": "https://json-schema.org/"
                },
                " which is as expected used to describe the route request and response\ndata types. These route specs can optionally exposed via an ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "OpenAPI 3.0.0"
                  ],
                  "VDoc:ref": "https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md"
                },
                " (or newer) route). In addition to route format specification the\ndefinition schema includes the ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "declarative mapping definitions"
                  ],
                  "VDoc:ref": "#section_mapping_definition"
                },
                " from the route requests to valospace resources and eventually back to\nresponses."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The sub-library ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "schema-builder"
                  ],
                  "VDoc:ref": "@valos/web-spindle/schema-builder"
                },
                "\ncontains the convenience functions that can be used to build the schema\ndescription types and routes and also emit the plain data description\nobjects which the web API spindle can then consume."
              ]
            }
          ]
        },
        "package": "@valos/web-spindle",
        "version": "0.35.0-rc.35"
      },
      "web-spindle/schema-builder": {
        "@id": "https://valospace.org/web-spindle/schema-builder",
        "tags": [],
        "subProfiles": [],
        "title": "Web API Schema Builder TestDoc",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Schema builder is a javascript library for exporting a site\nconfiguration that can be consumed by the Web API spindle. This config\nis a fully declarative ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "JSON schema"
                  ],
                  "VDoc:ref": "http://json-schema.org/"
                },
                "-based format which not just describes the external API routes and\ntypes but also defines their valospace projections using embedded ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "VPath"
                  ],
                  "VDoc:ref": "@valos/raem/VPath"
                },
                "."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This library is primarily intended to be used from inside a\n",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "spindle configuration library"
                  ]
                },
                " which is invoked from inside\na ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "revela.json"
                  ],
                  "VDoc:ref": "@valos/inspire/revela"
                },
                " gateway to emit\nthe JSON configuration."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The four schema builder concepts are:"
              ]
            },
            {
              "@type": "VDoc:BulletList",
              "VDoc:lines": [
                [
                  {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "Site configuration"
                    ],
                    "VDoc:ref": "#section_site_configuration"
                  },
                  " is the\n  JSON output of this library, consumable by Web API spindle."
                ],
                {
                  "@type": "VDoc:Paragraph",
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "Type and property schemas"
                      ],
                      "VDoc:ref": "#section_schemas"
                    },
                    " describe\n  layouts of Web API and valospace resources and properties. These are\n  used for GET result body contents, POST, PATCH and PUT request body\n  fields. When exported in the site configuration these are transformed\n  into shared schema objects."
                  ]
                },
                {
                  "@type": "VDoc:Paragraph",
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "Routes definitions"
                      ],
                      "VDoc:ref": "#section_routes"
                    },
                    " are the traditional\n  tool to define the request entry points and to descrbibe their\n  parameters. Routes tie into valospace resources via gate projections\n  which are embedded inside primary type schemas."
                  ]
                },
                {
                  "@type": "VDoc:Paragraph",
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "Projections and reflections"
                      ],
                      "VDoc:ref": "#section_projections"
                    },
                    " are ",
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "VPaths"
                      ],
                      "VDoc:ref": "@valos/raem/VPath"
                    },
                    " that are embedded in the gates\n  and types respectively and which define paths into and between\n  valospace resources, respectively"
                  ]
                }
              ]
            }
          ]
        },
        "package": "@valos/web-spindle",
        "version": "0.35.0-rc.35"
      },
      "removed-from": {
        "@id": "https://valospace.org/removed-from",
        "tags": [
          "VALOSPACE",
          "ONTOLOGY",
          "TECHNICIAN"
        ],
        "subProfiles": [],
        "title": "@valos/kernel removed-from field reference",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Ontology of the secondary `removed-from` fields of the primary\nvalospace fields which have them (ie. those which statefully track\nentries that have been removed from them)."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Some container fields maintain a hidden list of entries that have been\nremoved from them, f.ex. for expressing removals from ghost fields\nwhich are empty as they inherit their entries from the prototype."
              ]
            }
          ]
        },
        "valospaceAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "'VRemovedFrom' removed-from namespace provides vocabulary and\ndefinitions for valospace resource removed-from fields."
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "VRemovedFrom",
        "VRevdoc:baseIRI": "https://valospace.org/removed-from/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel"
        },
        "VRevdoc:extenderModules": {},
        "package": "@valos/kernel-vault",
        "version": "0.35.0-rc.34"
      },
      "@valos/kernel-vault": {
        "@id": "https://valospace.org/index",
        "tags": [
          "PRIMARY",
          "INTRODUCTION",
          "ONTOLOGY",
          "VALONAUT"
        ],
        "subProfiles": [],
        "title": "Valos introduction and valospace API reference",
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                [
                  {
                    "@type": "VRevdoc:Tooltip",
                    "VDoc:content": [
                      {
                        "VDoc:em": true,
                        "VDoc:content": [
                          {
                            "VDoc:strong": true,
                            "VDoc:content": [
                              "'Valos extends boundlessly across the valospace-time fabric.'"
                            ]
                          },
                          " (...in progress(tm))"
                        ]
                      }
                    ],
                    "VRevdoc:tooltipContent": [
                      {
                        "VDoc:strong": true,
                        "VDoc:content": [
                          "-> Vertically"
                        ]
                      },
                      ": as a full application development solution\nvalos radically simplifies the semantic web technology stack.",
                      null,
                      {
                        "VDoc:strong": true,
                        "VDoc:content": [
                          "-> Horizontally"
                        ]
                      },
                      ": as a global, de-centralized ecosystem\nvalos eases cross-organization interfacing.",
                      null,
                      {
                        "VDoc:strong": true,
                        "VDoc:content": [
                          "-> In depth"
                        ]
                      },
                      ": with its unified resource model valos blurs\nthe boundary between frontends and backends.",
                      null,
                      {
                        "VDoc:strong": true,
                        "VDoc:content": [
                          "-> Temporally"
                        ]
                      },
                      ": valos unifies document state and change\nupdates into seamless event stream *chronicles*."
                    ]
                  }
                ]
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "In other words, valos is a bit ambitious and a lot to take in at once."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "To address this the first part of this document provides separate\nintroduction paths into valos for a software developer\n(referred to as ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "a valonaut"
                      ],
                      "VDoc:ref": "/valonaut"
                    }
                  ]
                },
                "), for a\nsystems operator (as ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "a technician"
                      ],
                      "VDoc:ref": "/technician"
                    }
                  ]
                },
                ") and\nfor a project manager (as ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "a voyager"
                      ],
                      "VDoc:ref": "/voyager"
                    }
                  ]
                },
                ")."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Choosing the most familiar path helps you to get hands-on the quickest."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The second part of this document is the ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "valospace"
                  ],
                  "VDoc:ref": "valospace"
                },
                " API reference and is aimed for valonauts for repeat viewing."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The three traditional roles of application developer, systems operator\nand project manager have their own unique characteristics in valos\necosystem and are called valonaut, technician and voyager respectively."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "Each role has a detailed (editor's note: eventually) how-to guide which\nare linked and briefly introduced below. The roles support each other\nand the guides reflect this. The hands-on introduction section of each\nguide also gives a high-level overview of the rest."
              ]
            },
            {
              "VDoc:entries": {
                "valonaut": {
                  "@id": "https://valospace.org/valonaut",
                  "tags": [
                    "PRIMARY",
                    "ROLE"
                  ],
                  "subProfiles": [
                    "everyone",
                    "personal",
                    "student",
                    "prototypist",
                    "etc"
                  ],
                  "title": [
                    {
                      "VDoc:strong": true,
                      "VDoc:content": [
                        "Valonauts"
                      ]
                    },
                    " develop valospace apps for users"
                  ],
                  "abstract": {
                    "@type": "VDoc:Chapter",
                    "VDoc:content": [
                      {
                        "@type": "VDoc:Paragraph",
                        "VDoc:content": [
                          "This document is the first introduction for valonauts - the primary\ncontent creators - to the ValOS ecosystem and its core tools."
                        ]
                      }
                    ]
                  },
                  "introduction": {
                    "@type": "VDoc:Chapter",
                    "VDoc:content": [
                      {
                        "@type": "VDoc:Paragraph",
                        "VDoc:content": [
                          "As a valonaut you create, share and deploy web content and\ninteractive applications fully from inside ",
                          {
                            "@type": "VDoc:Reference",
                            "VDoc:content": [
                              "valospace"
                            ],
                            "VDoc:ref": "@valos/space"
                          },
                          "."
                        ]
                      },
                      {
                        "@type": "VDoc:Paragraph",
                        "VDoc:content": [
                          "You use a web editor called ",
                          {
                            "@type": "VDoc:Reference",
                            "VDoc:content": [
                              "Zero"
                            ],
                            "VDoc:ref": "Zero"
                          },
                          " and with it employ\ntraditional web technologies; HTML5, CSS and the Javascript\ndialect ",
                          {
                            "@type": "VDoc:Reference",
                            "VDoc:content": [
                              "valoscript"
                            ],
                            "VDoc:ref": "@valos/script"
                          }
                        ]
                      },
                      {
                        "@type": "VDoc:Paragraph",
                        "VDoc:content": [
                          "The skills you learn to do this are like cycling or writing - they\nare used to support your other interests. While you don't need to\nbecome a professional you certainly can!"
                        ]
                      }
                    ]
                  },
                  "package": "@valos/kernel-vault",
                  "version": "0.35.0-rc.33"
                },
                "technician": {
                  "@id": "https://valospace.org/technician",
                  "tags": [
                    "PRIMARY",
                    "ROLE"
                  ],
                  "subProfiles": [
                    "contributor",
                    "developer",
                    "administrator",
                    "devops",
                    "hacker",
                    "etc"
                  ],
                  "title": [
                    {
                      "VDoc:strong": true,
                      "VDoc:content": [
                        "Technicians"
                      ]
                    },
                    " deploy and maintain the valos fabric infrastructure"
                  ],
                  "abstract": {
                    "@type": "VDoc:Chapter",
                    "VDoc:content": [
                      {
                        "@type": "VDoc:Paragraph",
                        "VDoc:content": [
                          "This document is the first introduction for ValOS technicians -\nthe primary infrastructure developers and operators - to the ValOS\necosystem and its infrastructure toolchains and workflows."
                        ]
                      }
                    ]
                  },
                  "introduction": {
                    "@type": "VDoc:Chapter",
                    "VDoc:content": [
                      {
                        "@type": "VDoc:Paragraph",
                        "VDoc:content": [
                          "As a technician you develop and operate the ",
                          {
                            "VRevdoc:dfn": "#fabric",
                            "VDoc:content": [
                              {
                                "VDoc:strong": true,
                                "VDoc:content": [
                                  {
                                    "@type": "VDoc:Reference",
                                    "VDoc:content": [
                                      "ValOS fabric"
                                    ],
                                    "VDoc:ref": "#fabric"
                                  }
                                ]
                              },
                              ", ",
                              "the globally distributed web-like infrastructure of servers,\n    services and components which underlies the Valospace"
                            ]
                          },
                          "."
                        ]
                      },
                      {
                        "@type": "VDoc:Paragraph",
                        "VDoc:content": [
                          "You use ",
                          {
                            "@type": "VDoc:Reference",
                            "VDoc:content": [
                              "vlm"
                            ],
                            "VDoc:ref": "@/valma"
                          },
                          " and employ your existing,\nlikely professional knowledge of JavaScript, Node.js, DevOps,\nbackend, library and other software development skills."
                        ]
                      },
                      {
                        "@type": "VDoc:Paragraph",
                        "VDoc:content": [
                          "You create new open source and/or proprietary node packages. These\npermanently create new fabric functionalities and ",
                          {
                            "@type": "VDoc:Reference",
                            "VDoc:content": [
                              "expand"
                            ],
                            "VDoc:ref": "expand"
                          },
                          " the Valospace by integrating it to old world systems."
                        ]
                      }
                    ]
                  },
                  "package": "@valos/kernel-vault",
                  "version": "0.35.0-rc.33"
                },
                "voyager": {
                  "@id": "https://valospace.org/voyager",
                  "tags": [
                    "PRIMARY",
                    "ROLE"
                  ],
                  "subProfiles": [
                    "enthusiast",
                    "entrepreneur",
                    "evangelist",
                    "investor",
                    "business_owner",
                    "sales_rep",
                    "etc"
                  ],
                  "title": [
                    {
                      "VDoc:strong": true,
                      "VDoc:content": [
                        "Voyagers"
                      ]
                    },
                    " understand valos capabilities in order to make decisions"
                  ],
                  "abstract": {
                    "@type": "VDoc:Chapter",
                    "VDoc:content": [
                      {
                        "@type": "VDoc:Paragraph",
                        "VDoc:content": [
                          "This document is the first introduction for ValOS voyagers - the first\nadopters, entrepreneurs and evangelists - to the ValOS ecosystem, its\nphilosophy and its ultimate goals."
                        ]
                      }
                    ]
                  },
                  "introduction": {
                    "@type": "VDoc:Chapter",
                    "VDoc:content": [
                      {
                        "@type": "VDoc:Paragraph",
                        "VDoc:content": [
                          "As a voyager you have stakes that matter. Whether you were to\ninvest on a ValOS collaborator as a financier, to adopt ValOS as\ntechnology as an executive or just to commit your personal time and\nenergy on a ValOS project you need to ",
                          {
                            "VDoc:em": true,
                            "VDoc:content": [
                              "see"
                            ]
                          },
                          " forward."
                        ]
                      },
                      {
                        "@type": "VDoc:Paragraph",
                        "VDoc:content": [
                          "To make sound decisions and to position yourself proactively you\nneed to understand the big picture and philosophy of the ValOS\necosystem. Only then you can enlighten others."
                        ]
                      },
                      {
                        "@type": "VDoc:Paragraph",
                        "VDoc:content": [
                          "You use tailored but real-world ValOS demo setups to illustrate\nhow ValOS a solution could be configured to meet the needs at hand.\nYour audience can be your customer, your team or even just\nyourself."
                        ]
                      }
                    ]
                  },
                  "package": "@valos/kernel-vault",
                  "version": "0.35.0-rc.33"
                }
              },
              "VDoc:map": {
                "VDoc:content": [
                  {
                    "@type": "VDoc:Chapter",
                    "dc:title": {
                      "VDoc:em": true,
                      "VDoc:content": [
                        {
                          "@type": "VDoc:Reference",
                          "VDoc:content": [
                            [
                              "How do ",
                              {
                                "VDoc:selectField": "title"
                              },
                              "?"
                            ]
                          ],
                          "VDoc:ref": [
                            "VDoc:selectKey",
                            "#introduction"
                          ]
                        }
                      ]
                    },
                    "VDoc:content": [
                      {
                        "VDoc:selectField": "introduction"
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        "valospaceAbstract": {
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The 'V' namespace defines the valospace resource types and fields."
              ]
            }
          ]
        },
        "VRevdoc:preferredPrefix": "V",
        "VRevdoc:baseIRI": "https://valospace.org/0#",
        "VRevdoc:referencedModules": {
          "https://valospace.org/engine/0#": "@valos/engine/VEngine",
          "https://valospace.org/kernel/0#": "@valos/kernel/VKernel",
          "https://valospace.org/state/0#": "@valos/state/VState",
          "https://valospace.org/0#": "@valos/space/V",
          "https://valospace.org/log/0#": "@valos/log/VLog",
          "https://valospace.org/plot/0#": "@valos/plot/VPlot"
        },
        "VRevdoc:extenderModules": {},
        "package": "@valos/kernel-vault",
        "version": "0.35.0-rc.34"
      },
      "technician": {
        "@id": "https://valospace.org/technician",
        "tags": [
          "PRIMARY",
          "ROLE"
        ],
        "subProfiles": [
          "contributor",
          "developer",
          "administrator",
          "devops",
          "hacker",
          "etc"
        ],
        "title": [
          {
            "VDoc:strong": true,
            "VDoc:content": [
              "Technicians"
            ]
          },
          " deploy and maintain the valos fabric infrastructure"
        ],
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This document is the first introduction for ValOS technicians -\nthe primary infrastructure developers and operators - to the ValOS\necosystem and its infrastructure toolchains and workflows."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "As a technician you develop and operate the ",
                {
                  "VRevdoc:dfn": "#fabric",
                  "VDoc:content": [
                    {
                      "VDoc:strong": true,
                      "VDoc:content": [
                        {
                          "@type": "VDoc:Reference",
                          "VDoc:content": [
                            "ValOS fabric"
                          ],
                          "VDoc:ref": "#fabric"
                        }
                      ]
                    },
                    ", ",
                    "the globally distributed web-like infrastructure of servers,\n    services and components which underlies the Valospace"
                  ]
                },
                "."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "You use ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "vlm"
                  ],
                  "VDoc:ref": "@/valma"
                },
                " and employ your existing,\nlikely professional knowledge of JavaScript, Node.js, DevOps,\nbackend, library and other software development skills."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "You create new open source and/or proprietary node packages. These\npermanently create new fabric functionalities and ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "expand"
                  ],
                  "VDoc:ref": "expand"
                },
                " the Valospace by integrating it to old world systems."
              ]
            }
          ]
        },
        "package": "@valos/kernel-vault",
        "version": "0.35.0-rc.34"
      },
      "valonaut": {
        "@id": "https://valospace.org/valonaut",
        "tags": [
          "PRIMARY",
          "ROLE"
        ],
        "subProfiles": [
          "everyone",
          "personal",
          "student",
          "prototypist",
          "etc"
        ],
        "title": [
          {
            "VDoc:strong": true,
            "VDoc:content": [
              "Valonauts"
            ]
          },
          " develop valospace apps for users"
        ],
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This document is the first introduction for valonauts - the primary\ncontent creators - to the ValOS ecosystem and its core tools."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "As a valonaut you create, share and deploy web content and\ninteractive applications fully from inside ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "valospace"
                  ],
                  "VDoc:ref": "@valos/space"
                },
                "."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "You use a web editor called ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "Zero"
                  ],
                  "VDoc:ref": "Zero"
                },
                " and with it employ\ntraditional web technologies; HTML5, CSS and the Javascript\ndialect ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "valoscript"
                  ],
                  "VDoc:ref": "@valos/script"
                }
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "The skills you learn to do this are like cycling or writing - they\nare used to support your other interests. While you don't need to\nbecome a professional you certainly can!"
              ]
            }
          ]
        },
        "package": "@valos/kernel-vault",
        "version": "0.35.0-rc.34"
      },
      "voyager": {
        "@id": "https://valospace.org/voyager",
        "tags": [
          "PRIMARY",
          "ROLE"
        ],
        "subProfiles": [
          "enthusiast",
          "entrepreneur",
          "evangelist",
          "investor",
          "business_owner",
          "sales_rep",
          "etc"
        ],
        "title": [
          {
            "VDoc:strong": true,
            "VDoc:content": [
              "Voyagers"
            ]
          },
          " understand valos capabilities in order to make decisions"
        ],
        "abstract": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "This document is the first introduction for ValOS voyagers - the first\nadopters, entrepreneurs and evangelists - to the ValOS ecosystem, its\nphilosophy and its ultimate goals."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "As a voyager you have stakes that matter. Whether you were to\ninvest on a ValOS collaborator as a financier, to adopt ValOS as\ntechnology as an executive or just to commit your personal time and\nenergy on a ValOS project you need to ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "see"
                  ]
                },
                " forward."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "To make sound decisions and to position yourself proactively you\nneed to understand the big picture and philosophy of the ValOS\necosystem. Only then you can enlighten others."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "You use tailored but real-world ValOS demo setups to illustrate\nhow ValOS a solution could be configured to meet the needs at hand.\nYour audience can be your customer, your team or even just\nyourself."
              ]
            }
          ]
        },
        "package": "@valos/kernel-vault",
        "version": "0.35.0-rc.34"
      }
    },
    "prefixes": {
      "@id": "prefixes",
      "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
      "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
      "xsd": "http://www.w3.org/2001/XMLSchema#",
      "owl": "http://www.w3.org/2002/07/owl#",
      "dc": "http://purl.org/dc/elements/1.1/",
      "V": "https://valospace.org/0#",
      "VKernel": "https://valospace.org/kernel/0#",
      "VState": "https://valospace.org/state/0#",
      "VScript": "https://valospace.org/script/0#",
      "VEngine": "https://valospace.org/engine/0#",
      "VLog": "https://valospace.org/log/0#",
      "VPlot": "https://valospace.org/plot/0#"
    },
    "vocabulary": {
      "@id": "vocabulary",
      "Bvob": {
        "rdfs:label": [
          "window.valos.Bvob"
        ],
        "@type": "VState:Type",
        "VRevdoc:brief": "Binary ValOS Object type",
        "rdfs:subClassOf": "V:Resource",
        "rdfs:comment": "The dominant type class of resources which are immutably associated\nwith an octet-stream of fixed length.",
        "VRevdoc:introduction": "Bvob resource id is the hash of the octet-stream prefixed with the\nhash algorithm, as their VGRID.\n\nUnlike any other valospace resources, Bvobs are shared, not owned on\nthe object level. Multiple Bvob's with the same id can be CREATED in\nmany chronicles (or in fact, even in the same chronicle).\n\nConversely a Bvob cannot be destroyed but only released by nulling all\nreferences to it. Once a chronicle has no references to a specific Bvob\nthe authority is allowed to free the octet-stream resources associated\nwith.",
        "VEngine:domainOfField": [
          {
            "@id": "#hashAlgorithm",
            "VRevdoc:indexLabel": ".$V.hashAlgorithm"
          },
          {
            "@id": "#contentHash",
            "VRevdoc:indexLabel": ".$V.contentHash"
          },
          {
            "@id": "#contentLength",
            "VRevdoc:indexLabel": ".$V.contentLength"
          },
          {
            "@id": "#contentReferrers",
            "VRevdoc:indexLabel": ".$V.contentReferrers"
          }
        ]
      },
      "Chronicle": {
        "rdfs:label": [
          "window.valos.Chronicle"
        ],
        "VEngine:hasMethod": [
          {
            "@id": "#Chronicle.createPartitionURI",
            "VRevdoc:indexLabel": "valos.Chronicle.createPartitionURI()"
          },
          {
            "@id": "#Chronicle.createChronicleURI",
            "VRevdoc:indexLabel": "valos.Chronicle.createChronicleURI()"
          },
          {
            "@id": "#Chronicle.tryPartitionConnection",
            "VRevdoc:indexLabel": "valos.Chronicle.tryPartitionConnection()"
          },
          {
            "@id": "#Chronicle.tryConnection",
            "VRevdoc:indexLabel": "valos.Chronicle.tryConnection()"
          },
          {
            "@id": "#Chronicle.acquirePartitionConnection",
            "VRevdoc:indexLabel": "valos.Chronicle.acquirePartitionConnection()"
          },
          {
            "@id": "#Chronicle.acquireConnection",
            "VRevdoc:indexLabel": "valos.Chronicle.acquireConnection()"
          },
          {
            "@id": "#Chronicle.sourcerChronicle",
            "VRevdoc:indexLabel": "valos.Chronicle.sourcerChronicle()"
          }
        ]
      },
      "Chronicle.createPartitionURI": {
        "rdfs:label": [
          "Chronicle.createPartitionURI"
        ],
        "VRevdoc:indexLabel": "valos.Chronicle.createPartitionURI()",
        "rdf:subject": "V:Chronicle",
        "@type": "VEngine:ObjectMethod",
        "rdfs:range": " createNaivePartitionURI(baseString, partitionRawId)",
        "rdfs:comment": "Creates a URI from given *base* and *partitionId* strings",
        "VRevdoc:introduction": null
      },
      "Chronicle.createChronicleURI": {
        "rdfs:label": [
          "Chronicle.createChronicleURI"
        ],
        "VRevdoc:indexLabel": "valos.Chronicle.createChronicleURI()",
        "rdf:subject": "V:Chronicle",
        "@type": "VEngine:ObjectMethod",
        "rdfs:range": " createNaiveChronicleURI(authorityURI, chronicleVRID)",
        "rdfs:comment": "Creates a URI from given *base* and *chronicleId* strings (coercing non-vplot id's)",
        "VRevdoc:introduction": null
      },
      "Chronicle.tryPartitionConnection": {
        "rdfs:label": [
          "Chronicle.tryPartitionConnection"
        ],
        "VRevdoc:indexLabel": "valos.Chronicle.tryPartitionConnection()",
        "rdf:subject": "V:Chronicle",
        "@type": "VEngine:ObjectMethod",
        "rdfs:range": " tryPartitionConnection(chronicleURI)",
        "rdfs:comment": "DEPRECATED, prefer: V:Chronicle.tryConnection.\n  Returns an existing, fully active connection to the chronicle with\ngiven *chronicleURI*, undefined otherwise",
        "VRevdoc:introduction": [],
        "VRevdoc:deprecatedInFavorOf": "V:Chronicle.tryConnection"
      },
      "Chronicle.tryConnection": {
        "rdfs:label": [
          "Chronicle.tryConnection"
        ],
        "VRevdoc:indexLabel": "valos.Chronicle.tryConnection()",
        "rdf:subject": "V:Chronicle",
        "@type": "VEngine:ObjectMethod",
        "rdfs:range": " tryConnection(chronicleURI)",
        "rdfs:comment": "Returns an existing, fully active connection to the chronicle with\ngiven *chronicleURI*, undefined otherwise",
        "VRevdoc:introduction": null
      },
      "Chronicle.acquirePartitionConnection": {
        "rdfs:label": [
          "Chronicle.acquirePartitionConnection"
        ],
        "VRevdoc:indexLabel": "valos.Chronicle.acquirePartitionConnection()",
        "rdf:subject": "V:Chronicle",
        "@type": "VEngine:ObjectMethod",
        "rdfs:range": " acquireConnection(chronicleURI)",
        "rdfs:comment": "DEPRECATED, prefer: V:Chronicle.acquireConnection.\n  Returns a promise to a full connection to the chronicle with given\n*chronicleURI* and *options*.",
        "VRevdoc:introduction": [
          "If no full connection exists, waits on a possibly existing on-going\nconnection process. If none exists creates a new connection process."
        ],
        "VRevdoc:deprecatedInFavorOf": "V:Chronicle.acquireConnection"
      },
      "Chronicle.acquireConnection": {
        "rdfs:label": [
          "Chronicle.acquireConnection"
        ],
        "VRevdoc:indexLabel": "valos.Chronicle.acquireConnection()",
        "rdf:subject": "V:Chronicle",
        "@type": "VEngine:ObjectMethod",
        "rdfs:range": " acquireConnection(chronicleURI)",
        "rdfs:comment": "Returns a promise to a full connection to the chronicle with given\n*chronicleURI* and *options*.",
        "VRevdoc:introduction": [
          "If no full connection exists, waits on a possibly existing on-going\nconnection process. If none exists creates a new connection process."
        ]
      },
      "Chronicle.sourcerChronicle": {
        "rdfs:label": [
          "Chronicle.sourcerChronicle"
        ],
        "VRevdoc:indexLabel": "valos.Chronicle.sourcerChronicle()",
        "rdf:subject": "V:Chronicle",
        "@type": "VEngine:ObjectMethod",
        "rdfs:range": " sourcerChronicle(chronicleURI)",
        "rdfs:comment": "Returns a promise to a sourcered chronicle with given\n      *chronicleURI* and *options*.",
        "VRevdoc:introduction": [
          "If no full connection exists, waits on a possibly existing on-going\n      connection process. If none exists creates a new connection process."
        ]
      },
      "Describable": {
        "rdfs:label": [
          "window.valos.Describable"
        ]
      },
      "DestroyedScriptResource": {
        "rdfs:label": [
          "window.valos.DestroyedScriptResource"
        ]
      },
      "Discoverable": {
        "rdfs:label": [
          "window.valos.Discoverable"
        ]
      },
      "InactiveScriptResource": {
        "rdfs:label": [
          "window.valos.InactiveScriptResource"
        ]
      },
      "Entity": {
        "rdfs:label": [
          "window.Entity"
        ],
        "@type": "VState:Type",
        "VRevdoc:brief": "primary resource tree node type",
        "rdfs:subClassOf": [
          "V:Resource",
          "V:Extant",
          "V:Scope",
          "V:SourcerableNode",
          "V:SourceredNode"
        ],
        "rdfs:comment": "The class of valospace resources which act as the main valospace tree\nhierarchy building block. With Relation and Media it forms the group of\nthree primary node types. As a Scope it can have scriptable properties,\nwhich entities expose to all child resources as their lexical scripting\nnamespace.\n\nThe set of valospace tree hierarchies is defined via triple pattern:\n\n  SELECT ?root ?parent ?node WHERE {\n    ?node V:parent ?parent .\n    ?parent V:parent* ?root .\n    NOT EXISTS ( ?root V:parent ?rootParent )\n  }\n\nThis implies that only Entity resources can be nodes but any primary\nnode can act as a root resource.\n",
        "VEngine:domainOfField": [
          {
            "@id": "#directory",
            "VRevdoc:indexLabel": ".$V.directory"
          },
          {
            "@id": "#parent",
            "VRevdoc:indexLabel": ".$V.parent"
          }
        ]
      },
      "Media": {
        "rdfs:label": [
          "window.Media"
        ],
        "@type": "VState:Type",
        "VRevdoc:brief": "file media node type",
        "rdfs:subClassOf": [
          "V:Resource",
          "V:Extant",
          "V:Scope",
          "V:SourcerableNode",
          "V:SourceredNode"
        ],
        "rdfs:comment": "The class of valospace resources which represent interpretable media\nand can be associated with mutable binary content and accompanying\nmetadata. With Relation and Media it forms the group of three primary\nnode types.\n",
        "VEngine:domainOfMethod": [
          {
            "@id": "#immediateContent",
            "VRevdoc:indexLabel": ".$V.immediateContent()"
          },
          {
            "@id": "#interpretContent",
            "VRevdoc:indexLabel": ".$V.interpretContent()"
          },
          {
            "@id": "#immediateURL",
            "VRevdoc:indexLabel": ".$V.immediateURL()"
          },
          {
            "@id": "#getURL",
            "VRevdoc:indexLabel": ".$V.getURL()"
          }
        ],
        "VEngine:domainOfField": [
          {
            "@id": "#directory",
            "VRevdoc:indexLabel": ".$V.directory"
          },
          {
            "@id": "#folder",
            "VRevdoc:indexLabel": ".$V.folder"
          },
          {
            "@id": "#sourceURL",
            "VRevdoc:indexLabel": ".$V.sourceURL"
          },
          {
            "@id": "#content",
            "VRevdoc:indexLabel": ".$V.content"
          }
        ]
      },
      "immediateContent": {
        "rdfs:label": [
          "Media.prototype.$V.immediateContent"
        ],
        "VRevdoc:indexLabel": ".$V.immediateContent()",
        "rdfs:domain": "V:Media",
        "@type": "VEngine:Method",
        "rdfs:range": " immediateContent(options)",
        "rdfs:comment": "Returns Media content if immediately available or throws otherwise.",
        "VRevdoc:introduction": [
          "Media content is immediately available if its has been downloaded and\nmarked as in-memory cacheable.\n\nThe thrown error can be a missing connection error which triggers an\nimplicit connection process.\n\nSee V:interpretContent for more details."
        ]
      },
      "interpretContent": {
        "rdfs:label": [
          "Media.prototype.$V.interpretContent"
        ],
        "VRevdoc:indexLabel": ".$V.interpretContent()",
        "rdfs:domain": "V:Media",
        "@type": "VEngine:Method",
        "rdfs:range": " interpretContent(options)",
        "rdfs:comment": "Returns a promise to a Media content interpretation as optionally\ngiven *options.contentType*.",
        "VRevdoc:introduction": [
          "The default contentType if determined as follows:",
          {
            "VDoc:content": [
              {
                "@type": "VDoc:NumberedList",
                "VDoc:lines": [
                  [
                    "options.contentType argument of this call"
                  ],
                  {
                    "@type": "VDoc:Paragraph",
                    "VDoc:content": [
                      "Media.mediaType field of this Media resource"
                    ]
                  },
                  {
                    "@type": "VDoc:Paragraph",
                    "VDoc:content": [
                      "inferred from the Media name extension"
                    ]
                  },
                  {
                    "@type": "VDoc:Paragraph",
                    "VDoc:content": [
                      "options.fallbackContentType of this call"
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "immediateURL": {
        "rdfs:label": [
          "Media.prototype.$V.immediateURL"
        ],
        "VRevdoc:indexLabel": ".$V.immediateURL()",
        "rdfs:domain": "V:Media",
        "@type": "VEngine:Method",
        "rdfs:range": " immediateURL(options)",
        "rdfs:comment": "Returns a Media content download URL if immediately available or throws an error otherwise.",
        "VRevdoc:introduction": [
          "The returned URL can be used to fetch an online resource in the local\ncontext.\n\nThis URL is only temporarily valid. The expiration time is defined by\nthe chronicle behaviors and its backend implementation.\n\nThe error can be a missing connection error which triggers an\nimplicit connection process.\n\nSee V:getURL for more details."
        ]
      },
      "getURL": {
        "rdfs:label": [
          "Media.prototype.$V.getURL"
        ],
        "VRevdoc:indexLabel": ".$V.getURL()",
        "rdfs:domain": "V:Media",
        "@type": "VEngine:Method",
        "rdfs:range": " getURL(options)",
        "rdfs:comment": "Returns a promise to a Media content download URL.",
        "VRevdoc:introduction": [
          "The resolved URL can be used to fetch the Media content in the local\ncontext.\n\nThis URL is only temporarily valid. The expiration time is defined by\nthe chronicle behaviors and its backend implementation."
        ]
      },
      "Property": {
        "rdfs:label": [
          "window.Property"
        ]
      },
      "Relatable": {
        "rdfs:label": [
          "window.Relatable"
        ],
        "VEngine:hasMethod": [
          {
            "@id": "#Relatable.getRelationsOf",
            "VRevdoc:indexLabel": "valos.Relatable.getRelationsOf()"
          },
          {
            "@id": "#Relatable.getIncomingRelationsOf",
            "VRevdoc:indexLabel": "valos.Relatable.getIncomingRelationsOf()"
          }
        ],
        "VEngine:domainOfMethod": [
          {
            "@id": "#getRelations",
            "VRevdoc:indexLabel": ".$V.getRelations()"
          },
          {
            "@id": "#getRelationTargets",
            "VRevdoc:indexLabel": ".$V.getRelationTargets()"
          },
          {
            "@id": "#setRelations",
            "VRevdoc:indexLabel": ".$V.setRelations()"
          },
          {
            "@id": "#getIncomingRelations",
            "VRevdoc:indexLabel": ".$V.getIncomingRelations()"
          },
          {
            "@id": "#getIncomingRelationSources",
            "VRevdoc:indexLabel": ".$V.getIncomingRelationSources()"
          },
          {
            "@id": "#setIncomingRelations",
            "VRevdoc:indexLabel": ".$V.setIncomingRelations()"
          }
        ]
      },
      "Relatable.getRelationsOf": {
        "rdfs:label": [
          "Relatable.getRelationsOf"
        ],
        "VRevdoc:indexLabel": "valos.Relatable.getRelationsOf()",
        "rdf:subject": "V:Relatable",
        "@type": "VEngine:ObjectMethod",
        "rdfs:range": " getRelationsOf(relatable, name)",
        "rdfs:comment": "DEPRECATED, prefer: V:getRelations.\n  Returns an array which contains all Relation objects of given\n*relatable* which have the given *name*",
        "VRevdoc:introduction": [
          "Returned relation objects have given *relatable* as their host\n*Relation.source* field value and which fullfill all constaints of\ngiven additionalConditions"
        ],
        "VRevdoc:deprecatedInFavorOf": "V:getRelations"
      },
      "Relatable.getIncomingRelationsOf": {
        "rdfs:label": [
          "Relatable.getIncomingRelationsOf"
        ],
        "VRevdoc:indexLabel": "valos.Relatable.getIncomingRelationsOf()",
        "rdf:subject": "V:Relatable",
        "@type": "VEngine:ObjectMethod",
        "rdfs:range": " getIncomingRelationsOf(entity, name)",
        "rdfs:comment": "DEPRECATED, prefer: V:getIncomingRelations.\n  Returns an array which contains all Relation objects which have the\ngiven *name*",
        "VRevdoc:introduction": [
          "have *this* relatable as their host *Relation.target* field value and\nwhich fullfill all constaints of given additionalConditions"
        ],
        "VRevdoc:deprecatedInFavorOf": "V:getIncomingRelations"
      },
      "getRelations": {
        "rdfs:label": [
          "Relatable.prototype.$V.getRelations"
        ],
        "VRevdoc:indexLabel": ".$V.getRelations()",
        "rdfs:domain": "V:Relatable",
        "@type": "VEngine:Method",
        "rdfs:range": " getRelations(name)",
        "rdfs:comment": "Returns an array of all outgoing relations with the given *name* as\ntheir V:name.",
        "VRevdoc:introduction": [
          "Outgoing relations are all V:Relation resources owned by *this*\nV:Relatable in its V:relations and which have *this* as their V:source.\n\nIf no *name* is given returns all outgoing relations.\n\nNote: all matching relations are selected, even those in unconnected\nchronicles."
        ]
      },
      "getRelationTargets": {
        "rdfs:label": [
          "Relatable.prototype.$V.getRelationTargets"
        ],
        "VRevdoc:indexLabel": ".$V.getRelationTargets()",
        "rdfs:domain": "V:Relatable",
        "@type": "VEngine:Method",
        "rdfs:range": " getRelationsTargets(name)",
        "rdfs:comment": "Returns an array of all the V:target resources of those outgoing\nrelations which have the given *name* as their V:name.",
        "VRevdoc:introduction": [
          "This method is identical to V:getRelations except that the\nreturned array contains the V:target resources instead of the relations\nthemselves."
        ]
      },
      "setRelations": {
        "rdfs:label": [
          "Relatable.prototype.$V.setRelations"
        ],
        "VRevdoc:indexLabel": ".$V.setRelations()",
        "rdfs:domain": "V:Relatable",
        "@type": "VEngine:Method",
        "rdfs:range": " setRelations(name, newRelations)",
        "rdfs:comment": "Replaces all relations with given *name* with relations in given\n*newRelations* sequence.",
        "VRevdoc:introduction": [
          "This can be used to reorder the relations, as even if no entries are\nactually removed or added (if the new set has the same entries as the\nexisting set), their order will be changed to match the order in the\nnew sequence."
        ]
      },
      "getIncomingRelations": {
        "rdfs:label": [
          "Relatable.prototype.$V.getIncomingRelations"
        ],
        "VRevdoc:indexLabel": ".$V.getIncomingRelations()",
        "rdfs:domain": "V:Relatable",
        "@type": "VEngine:Method",
        "rdfs:range": " getIncomingRelations(name)",
        "rdfs:comment": "Returns an array of all incoming, connected relations with the given\n*name* as their V:name.",
        "VRevdoc:introduction": [
          "Incoming relations are all V:Relation resources that appear in the\nV:incomingRelations and which have *this* as their V:target.\n\nNote: only relations inside connected chronicles are listed (even\nthough some might be inactive, f.ex. if they have an inactive prototype)."
        ]
      },
      "getIncomingRelationSources": {
        "rdfs:label": [
          "Relatable.prototype.$V.getIncomingRelationSources"
        ],
        "VRevdoc:indexLabel": ".$V.getIncomingRelationSources()",
        "rdfs:domain": "V:Relatable",
        "@type": "VEngine:Method",
        "rdfs:range": " getIncomingRelationsSources(name)",
        "rdfs:comment": "Returns an array of all V:source resources of those incoming relations\nwhich have the given *name* as their V:name",
        "VRevdoc:introduction": [
          "This method is identical to V:getIncomingRelations except that the\nreturned array contains V:source resources instead of the relations\nthemselves."
        ]
      },
      "setIncomingRelations": {
        "rdfs:label": [
          "Relatable.prototype.$V.setIncomingRelations"
        ],
        "VRevdoc:indexLabel": ".$V.setIncomingRelations()",
        "rdfs:domain": "V:Relatable",
        "@type": "VEngine:Method",
        "rdfs:range": " setIncomingRelations(name, newIncomingRelations)",
        "rdfs:comment": "Replaces all incoming relations with given *name* with relations in\ngiven *newIncomingRelations* sequence.",
        "VRevdoc:introduction": [
          "This can be used to reorder the relations, as even if no entries are\nactually removed or added (if the new set has the same entries as the\nexisting set), their order will be changed to match the order in the\nnew sequence."
        ]
      },
      "Relation": {
        "rdfs:label": [
          "window.Relation"
        ],
        "@type": "VState:Type",
        "rdfs:subClassOf": [
          "V:Resource",
          "V:Extant",
          "V:Scope",
          "V:SourcerableNode",
          "V:SourceredNode"
        ],
        "VRevdoc:brief": "directed relationship node type",
        "rdfs:comment": "The class of valospace resources which represent directed,\nmany-to-many relationships between nodes.\nWith Entity and Media it forms the group of three primary node types.\nAs a Scope it can have scriptable properties. Relation being\na SourceredNode itself allows for nested and recursive relationship\nstructures.",
        "VEngine:domainOfField": [
          {
            "@id": "#connector",
            "VRevdoc:indexLabel": ".$V.connector"
          },
          {
            "@id": "#source",
            "VRevdoc:indexLabel": ".$V.source"
          },
          {
            "@id": "#target",
            "VRevdoc:indexLabel": ".$V.target"
          },
          {
            "@id": "#pairedSource",
            "VRevdoc:indexLabel": ".$V.pairedSource"
          },
          {
            "@id": "#pairedTarget",
            "VRevdoc:indexLabel": ".$V.pairedTarget"
          },
          {
            "@id": "#connectedSource",
            "VRevdoc:indexLabel": ".$V.connectedSource"
          },
          {
            "@id": "#connectedTarget",
            "VRevdoc:indexLabel": ".$V.connectedTarget"
          }
        ]
      },
      "Resource": {
        "rdfs:label": [
          "window.Resource"
        ],
        "@type": "VState:Type",
        "VRevdoc:brief": "base resource interface",
        "rdfs:subClassOf": "rdfs:Resource",
        "rdfs:comment": "The class of resources which can appear as a subject in valospace\nresource and event graphs. The domain of all transient and generated\nfields which are available even for unsourced bodies.",
        "VEngine:hasMethod": [
          {
            "@id": "#Resource.activate",
            "VRevdoc:indexLabel": "valos.Resource.activate()"
          },
          {
            "@id": "#Resource.isActive",
            "VRevdoc:indexLabel": "valos.Resource.isActive()"
          },
          {
            "@id": "#Resource.getFieldOf",
            "VRevdoc:indexLabel": "valos.Resource.getFieldOf()"
          },
          {
            "@id": "#Resource.setFieldOf",
            "VRevdoc:indexLabel": "valos.Resource.setFieldOf()"
          },
          {
            "@id": "#Resource.getOwnerOf",
            "VRevdoc:indexLabel": "valos.Resource.getOwnerOf()"
          },
          {
            "@id": "#Resource.setOwnerOf",
            "VRevdoc:indexLabel": "valos.Resource.setOwnerOf()"
          },
          {
            "@id": "#Resource.getActiveResource",
            "VRevdoc:indexLabel": "valos.Resource.getActiveResource()"
          },
          {
            "@id": "#Resource.tryActiveResource",
            "VRevdoc:indexLabel": "valos.Resource.tryActiveResource()"
          },
          {
            "@id": "#Resource.recombine",
            "VRevdoc:indexLabel": "valos.Resource.recombine()"
          },
          {
            "@id": "#Resource.destroy",
            "VRevdoc:indexLabel": "valos.Resource.destroy()"
          }
        ],
        "VEngine:domainOfMethod": [
          {
            "@id": "#Resource.prototype.hasOwnProperty",
            "VRevdoc:indexLabel": ".hasOwnProperty()"
          },
          {
            "@id": "#getField",
            "VRevdoc:indexLabel": ".$V.getField()"
          },
          {
            "@id": "#getFieldCoupling",
            "VRevdoc:indexLabel": ".$V.getFieldCoupling()"
          },
          {
            "@id": "#setField",
            "VRevdoc:indexLabel": ".$V.setField()"
          },
          {
            "@id": "#addToField",
            "VRevdoc:indexLabel": ".$V.addToField()"
          },
          {
            "@id": "#removeFromField",
            "VRevdoc:indexLabel": ".$V.removeFromField()"
          },
          {
            "@id": "#replaceWithinField",
            "VRevdoc:indexLabel": ".$V.replaceWithinField()"
          },
          {
            "@id": "#setOwner",
            "VRevdoc:indexLabel": ".$V.setOwner()"
          },
          {
            "@id": "#getEntity",
            "VRevdoc:indexLabel": ".$V.getEntity()"
          },
          {
            "@id": "#getMedia",
            "VRevdoc:indexLabel": ".$V.getMedia()"
          },
          {
            "@id": "#getFixedResource",
            "VRevdoc:indexLabel": ".$V.getFixedResource()"
          },
          {
            "@id": "#getFixedEntity",
            "VRevdoc:indexLabel": ".$V.getFixedEntity()"
          },
          {
            "@id": "#getFixedMedia",
            "VRevdoc:indexLabel": ".$V.getFixedMedia()"
          },
          {
            "@id": "#getFixedRelation",
            "VRevdoc:indexLabel": ".$V.getFixedRelation()"
          },
          {
            "@id": "#obtainFixedResource",
            "VRevdoc:indexLabel": ".$V.obtainFixedResource()"
          },
          {
            "@id": "#instantiate",
            "VRevdoc:indexLabel": ".$V.instantiate()"
          },
          {
            "@id": "#duplicate",
            "VRevdoc:indexLabel": ".$V.duplicate()"
          },
          {
            "@id": "#prepareBlob",
            "VRevdoc:indexLabel": ".$V.prepareBlob()"
          },
          {
            "@id": "#prepareBvob",
            "VRevdoc:indexLabel": ".$V.prepareBvob()"
          }
        ],
        "VEngine:domainOfField": [
          {
            "@id": "#id",
            "VRevdoc:indexLabel": ".$V.id"
          },
          {
            "@id": "#rawId",
            "VRevdoc:indexLabel": ".$V.rawId"
          },
          {
            "@id": "#vrid",
            "VRevdoc:indexLabel": ".$V.vrid"
          },
          {
            "@id": "#typeName",
            "VRevdoc:indexLabel": ".$V.typeName"
          },
          {
            "@id": "#prototype",
            "VRevdoc:indexLabel": ".$V.prototype"
          },
          {
            "@id": "#derivations",
            "VRevdoc:indexLabel": ".$V.derivations"
          },
          {
            "@id": "#ownFields",
            "VRevdoc:indexLabel": ".$V.ownFields"
          },
          {
            "@id": "#inheritors",
            "VRevdoc:indexLabel": ".$V.inheritors"
          },
          {
            "@id": "#instances",
            "VRevdoc:indexLabel": ".$V.instances"
          },
          {
            "@id": "#ghostPrototype",
            "VRevdoc:indexLabel": ".$V.ghostPrototype"
          },
          {
            "@id": "#ghosts",
            "VRevdoc:indexLabel": ".$V.ghosts"
          },
          {
            "@id": "#materializedGhosts",
            "VRevdoc:indexLabel": ".$V.materializedGhosts"
          },
          {
            "@id": "#unnamedCouplings",
            "VRevdoc:indexLabel": ".$V.unnamedCouplings"
          },
          {
            "@id": "#ghostHost",
            "VRevdoc:indexLabel": ".$V.ghostHost"
          },
          {
            "@id": "#ghostOwner",
            "VRevdoc:indexLabel": ".$V.ghostOwner"
          },
          {
            "@id": "#ghostOwnlings",
            "VRevdoc:indexLabel": ".$V.ghostOwnlings"
          }
        ]
      },
      "Resource.activate": {
        "rdfs:label": [
          "Resource.activate"
        ],
        "VRevdoc:indexLabel": "valos.Resource.activate()",
        "rdf:subject": "V:Resource",
        "@type": "VEngine:ObjectMethod",
        "rdfs:range": " activate(resource)",
        "rdfs:comment": "Returns a promise to an activation operation of the given *resource*",
        "VRevdoc:introduction": [
          "Activating a resource is the operation of sourcering the chronicles of\nall of the resources in its prototype chain.\n\nThe returned promise resolves to the given resource itself once all\ncorresponding chronicles have completed their first narration. If the\nresource is already active the returned promise is an already resolved\none."
        ]
      },
      "Resource.isActive": {
        "rdfs:label": [
          "Resource.isActive"
        ],
        "VRevdoc:indexLabel": "valos.Resource.isActive()",
        "rdf:subject": "V:Resource",
        "@type": "VEngine:ObjectMethod",
        "rdfs:range": " isActive(resource)",
        "rdfs:comment": "Returns true if the given *resource* is active",
        "VRevdoc:introduction": [
          "Returns false if the *resource* is inactive and not being activated at\nall, or if any of the prototype chain chronicles is still undergoing\nsourcering or first narration."
        ]
      },
      "Resource.getFieldOf": {
        "rdfs:label": [
          "Resource.getFieldOf"
        ],
        "VRevdoc:indexLabel": "valos.Resource.getFieldOf()",
        "rdf:subject": "V:Resource",
        "@type": "VEngine:ObjectMethod",
        "rdfs:range": " getFieldOf(resource, fieldVAKON)",
        "rdfs:comment": "DEPRECATED, prefer: V:getField.\n  Returns the value of the host field with given *fieldName* of the given *resource*",
        "VRevdoc:introduction": null,
        "VRevdoc:deprecatedInFavorOf": "V:getField"
      },
      "Resource.setFieldOf": {
        "rdfs:label": [
          "Resource.setFieldOf"
        ],
        "VRevdoc:indexLabel": "valos.Resource.setFieldOf()",
        "rdf:subject": "V:Resource",
        "@type": "VEngine:ObjectMethod",
        "rdfs:range": " setFieldOf(resource, fieldName, newValue)",
        "rdfs:comment": "DEPRECATED, prefer: V:setField.\n  Sets the host field with given *fieldName* of the given *resource* to given *newValue*",
        "VRevdoc:introduction": null,
        "VRevdoc:deprecatedInFavorOf": "V:setField"
      },
      "Resource.getOwnerOf": {
        "rdfs:label": [
          "Resource.getOwnerOf"
        ],
        "VRevdoc:indexLabel": "valos.Resource.getOwnerOf()",
        "rdf:subject": "V:Resource",
        "@type": "VEngine:ObjectMethod",
        "rdfs:range": " getOwnerOf(resource)",
        "rdfs:comment": "DEPRECATED, prefer: V:owner.\n  Returns the owner of the given *resource*",
        "VRevdoc:introduction": null,
        "VRevdoc:deprecatedInFavorOf": "V:owner"
      },
      "Resource.setOwnerOf": {
        "rdfs:label": [
          "Resource.setOwnerOf"
        ],
        "VRevdoc:indexLabel": "valos.Resource.setOwnerOf()",
        "rdf:subject": "V:Resource",
        "@type": "VEngine:ObjectMethod",
        "rdfs:range": " setOwnerOf(resource, owner)",
        "rdfs:comment": "DEPRECATED, prefer: V:setOwner.\n  sets the host owner of the given *resource* to the given *owner*",
        "VRevdoc:introduction": [
          "Can optionally be given *coupledField*. If not given coupledField\ndefault value is determined by the type of this resource to be either\n'unnamedOwnlings', 'properties', 'relations' or 'listeners'"
        ],
        "VRevdoc:deprecatedInFavorOf": "V:setOwner"
      },
      "Resource.getActiveResource": {
        "rdfs:label": [
          "Resource.getActiveResource"
        ],
        "VRevdoc:indexLabel": "valos.Resource.getActiveResource()",
        "rdf:subject": "V:Resource",
        "@type": "VEngine:ObjectMethod",
        "rdfs:range": " getActiveResource(id)",
        "rdfs:comment": "Returns the active resource with given *id* if one exists, otherwise\nthrows an error.",
        "VRevdoc:introduction": [
          "An active resource is an existing, non-destroyed resource in a fully\nconnected chronicle whose all possible prototypes are also active.\n\nIf the error is due to an unconnected or partially connected chronicle\nan absent chronicle error is thrown. This causes an implicit chronicle\nconnection attempt which by default restarts this transaction.\n\nOtherwise a regular, by default unhandled exception is thrown."
        ]
      },
      "Resource.tryActiveResource": {
        "rdfs:label": [
          "Resource.tryActiveResource"
        ],
        "VRevdoc:indexLabel": "valos.Resource.tryActiveResource()",
        "rdf:subject": "V:Resource",
        "@type": "VEngine:ObjectMethod",
        "rdfs:range": " tryActiveResource(id)",
        "rdfs:comment": "Returns the active resource with given *id* if one exists, otherwise\nreturns null.",
        "VRevdoc:introduction": [
          "An active resource is an existing, non-destroyed resource in a fully\nconnected chronicle whose all possible prototypes are also active."
        ]
      },
      "Resource.recombine": {
        "rdfs:label": [
          "Resource.recombine"
        ],
        "VRevdoc:indexLabel": "valos.Resource.recombine()",
        "rdf:subject": "V:Resource",
        "@type": "VEngine:ObjectMethod",
        "rdfs:range": " recombine()",
        "rdfs:comment": "Returns an array of duplicated resources based on the given *duplicationDirectives* (dd).",
        "VRevdoc:introduction": [
          "The duplications are performed as if they are part of a single\nduplication; all directly and indirectly owned cross-references between\nall *dd.duplicateOf* resources are updated to cross-refer to the\nappropriate (sub-)resources in the resulting duplicates.\n\nThis has two major advantages over the singular duplication.\n\nFirst advantage is that recombination allows for fine-grained control\nover all duplicated resources and not just the top-level. When a\n*dd.duplicateOf* refers to a resource which is already being implicitly\nduplicated (by some other directive targeting its (grand)owner) then\nthe rules in the explicit dd override the default duplication instead\nof creating an extra duplicate. Notably this also allows for omission\nof whole sub-branches from the duplication by specifying null *dd.id*.\n\nSecond advantage is that by providing customized *dd.initialState.owner*\nvalues the recombination can fully alter ownership hierarchy of the\nduplicated objects (unlike duplication which once again can only manage\nduplicated top-level resource). Specifically this enables duplication\nof resources from different locations and even chronicles to under the\nsame entity while maintaining the internal cross-references between\ndifferent recombined resources. Vice versa recombine allows spreading\nthe duplicates to separate chronicles (at least insofar a\nmulti-chronicle commands between said chronicles is possible)."
        ]
      },
      "Resource.destroy": {
        "rdfs:label": [
          "Resource.destroy"
        ],
        "VRevdoc:indexLabel": "valos.Resource.destroy()",
        "rdf:subject": "V:Resource",
        "@type": "VEngine:ObjectMethod",
        "rdfs:range": " destroy(resource)",
        "rdfs:comment": "Destroys the given *resource* and recursively all resources owned by it",
        "VRevdoc:introduction": null
      },
      "Resource.prototype.hasOwnProperty": {
        "rdfs:label": [
          "Resource.prototype.hasOwnProperty"
        ],
        "VRevdoc:indexLabel": ".hasOwnProperty()",
        "rdfs:domain": "V:Resource",
        "@type": "VEngine:Method",
        "rdfs:range": " hasOwnProperty(propertyName)",
        "rdfs:comment": "Returns true if this resource has the given *propertyName* as its own\nlocally materialized property, false otherwise.",
        "VRevdoc:introduction": null
      },
      "getField": {
        "rdfs:label": [
          "Resource.prototype.$V.getField"
        ],
        "VRevdoc:indexLabel": ".$V.getField()",
        "rdfs:domain": "V:Resource",
        "@type": "VEngine:Method",
        "rdfs:range": " getField(fieldName)",
        "rdfs:comment": "Returns the value of the valospace field with given *fieldName* of *this* Resource",
        "VRevdoc:introduction": [
          "This is an internal API and should be avoided in favor of ordinary\nfield access."
        ]
      },
      "getFieldCoupling": {
        "rdfs:label": [
          "Resource.prototype.$V.getFieldCoupling"
        ],
        "VRevdoc:indexLabel": ".$V.getFieldCoupling()",
        "rdfs:domain": "V:Resource",
        "@type": "VEngine:Method",
        "rdfs:range": " getFieldCoupling(fieldName)",
        "rdfs:comment": "Returns the coupled field of the given singular valospace field\n*fieldName* of *this* Resource",
        "VRevdoc:introduction": [
          ""
        ]
      },
      "setField": {
        "rdfs:label": [
          "Resource.prototype.$V.setField"
        ],
        "VRevdoc:indexLabel": ".$V.setField()",
        "rdfs:domain": "V:Resource",
        "@type": "VEngine:Method",
        "rdfs:range": " setField(fieldName, newValue)",
        "rdfs:comment": "Sets the value of the field *fieldName* of *this* Resource.",
        "VRevdoc:introduction": null
      },
      "addToField": {
        "rdfs:label": [
          "Resource.prototype.$V.addToField"
        ],
        "VRevdoc:indexLabel": ".$V.addToField()",
        "rdfs:domain": "V:Resource",
        "@type": "VEngine:Method",
        "rdfs:range": " addToField(fieldName, value)",
        "rdfs:comment": "Adds the given *value* to the host field with given *fieldName* of *this* Resource.",
        "VRevdoc:introduction": [
          "If the *value* is an iterable all the entries will be added in\niteration order. All added values will be placed to the end of the\nsequence, even if they already exist."
        ]
      },
      "removeFromField": {
        "rdfs:label": [
          "Resource.prototype.$V.removeFromField"
        ],
        "VRevdoc:indexLabel": ".$V.removeFromField()",
        "rdfs:domain": "V:Resource",
        "@type": "VEngine:Method",
        "rdfs:range": " removeFromField(fieldName, value)",
        "rdfs:comment": "Removes the given *value* from the host field with given *fieldName*\nof *this* Resource.",
        "VRevdoc:introduction": [
          "If the *value* is an iterable all the iterated entries will be removed."
        ]
      },
      "replaceWithinField": {
        "rdfs:label": [
          "Resource.prototype.$V.replaceWithinField"
        ],
        "VRevdoc:indexLabel": ".$V.replaceWithinField()",
        "rdfs:domain": "V:Resource",
        "@type": "VEngine:Method",
        "rdfs:range": " replaceWithinField(fieldName, replacedValues, withValues)",
        "rdfs:comment": "Replaces the given *replacedValues* within the field *fieldName* of\n*this* Resource with given *withValues*.",
        "VRevdoc:introduction": [
          "Behaves like a removedFrom call followed by an addedTo call, where the\nremovedFrom is given the entries appearing only in *replacedValues* and\naddedTo is given *withValues* as-is."
        ]
      },
      "setOwner": {
        "rdfs:label": [
          "Resource.prototype.$V.setOwner"
        ],
        "VRevdoc:indexLabel": ".$V.setOwner()",
        "rdfs:domain": "V:Resource",
        "@type": "VEngine:Method",
        "rdfs:range": " setOwner(owner)",
        "rdfs:comment": "Sets the host owner of *this* Resource to the given *owner*, with\noptionally given *coupledFieldName*.",
        "VRevdoc:introduction": [
          "The coupledFieldName default value is based on the type of this\nresource as either 'unnamedOwnlings', 'properties', 'relations' or 'listeners'"
        ]
      },
      "getEntity": {
        "rdfs:label": [
          "Resource.prototype.$V.getEntity"
        ],
        "VRevdoc:indexLabel": ".$V.getEntity()",
        "rdfs:domain": "V:Resource",
        "@type": "VEngine:Method",
        "rdfs:range": " getEntity(name)",
        "rdfs:comment": "Returns the first owned Entity with the given *name*.",
        "VRevdoc:introduction": null
      },
      "getMedia": {
        "rdfs:label": [
          "Resource.prototype.$V.getMedia"
        ],
        "VRevdoc:indexLabel": ".$V.getMedia()",
        "rdfs:domain": "V:Resource",
        "@type": "VEngine:Method",
        "rdfs:range": " getMedia(name)",
        "rdfs:comment": "Returns the first owned Media with the given *name*.",
        "VRevdoc:introduction": null
      },
      "getFixedResource": {
        "rdfs:label": [
          "Resource.prototype.$V.getFixedResource"
        ],
        "VRevdoc:indexLabel": ".$V.getFixedResource()",
        "rdfs:domain": "V:Resource",
        "@type": "VEngine:Method",
        "rdfs:range": " getFixedResource(subPlot, explicitChronicleURI)",
        "rdfs:comment": "Returns a reference to the fixed sub-resource reached from this\nresource via the given *subPlot* VPlot.",
        "VRevdoc:introduction": [
          "This call does not create any resources. If the resource does not\nexist the reference will be immaterial.\n\nAlternatively the *subPlot* can be a fixed field object which is used\nto determined the actual resource sub-id vplot. The keys of the object\nare divided to three groups:\n- Specials: keys 'id', 'typeName', 'name' and 'params' have semantics described below\n- Plain terms: all other string keys are sorted and treated as namespace 'V' terms\n- Symbol terms: all symbols must be valid namespace names, sorted\n  lexically as [namespace, term] pairs\n\nFirstly the resource sub-id starts with the value of 'id' key which if\ngiven must contain the verb type and an optional number of params.\nOtherwise if 'id' is not given the sub-id verb type is generated based\non 'typeName' if it is given. Otherwise the verb type is set to \"@_\".\nSecondly if 'name' is specified it is then prepended as the first param.\nThirdly all sorted plain terms are appended to the params.\nFourthly all sorted symbol terms are appended to the params.\nFinally all 'param' values are appended to the params.\n\nSee also $V.obtainFixedResource."
        ]
      },
      "getFixedEntity": {
        "rdfs:label": [
          "Resource.prototype.$V.getFixedEntity"
        ],
        "VRevdoc:indexLabel": ".$V.getFixedEntity()",
        "rdfs:domain": "V:Resource",
        "@type": "VEngine:Method",
        "rdfs:range": " getFixedEntity(subPlot, explicitChronicleURI)",
        "rdfs:comment": "Returns a reference to the fixed sub-entity reached from this\nresource via the given *subPlot* VPlot.",
        "VRevdoc:introduction": [
          "This call does not create any resources. If the sub-resource does not\nexist the reference will be immaterial.\n\nAlternatively the *subPlot* can be a fixed field object. In this case\nthis call adds \"Entity\" as a typeName to it.\nSee $V.getFixedResource for more details."
        ]
      },
      "getFixedMedia": {
        "rdfs:label": [
          "Resource.prototype.$V.getFixedMedia"
        ],
        "VRevdoc:indexLabel": ".$V.getFixedMedia()",
        "rdfs:domain": "V:Resource",
        "@type": "VEngine:Method",
        "rdfs:range": " getFixedEntity(subPlot, explicitChronicleURI)",
        "rdfs:comment": "Returns a reference to the fixed sub-media reached from this\nresource via the given *subPlot* VPlot.",
        "VRevdoc:introduction": [
          "This call does not create any resources. If the sub-resource does not\nexist the reference will be immaterial.\n\nAlternatively the *subPlot* can be a fixed field object. In this case\nthis call adds \"Media\" as a typeName to it.\nSee $V.getFixedResource for more details."
        ]
      },
      "getFixedRelation": {
        "rdfs:label": [
          "Resource.prototype.$V.getFixedRelation"
        ],
        "VRevdoc:indexLabel": ".$V.getFixedRelation()",
        "rdfs:domain": "V:Resource",
        "@type": "VEngine:Method",
        "rdfs:range": " getFixedEntity(subPlot, explicitChronicleURI)",
        "rdfs:comment": "Returns a reference to the fixed sub-relation reached from this\nresource via the given *subPlot* VPlot.",
        "VRevdoc:introduction": [
          "This call does not create any resources. If the sub-resource does not\nexist the reference will be immaterial.\n\nAlternatively the *subPlot* can be a fixed field object. In this case\nthis call adds \"Relation\" as a typeName to it.\nSee $V.getFixedResource for more details."
        ]
      },
      "obtainFixedResource": {
        "rdfs:label": [
          "Resource.prototype.$V.obtainFixedResource"
        ],
        "VRevdoc:indexLabel": ".$V.obtainFixedResource()",
        "rdfs:domain": "V:Resource",
        "@type": "VEngine:Method",
        "rdfs:range": " obtainFixedResource(subPlot, extendInitialState, explicitChronicleURI)",
        "rdfs:comment": "Returns an existing or a newly created fixed sub-resource that is\nreached from this resource via the given *subPlot* VPlot.",
        "VRevdoc:introduction": [
          "Will create all resources traversed by the subPlot VPlot that don't\nexist.\n\nProvides initial field and property values for the newly created\nresources so that they satisfy the semantic constraints of the *subPlot*\nVPlot elements. This typically means that at least the resource type\nand its $V.owner and $V.name are initialized, but depending on VPlot\ncontents other properties can also be initialized.\n\nCalls the optional callback argument *extendInitialState* for each new\nresource right before the resource is created.\nThis call is passed *initialState* and *subPlotIndex* as arguments.\nThe *subPlotIndex* is an index to the *subPlot* sub-element for which\na new resource is about to be created.\nThe *initialState* contains the initial fields and properties for the\nnew resource. These values are immutable and can only be inspected but\nnew fields and properties can be added. Once the callback returns the\n*initialState* will be passed to the V:Resource.new call.\n"
        ]
      },
      "instantiate": {
        "rdfs:label": [
          "Resource.prototype.$V.instantiate"
        ],
        "VRevdoc:indexLabel": ".$V.instantiate()",
        "rdfs:domain": "V:Resource",
        "@type": "VEngine:Method",
        "rdfs:range": " instantiate(initialState)",
        "rdfs:comment": "Instantiates *this* Resource with given *initialState*.",
        "VRevdoc:introduction": null
      },
      "duplicate": {
        "rdfs:label": [
          "Resource.prototype.$V.duplicate"
        ],
        "VRevdoc:indexLabel": ".$V.duplicate()",
        "rdfs:domain": "V:Resource",
        "@type": "VEngine:Method",
        "rdfs:range": " duplicate(initialState)",
        "rdfs:comment": "Duplicates *this* Resource with given *initialState*.",
        "VRevdoc:introduction": null
      },
      "prepareBlob": {
        "rdfs:label": [
          "Resource.prototype.$V.prepareBlob"
        ],
        "VRevdoc:indexLabel": ".$V.prepareBlob()",
        "rdfs:domain": "V:Resource",
        "@type": "VEngine:Method",
        "rdfs:range": " prepareBlob(content)",
        "rdfs:comment": "DEPRECATED, prefer: V:prepareBvob.\n  Returns a promise to a Bvob creator callback. See Resource.prepareBvob.",
        "VRevdoc:introduction": null,
        "VRevdoc:deprecatedInFavorOf": "V:prepareBvob"
      },
      "prepareBvob": {
        "rdfs:label": [
          "Resource.prototype.$V.prepareBvob"
        ],
        "VRevdoc:indexLabel": ".$V.prepareBvob()",
        "rdfs:domain": "V:Resource",
        "@type": "VEngine:Method",
        "rdfs:range": " prepareBvob(content)",
        "rdfs:comment": "Uploads the given *content* and returns a promise to a Bvob resource creation callback.",
        "VRevdoc:introduction": [
          "All valospace binary content is associated with a chronicle in the\nform immutable Bvob resource references. A full process of uploading\ncontent to valospace is a two-stage process. Firstly the content must\nbe  uploaded and validated by persistence layers. Secondly the content\nhash must be chronicled as a Bvob reference in the chronicle event log.\n\nThis function initiates the first stage and returns a promise to a\ncallback. The promise resolves when the given *content* has been\nconverted into raw data and persisted in the *nearest persistence cache*.\n\nThe resolved value is a callback which when called creates a Bvob\nresource in the chronicle of *this* Resource and returns a reference to\nit. This Bvob should then be immediately assigned to a resource field\nin the chronicle (usually as V:content of some V:Media) to initiate the\nsecond stage. Note that as the Bvob itself only represents binary\ncontent all encoding information, contentType and any other metadata\nshould be assigned at the same time (see V:Media).\n\nThere can be a period of time between the first stage and the second\nstage, especially if user interaction is performed in between. During\nthis period the uploaded content is pending and likely has no chronicle\nreferences to it until the second stage is initiated and completed.\n\nThe pending content is guaranteed to remain valid until one of the\nfollowing conditions is true:",
          {
            "VDoc:content": [
              {
                "@type": "VDoc:NumberedList",
                "VDoc:lines": [
                  [
                    "The bvob id is used in a command that has been successfully locally\npersisted in the command queue of this chronicle. At this point the\nbvob id cache validity is governed by the ordinary chronicle bvob\ncontent persistence rules."
                  ],
                  {
                    "@type": "VDoc:Paragraph",
                    "VDoc:content": [
                      "The execution context is reset (ie. on a browser/tab is refreshed)."
                    ]
                  },
                  {
                    "@type": "VDoc:Paragraph",
                    "VDoc:content": [
                      "Local bvob cache is explicitly flushed (which is unimplemented)."
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "Scope": {
        "rdfs:label": [
          "window.Scope"
        ],
        "@type": "VState:Type",
        "rdfs:subClassOf": [
          "V:Resource",
          "V:Extant"
        ],
        "VRevdoc:brief": "property scope interface",
        "rdfs:comment": "The class of valospace resources which can have scoped properties.",
        "VEngine:hasMethod": [
          {
            "@id": "#Scope.createIdentifer",
            "VRevdoc:indexLabel": "valos.Scope.createIdentifer()"
          }
        ],
        "VEngine:domainOfMethod": [
          {
            "@id": "#getProperty",
            "VRevdoc:indexLabel": ".$V.getProperty()"
          },
          {
            "@id": "#getHostGlobal",
            "VRevdoc:indexLabel": ".$V.getHostGlobal()"
          }
        ],
        "VEngine:domainOfField": [
          {
            "@id": "#properties",
            "VRevdoc:indexLabel": ".$V.properties"
          }
        ]
      },
      "Scope.createIdentifer": {
        "rdfs:label": [
          "Scope.createIdentifer"
        ],
        "VRevdoc:indexLabel": "valos.Scope.createIdentifer()",
        "rdf:subject": "V:Scope",
        "@type": "VEngine:ObjectMethod",
        "rdfs:range": " createIdentifier(initialValue)",
        "rdfs:comment": "Creates and returns an identifier binding object.",
        "VRevdoc:introduction": [
          "When an identifier object is placed as a scope lookup value it will\nact as an assignable identifier binding for valoscript identifier\noperations with name equal to the key of the scope lookup."
        ]
      },
      "getProperty": {
        "rdfs:label": [
          "Scope.prototype.$V.getProperty"
        ],
        "VRevdoc:indexLabel": ".$V.getProperty()",
        "rdfs:domain": "V:Scope",
        "@type": "VEngine:Method",
        "rdfs:range": " getProperty(name)",
        "rdfs:comment": "DEPRECATED, prefer: Object.getOwnPropertyDescriptor.\n  Returns the Property object with the given name in this Scope.",
        "VRevdoc:introduction": [
          "This Property object is an internal detail of @valos/engine."
        ],
        "VRevdoc:deprecatedInFavorOf": "Object.getOwnPropertyDescriptor"
      },
      "getHostGlobal": {
        "rdfs:label": [
          "Scope.prototype.$V.getHostGlobal"
        ],
        "VRevdoc:indexLabel": ".$V.getHostGlobal()",
        "rdfs:domain": "V:Scope",
        "@type": "VEngine:Method",
        "rdfs:range": " getHostGlobal()",
        "rdfs:comment": "Returns the javascript host global object associated with this Scope.",
        "VRevdoc:introduction": [
          "The host global object of a Scope resource is used as the javascript\nglobal object for all application/javascript medias that are owned by\nthe Scope.\nThis global object prototypically inherits the host global object of\nthe nearest owning Scope. Thus all host global variables introduced to\nthe Scope by its directly owned javascript medias will be available to\nall other medias directly or indirectly owned by the Scope.\n\nThe host global object is a native host environment javascript object,\nso that unlike valospace resource modifications, the host global object\nmodifications are:",
          {
            "VDoc:content": [
              {
                "@type": "VDoc:NumberedList",
                "VDoc:lines": [
                  [
                    "local; they are not visible to other users or tabs"
                  ],
                  {
                    "@type": "VDoc:Paragraph",
                    "VDoc:content": [
                      "immediate; they don't wait for the surrounding transaction to be committed"
                    ]
                  },
                  {
                    "@type": "VDoc:Paragraph",
                    "VDoc:content": [
                      "irreversible; they are not reverted if the surrounding transaction is aborted"
                    ]
                  },
                  {
                    "@type": "VDoc:Paragraph",
                    "VDoc:content": [
                      "not persistent; they are lost on browser refresh (or on any inspire engine restart in general)"
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "TransientFields": {
        "rdfs:label": [
          "window.valos.TransientFields"
        ],
        "VEngine:domainOfMethod": [
          {
            "@id": "#getFickleId",
            "VRevdoc:indexLabel": ".$V.getFickleId()"
          },
          {
            "@id": "#createDerivedId",
            "VRevdoc:indexLabel": ".$V.createDerivedId()"
          },
          {
            "@id": "#hasInterface",
            "VRevdoc:indexLabel": ".$V.hasInterface()"
          }
        ]
      },
      "getFickleId": {
        "rdfs:label": [
          "TransientFields.prototype.$V.getFickleId"
        ],
        "VRevdoc:indexLabel": ".$V.getFickleId()",
        "rdfs:domain": "V:TransientFields",
        "@type": "VEngine:Method",
        "rdfs:range": " getFickleId(minimumLength)",
        "rdfs:comment": "Returns a short, descriptive but fickle identifier string of this\nresource.",
        "VRevdoc:introduction": [
          "The fickle is uniquely mapped to this resource but during this\nexecution session only. The returned fickle id string is guaranteed to\nbe at least the given *minimumLength* characters long. The fickle id\nmay be longer if a shorter id candidate is already allocated for\nanother resource.\n\nThe fickle algorithm is a best-effort algorithm which /most of the time/\nreturns a prefix of the resource raw id that is same across sessions,\nbut none of these qualities is guaranteed.\n"
        ]
      },
      "createDerivedId": {
        "rdfs:label": [
          "TransientFields.prototype.$V.createDerivedId"
        ],
        "VRevdoc:indexLabel": ".$V.createDerivedId()",
        "rdfs:domain": "V:TransientFields",
        "@type": "VEngine:Method",
        "rdfs:range": " createDerivedId(salt)",
        "rdfs:comment": "Creates a deterministic, unique id string based on the id of *this*\nresource as well as the optional *salt* and optional *contextId* strings.",
        "VRevdoc:introduction": [
          "The generated id is always the same for same combination of these\nthree values."
        ]
      },
      "hasInterface": {
        "rdfs:label": [
          "TransientFields.prototype.$V.hasInterface"
        ],
        "VRevdoc:indexLabel": ".$V.hasInterface()",
        "rdfs:domain": "V:TransientFields",
        "@type": "VEngine:Method",
        "rdfs:range": " hasInterface(interfaceName)",
        "rdfs:comment": "Returns true if *this* resource implements the host interface *interfaceName*",
        "VRevdoc:introduction": null
      },
      "TransientScriptFields": {
        "rdfs:label": [
          "window.valos.TransientScriptFields"
        ]
      },
      "SourcerableNode": {
        "@type": "VState:Type",
        "rdfs:subClassOf": "V:Resource",
        "VRevdoc:brief": "sourcerable node interface",
        "rdfs:comment": "The class of sourcerable valospace nodes which either are already\nsourcered or are unsourcered but have references to them from extant\nresources.\n\nThis interface is the domain of all transient and generated fields\nwhich are available even for unsourcered node resources.",
        "VEngine:domainOfField": [
          {
            "@id": "#chronicleRoot",
            "VRevdoc:indexLabel": ".$V.chronicleRoot"
          },
          {
            "@id": "#chronicleURI",
            "VRevdoc:indexLabel": ".$V.chronicleURI"
          },
          {
            "@id": "#url",
            "VRevdoc:indexLabel": ".$V.url"
          },
          {
            "@id": "#partition",
            "VRevdoc:indexLabel": ".$V.partition"
          },
          {
            "@id": "#partitionURI",
            "VRevdoc:indexLabel": ".$V.partitionURI"
          },
          {
            "@id": "#outRelations",
            "VRevdoc:indexLabel": ".$V.outRelations"
          },
          {
            "@id": "#inRelations",
            "VRevdoc:indexLabel": ".$V.inRelations"
          },
          {
            "@id": "#outgoingRelations",
            "VRevdoc:indexLabel": ".$V.outgoingRelations"
          },
          {
            "@id": "#incomingRelations",
            "VRevdoc:indexLabel": ".$V.incomingRelations"
          }
        ]
      },
      "chronicleRoot": {
        "@type": "VState:GeneratedField",
        "rdfs:domain": "V:SourcerableNode",
        "rdfs:range": "V:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:expressor": [
          "@$VValk.resolveChronicleRoot@@"
        ],
        "rdfs:comment": "The chronicle root node of this sourcerable (ie. the nearest ancestor,\npossibly this sourcerable itself self which has a non-null\nV:authorityURI).",
        "rdfs:label": [
          "$V.chronicleRoot"
        ]
      },
      "chronicleURI": {
        "@type": "VState:GeneratedField",
        "rdfs:domain": "V:SourcerableNode",
        "rdfs:range": "xsd:anyURI",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:expressor": [
          "@$VValk.resolveChronicleURI@@"
        ],
        "rdfs:comment": "The chronicle URL of the event log that contain this potentially\nabsent sourcerable as is known by the current view of the world.",
        "rdfs:label": [
          "$V.chronicleURI"
        ]
      },
      "url": {
        "@type": "VState:GeneratedField",
        "rdfs:domain": "V:SourcerableNode",
        "rdfs:range": "xsd:anyURI",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:cardinality": 1
        },
        "VState:expressor": [
          "@!$valk.add:@!$V.chronicleURI@@:#:@!$V.id@@@@"
        ],
        "rdfs:comment": "The authoritative URL string of this sourcerable in the current view\nof the world. Always equivalent to a catenation of\n<V:chronicleURI> \"#\" <V:id>\nof this resource",
        "rdfs:label": [
          "$V.url"
        ]
      },
      "partition": {
        "@type": "VState:AliasField",
        "VRevdoc:deprecatedInFavorOf": "V:chronicleRoot",
        "VState:aliasOf": "V:chronicleRoot",
        "rdfs:subPropertyOf": "V:chronicleRoot",
        "rdfs:domain": "V:SourcerableNode",
        "rdfs:range": "V:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:expressor": [
          "@$VValk.resolveChronicleRoot@@"
        ],
        "rdfs:comment": "The chronicle root node of this sourcerable, ie. the nearest ancestor\n(possibly self) with a non-null V:authorityURI.",
        "rdfs:label": [
          "$V.partition"
        ]
      },
      "partitionURI": {
        "@type": "VState:AliasField",
        "VRevdoc:deprecatedInFavorOf": "V:chronicleURI",
        "VState:aliasOf": "V:chronicleURI",
        "rdfs:subPropertyOf": "V:chronicleURI",
        "rdfs:domain": "V:SourcerableNode",
        "rdfs:range": "xsd:anyURI",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "rdfs:comment": "Deprecated in favor of 'chronicleURI'. This field is by definition\nalways a locator so its name should reflect it.",
        "rdfs:label": [
          "$V.partitionURI"
        ]
      },
      "UnsourceredNode": {
        "@type": "VState:Type",
        "VRevdoc:brief": "absent, sourcerable node type",
        "rdfs:subClassOf": [
          "V:Resource",
          "V:SourcerableNode"
        ],
        "rdfs:comment": "The dominant type class of absent but sourcerable valospace nodes. An\nabsent resource doesn't have a known representation in this view of the\nworld because it is inside an unsourcered Chronicle.\n\nThe transition from UnsourceredNode to and from other dominant types is\nthe only possible runtime type change for SourcerableNodes and happens\ndynamically based on the chronicle sourcery and banishment."
      },
      "NonExistentNode": {
        "@type": "VState:Type",
        "rdfs:subClassOf": [
          "V:Resource",
          "V:SourcerableNode"
        ],
        "VRevdoc:brief": "non-existent node type",
        "rdfs:comment": "The dominant type class of sourcered resources which should be present\nbut are not. This typically because they have been destroyed or because\nthey never existed in the first place.\n\nOnly provides the transient fields of the SourcerableNode and Resource\ninterfaces."
      },
      "SourceredNode": {
        "@type": "VState:Type",
        "VRevdoc:brief": "sourcered node interface",
        "rdfs:subClassOf": [
          "V:Resource",
          "V:Extant",
          "V:Scope",
          "V:SourcerableNode"
        ],
        "rdfs:comment": "The class of sourcered (ie. extant) valospace nodes. A node can act as\na chronicle root resource, as the source and target of Relation nodes,\nas the folder of Media nodes and as the parent of Entity nodes.\nAs these aforementioned types are also the primary sourcered nodes\nthemselves they form the main structure of global valospace resource\ngraph.",
        "VEngine:domainOfField": [
          {
            "@id": "#container",
            "VRevdoc:indexLabel": ".$V.container"
          },
          {
            "@id": "#nodes",
            "VRevdoc:indexLabel": ".$V.nodes"
          },
          {
            "@id": "#authorityURI",
            "VRevdoc:indexLabel": ".$V.authorityURI"
          },
          {
            "@id": "#createdAt",
            "VRevdoc:indexLabel": ".$V.createdAt"
          },
          {
            "@id": "#modifiedAt",
            "VRevdoc:indexLabel": ".$V.modifiedAt"
          },
          {
            "@id": "#partitionAuthorityURI",
            "VRevdoc:indexLabel": ".$V.partitionAuthorityURI"
          },
          {
            "@id": "#entries",
            "VRevdoc:indexLabel": ".$V.entries"
          },
          {
            "@id": "#entities",
            "VRevdoc:indexLabel": ".$V.entities"
          },
          {
            "@id": "#medias",
            "VRevdoc:indexLabel": ".$V.medias"
          },
          {
            "@id": "#connectedRelations",
            "VRevdoc:indexLabel": ".$V.connectedRelations"
          },
          {
            "@id": "#pairedOutRelations",
            "VRevdoc:indexLabel": ".$V.pairedOutRelations"
          },
          {
            "@id": "#pairedInRelations",
            "VRevdoc:indexLabel": ".$V.pairedInRelations"
          },
          {
            "@id": "#connectedOutRelations",
            "VRevdoc:indexLabel": ".$V.connectedOutRelations"
          },
          {
            "@id": "#connectedInRelations",
            "VRevdoc:indexLabel": ".$V.connectedInRelations"
          },
          {
            "@id": "#relations",
            "VRevdoc:indexLabel": ".$V.relations"
          }
        ]
      },
      "container": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": "V:owner",
        "rdfs:domain": "V:SourceredNode",
        "rdfs:range": "V:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:isOwnedBy": true,
        "VState:coupledToField": "V:nodes",
        "rdfs:comment": "The container (and owner) node of this sourcered node.",
        "rdfs:label": [
          "$V.container"
        ]
      },
      "nodes": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": "V:ownlings",
        "rdfs:domain": "V:SourceredNode",
        "rdfs:range": "rdfs:List",
        "VState:isOwnerOf": true,
        "VState:coupledToField": "V:container",
        "rdfs:comment": "The ordered list of all nodes directly contained by this sourcered\nnode.",
        "rdfs:label": [
          "$V.nodes"
        ]
      },
      "authorityURI": {
        "@type": "VState:EventLoggedField",
        "rdfs:domain": "V:SourceredNode",
        "rdfs:range": "xsd:anyURI",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:isDuplicateable": false,
        "VState:ownDefaultValue": null,
        "rdfs:comment": "The authority URL of this sourcered chronicle root node. If this field\nis null then this sourcered node is not a root node. Setting this field\nmakes this resource the root of a new chronicle root (if allowed). The\nchronicle URL is generated based on this as per the rules specified by\nthe authority URL schema.\nIf the chronicle root node is frozen the whole chronicle is permanently\nfrozen.",
        "rdfs:label": [
          "$V.authorityURI"
        ]
      },
      "createdAt": {
        "@type": "VState:GeneratedField",
        "rdfs:domain": "V:SourceredNode",
        "rdfs:range": "xsd:double",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:expressor": [
          "@$VValk.resolveCreatedAt@@"
        ],
        "rdfs:comment": "The creation UNIX epoch time of this node. This is defined as the\nlog aspect timestamp of the CREATED event which impressed this node\ninto being.",
        "rdfs:label": [
          "$V.createdAt"
        ]
      },
      "modifiedAt": {
        "@type": "VState:GeneratedField",
        "rdfs:domain": "V:SourceredNode",
        "rdfs:range": "xsd:double",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:expressor": [
          "@$VValk.resolveModifiedAt@@"
        ],
        "rdfs:comment": "The latest modification UNIX epoch time of this node. This is defined\nas the log aspect timestamp of the most recent event with a direct\nimpression on this Media resource.",
        "rdfs:label": [
          "$V.modifiedAt"
        ]
      },
      "partitionAuthorityURI": {
        "@type": "VState:AliasField",
        "VRevdoc:deprecatedInFavorOf": "V:authorityURI",
        "VState:aliasOf": "V:authorityURI",
        "rdfs:subPropertyOf": "V:authorityURI",
        "rdfs:domain": "V:SourceredNode",
        "rdfs:range": "xsd:string",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "rdfs:label": [
          "$V.partitionAuthorityURI"
        ]
      },
      "directory": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": "V:container",
        "rdfs:domain": [
          "V:Entity",
          "V:Media"
        ],
        "rdfs:range": "V:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:isOwnedBy": true,
        "VState:coupledToField": "V:entries",
        "rdfs:comment": "The directory (and owner) node of this sourcered node.",
        "rdfs:label": [
          "$V.directory"
        ]
      },
      "entries": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": "V:nodes",
        "rdfs:domain": "V:SourceredNode",
        "rdfs:range": "rdfs:List",
        "VState:isOwnerOf": true,
        "VState:coupledToField": "V:directory",
        "rdfs:comment": "The ordered list of entries of this sourcered node when seen as\n  a directory.",
        "rdfs:label": [
          "$V.entries"
        ]
      },
      "parent": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": "V:directory",
        "rdfs:domain": "V:Entity",
        "rdfs:range": "V:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:isOwnedBy": true,
        "VState:coupledToField": "V:entities",
        "rdfs:comment": "The parent (and directory, owner) node of this entity.",
        "rdfs:label": [
          "$V.parent"
        ]
      },
      "entities": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": "V:entries",
        "rdfs:domain": "V:SourceredNode",
        "rdfs:range": "rdfs:List",
        "VState:isOwnerOf": true,
        "VState:coupledToField": "V:parent",
        "rdfs:comment": "The ordered list of entities contained in this sourcered node.",
        "rdfs:label": [
          "$V.entities"
        ]
      },
      "folder": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": "V:directory",
        "rdfs:domain": "V:Media",
        "rdfs:range": "V:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:isOwnedBy": true,
        "VState:coupledToField": "V:medias",
        "rdfs:comment": "The folder (and directory, owner) node of this media.",
        "rdfs:label": [
          "$V.folder"
        ]
      },
      "medias": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": "V:entries",
        "rdfs:domain": "V:SourceredNode",
        "rdfs:range": "rdfs:List",
        "VState:isOwnerOf": true,
        "VState:coupledToField": "V:folder",
        "rdfs:comment": "The ordered list of medias contained in this sourcered node when seen\nas a folder",
        "rdfs:label": [
          "$V.medias"
        ]
      },
      "sourceURL": {
        "@type": "VState:EventLoggedField",
        "rdfs:domain": "V:Media",
        "rdfs:range": "xsd:anyURI",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "rdfs:comment": "The unreliable source URL of this Media. This URL is dereferenced\nwhen the Media content is accessed and as such is subject to all\nfailure considerations associated with its protocol.",
        "rdfs:label": [
          "$V.sourceURL"
        ]
      },
      "content": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": "rdf:object",
        "rdfs:domain": "V:Media",
        "rdfs:range": "V:Bvob",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:coupledToField": "V:contentReferrers",
        "rdfs:comment": "The infrastructure-backed octet-stream content of this Media.",
        "rdfs:label": [
          "$V.content"
        ]
      },
      "connector": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": "V:container",
        "rdfs:domain": "V:Relation",
        "rdfs:range": "V:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:isOwnedBy": true,
        "VState:coupledToField": "V:connectedRelations",
        "rdfs:comment": "The connector (and container, owner) node of this relation.\nTypically also either the source or the target but possibly neither.",
        "rdfs:label": [
          "$V.connector"
        ]
      },
      "connectedRelations": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": "V:nodes",
        "rdfs:domain": "V:SourceredNode",
        "rdfs:range": "rdfs:List",
        "VState:isOwnerOf": true,
        "VState:coupledToField": "V:connector",
        "rdfs:comment": "The ordered list of relations that are connected (and contained,\nowned) _by_ this sourcered node. This includes both\nconnectedInRelations and connectedOutRelations (ie. incoming and\noutgoing relations which are also connected by this sourcered node) but\nalso relations which only have this sourcered node as their connector\nbut not as source or target.",
        "rdfs:label": [
          "$V.connectedRelations"
        ]
      },
      "source": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": "rdf:subject",
        "rdfs:domain": "V:Relation",
        "rdfs:range": "V:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:coupledToField": "V:outRelations",
        "rdfs:comment": "The source node of this relation.",
        "rdfs:label": [
          "$V.source"
        ]
      },
      "outRelations": {
        "@type": "VState:CoupledField",
        "rdfs:subPropertyOf": "V:nodes",
        "rdfs:domain": "V:SourcerableNode",
        "rdfs:range": "rdfs:List",
        "VState:coupledToField": "V:source",
        "rdfs:comment": "The unordered list of outgoing relations with this sourcerable\n(but possibly absent) node as their source (note that sourcerable and\nsource are completely separate concepts here).",
        "rdfs:label": [
          "$V.outRelations"
        ]
      },
      "target": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": "rdf:object",
        "rdfs:domain": "V:Relation",
        "rdfs:range": "V:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:coupledToField": "V:inRelations",
        "rdfs:comment": "The target node of this relation.",
        "rdfs:label": [
          "$V.target"
        ]
      },
      "inRelations": {
        "@type": "VState:CoupledField",
        "rdfs:subPropertyOf": "V:nodes",
        "rdfs:domain": "V:SourcerableNode",
        "rdfs:range": "rdfs:List",
        "VState:coupledToField": "V:target",
        "rdfs:comment": "The unordered list of incoming relations with this sourcerable\n(but possibly absent) node as their target.",
        "rdfs:label": [
          "$V.inRelations"
        ]
      },
      "pairedSource": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": "V:source",
        "rdfs:domain": "V:Relation",
        "rdfs:range": "V:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:coupledToField": "V:pairedOutRelations",
        "rdfs:comment": "The paired source node of this relation (paired denotes that the\ncoupled field 'pairedOutRelations' is an event logged field).",
        "rdfs:label": [
          "$V.pairedSource"
        ]
      },
      "pairedOutRelations": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": "V:outgoingRelations",
        "rdfs:domain": "V:SourceredNode",
        "rdfs:range": "rdfs:List",
        "VState:coupledToField": "V:pairedSource",
        "rdfs:comment": "The ordered list of outgoing relations paired to this sourcered node.",
        "rdfs:label": [
          "$V.pairedOutRelations"
        ]
      },
      "pairedTarget": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": "V:target",
        "rdfs:domain": "V:Relation",
        "rdfs:range": "V:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:coupledToField": "V:pairedInRelations",
        "rdfs:comment": "The paired target node of this relation (the coupled field\n'pairedInRelations' is an event logged field).",
        "rdfs:label": [
          "$V.pairedTarget"
        ]
      },
      "pairedInRelations": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": "V:incomingRelations",
        "rdfs:domain": "V:SourceredNode",
        "rdfs:range": "rdfs:List",
        "VState:coupledToField": "V:pairedTarget",
        "rdfs:comment": "The ordered list of incoming relations paired to this sourcered node.",
        "rdfs:label": [
          "$V.pairedInRelations"
        ]
      },
      "connectedSource": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": [
          "V:connector",
          "V:pairedSource"
        ],
        "rdfs:domain": "V:Relation",
        "rdfs:range": "V:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:isOwnedBy": true,
        "VState:coupledToField": "V:connectedOutRelations",
        "rdfs:comment": "The source and also the connector node of this relation.",
        "rdfs:label": [
          "$V.connectedSource"
        ]
      },
      "connectedOutRelations": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": [
          "V:connectedRelations",
          "V:pairedOutRelations"
        ],
        "rdfs:domain": "V:SourceredNode",
        "rdfs:range": "rdfs:List",
        "VState:isOwnerOf": true,
        "VState:coupledToField": "V:connectedSource",
        "rdfs:comment": "The ordered list of outgoing relations contained in (and owned by)\nthis sourcered node.",
        "rdfs:label": [
          "$V.connectedOutRelations"
        ]
      },
      "connectedTarget": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": [
          "V:connector",
          "V:pairedTarget"
        ],
        "rdfs:domain": "V:Relation",
        "rdfs:range": "V:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:isOwnedBy": true,
        "VState:coupledToField": "V:connectedInRelations",
        "rdfs:comment": "The target and also the connector node of this relation.",
        "rdfs:label": [
          "$V.connectedTarget"
        ]
      },
      "connectedInRelations": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": [
          "V:connectedRelations",
          "V:pairedInRelations"
        ],
        "rdfs:domain": "V:SourceredNode",
        "rdfs:range": "rdfs:List",
        "VState:isOwnerOf": true,
        "VState:coupledToField": "V:connectedTarget",
        "rdfs:comment": "The ordered list of incoming relations contained in (and owned by)\nthis sourcered node.",
        "rdfs:label": [
          "$V.connectedInRelations"
        ]
      },
      "relations": {
        "@type": "VState:AliasField",
        "VRevdoc:deprecatedInFavorOf": "V:connectedRelations",
        "VState:aliasOf": "V:connectedRelations",
        "rdfs:subPropertyOf": "V:connectedRelations",
        "rdfs:domain": "V:SourceredNode",
        "rdfs:range": "rdfs:List",
        "VState:isOwnerOf": true,
        "VState:coupledToField": "V:connector",
        "rdfs:comment": "A deprecation of V:connectedRelations; the ordered list of\nrelations contained within this sourcered node when seen as a graph.\nDo note that the semantics have changed: connectedRelations can now\nalso contain relations which have this sourcered node as their the\ntarget (instead of source) or as neither source nor target.\nThe set of just outgoing relations is 'outgoingRelations' and the set\nof owned outgoing relations is 'connectedOutRelations'.",
        "rdfs:label": [
          "$V.relations"
        ]
      },
      "outgoingRelations": {
        "@type": "VState:AliasField",
        "VRevdoc:deprecatedInFavorOf": "V:outRelations",
        "VState:aliasOf": "V:outRelations",
        "rdfs:subPropertyOf": "V:outRelations",
        "rdfs:domain": "V:SourcerableNode",
        "rdfs:range": "rdfs:List",
        "VState:coupledToField": "V:source",
        "rdfs:comment": "The unordered list of outgoing relations with this sourcerable\n(but possibly absent) node as their source (note that sourcerable and\nsource are completely separate concepts here).",
        "rdfs:label": [
          "$V.outgoingRelations"
        ]
      },
      "incomingRelations": {
        "@type": "VState:AliasField",
        "VRevdoc:deprecatedInFavorOf": "V:inRelations",
        "VState:aliasOf": "V:inRelations",
        "rdfs:subPropertyOf": "V:inRelations",
        "rdfs:domain": "V:SourcerableNode",
        "rdfs:range": "rdfs:List",
        "VState:coupledToField": "V:target",
        "rdfs:comment": "The unordered list of incoming relations with this sourcerable\n(but possibly absent) node as their target.",
        "rdfs:label": [
          "$V.incomingRelations"
        ]
      },
      "id": {
        "@type": "VState:GeneratedField",
        "rdfs:domain": "V:Resource",
        "rdfs:range": "xsd:string",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:cardinality": 1
        },
        "VState:expressor": [
          "@$VValk.resolveId@@"
        ],
        "rdfs:comment": "The immutable string representation of the VRID of this resource.",
        "rdfs:label": [
          "$V.id"
        ]
      },
      "rawId": {
        "@type": "VState:AliasField",
        "VRevdoc:deprecatedInFavorOf": "V:id",
        "VState:aliasOf": "V:id",
        "rdfs:subPropertyOf": "V:id",
        "rdfs:domain": "V:Resource",
        "rdfs:range": "xsd:string",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:cardinality": 1
        },
        "rdfs:comment": "The immutable string representation of the VRID of this resource.",
        "rdfs:label": [
          "$V.rawId"
        ]
      },
      "vrid": {
        "@type": "VState:TransientField",
        "rdfs:domain": "V:Resource",
        "rdfs:range": "rdfs:List",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:cardinality": 1
        },
        "VState:expressor": [
          "@$VValk.resolveVRIDTransient@@"
        ],
        "rdfs:comment": "The immutable, segmented object representation of the VRID of this\nresource.",
        "rdfs:label": [
          "$V.vrid"
        ]
      },
      "typeName": {
        "@type": "VState:GeneratedField",
        "rdfs:domain": "V:Resource",
        "rdfs:range": "xsd:string",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:cardinality": 1
        },
        "VState:expressor": [
          "@$VValk.resolveDominantTypeName@@"
        ],
        "rdfs:comment": "The dominant type name of this resource",
        "rdfs:label": [
          "$V.typeName"
        ]
      },
      "prototype": {
        "@type": "VState:EventLoggedField",
        "rdfs:domain": "V:Resource",
        "rdfs:range": "V:Resource",
        "VState:coupledToField": "V:derivations",
        "rdfs:comment": "The prototypes of this resource. All field lookups for which there is\nno associated value set and whose field descriptors don't have\nownDefaultValue are forwarded to the prototype.",
        "rdfs:label": [
          "$V.prototype"
        ]
      },
      "derivations": {
        "@type": "VState:CoupledField",
        "rdfs:domain": "V:Resource",
        "rdfs:range": "V:Resource",
        "VState:coupledToField": "V:prototype",
        "VState:preventsDestroy": true,
        "VState:ownDefaultValue": [],
        "rdfs:comment": "An unordered set of resources which have this resource as their\nV:prototype.",
        "rdfs:label": [
          "$V.derivations"
        ]
      },
      "ownFields": {
        "@type": "VState:TransientField",
        "rdfs:domain": "V:Resource",
        "rdfs:range": "V:Resource",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:expressor": [
          "@$VValk.resolveOwnFieldsTransient@@"
        ],
        "rdfs:comment": "A transient version of this object as if prototype was undefined.\nAll property accesses will only return field values which are directly\nowned by this resource.",
        "rdfs:label": [
          "$V.ownFields"
        ]
      },
      "inheritors": {
        "@type": "VState:CoupledField",
        "rdfs:subPropertyOf": "V:derivations",
        "rdfs:domain": "V:Resource",
        "rdfs:range": "V:Resource",
        "VState:coupledToField": "V:inheritancePrototype",
        "VState:preventsDestroy": true,
        "VState:ownDefaultValue": [],
        "rdfs:comment": "An unordered set of resources which have this resource as their\nV:inheritancePrototype.",
        "rdfs:label": [
          "$V.inheritors"
        ]
      },
      "instances": {
        "@type": "VState:CoupledField",
        "rdfs:subPropertyOf": "V:derivations",
        "rdfs:domain": "V:Resource",
        "rdfs:range": "V:Resource",
        "VState:coupledToField": "V:instancePrototype",
        "VState:preventsDestroy": true,
        "VState:ownDefaultValue": [],
        "rdfs:comment": "An unordered set of resources which have this resource as their\ndirect V:instancePrototype.",
        "rdfs:label": [
          "$V.instances"
        ]
      },
      "ghostPrototype": {
        "@type": "VState:GeneratedField",
        "rdfs:subPropertyOf": "V:prototype",
        "rdfs:domain": "V:Resource",
        "rdfs:range": "V:Resource",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:expressor": [
          "@$VValk.resolveGhostPrototype@@"
        ],
        "VState:coupledToField": "V:ghosts",
        "rdfs:comment": "Ghost prototype of this ghost resource. The ghost prototype is the\nbase resource from which this ghost was created during some primary\ninstantiation.\nThis instantiation (which happens on prototype and results in an\ninstance of it) also ghost-instantiates all the direct and indirect\nownlings of the prototype as ghost ownlings in the instance. The\ninstance is called the *ghost host* of all these ghosts. Likewise, the\ninstance prototype is called the ghost host prototype, and the\n(grand-)ownlings of this ghost host prototype are the ghost prototypes\nof the corresponding ghosts (ie. this field).} .",
        "rdfs:label": [
          "$V.ghostPrototype"
        ]
      },
      "ghosts": {
        "@type": "VState:CoupledField",
        "rdfs:subPropertyOf": "V:derivations",
        "rdfs:domain": "V:Resource",
        "rdfs:range": "V:Resource",
        "VState:coupledToField": "V:ghostPrototype",
        "VState:preventsDestroy": true,
        "VState:ownDefaultValue": [],
        "rdfs:comment": "An unordered set of all (materialized) ghosts which have this resource\nas their V:ghostPrototype. See VState:section_ghost_instancing\nfor why immaterial ghosts are not listed.",
        "rdfs:label": [
          "$V.ghosts"
        ]
      },
      "materializedGhosts": {
        "@type": "VState:AliasField",
        "VRevdoc:deprecatedInFavorOf": "V:ghosts",
        "VState:aliasOf": "V:ghosts",
        "rdfs:subPropertyOf": "V:ghosts",
        "rdfs:domain": "V:Resource",
        "rdfs:range": "V:Resource",
        "VState:coupledToField": "V:ghostPrototype",
        "VState:preventsDestroy": true,
        "VState:ownDefaultValue": [],
        "rdfs:label": [
          "$V.materializedGhosts"
        ]
      },
      "unnamedCouplings": {
        "@type": "VState:CoupledField",
        "rdfs:domain": "V:Resource",
        "rdfs:range": "V:Resource",
        "VState:isOwnerOf": true,
        "VState:coupledToField": "",
        "rdfs:comment": "Referrers with a missing coupledField referring this resource",
        "rdfs:label": [
          "$V.unnamedCouplings"
        ]
      },
      "ghostHost": {
        "@type": "VState:GeneratedField",
        "rdfs:domain": "V:Resource",
        "rdfs:range": "V:Resource",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:expressor": [
          "@$VValk.resolveGhostHost@@"
        ],
        "rdfs:comment": "The instance resource which brought this ghost into being. This\ninstance is equivalent to the innermost ancestor of this ghost which is\nnot a ghost itself.",
        "rdfs:label": [
          "$V.ghostHost"
        ]
      },
      "ghostOwner": {
        "@type": "VState:EventLoggedField",
        "rdfs:domain": "V:Resource",
        "rdfs:range": "V:Resource",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:isOwnedBy": true,
        "VState:coupledToField": "V:ghostOwnlings",
        "VState:ownDefaultValue": null,
        "VState:allowTransientFieldToBeSingular": true,
        "rdfs:comment": "The instance resource which owns this materialized ghost or null if\nthis ghost is immaterial.\nNote that materialized ghosts will have a two own fields: the\nghostOwner and the regular owner (or one of its aliases). The\nremoval of either of these owning field relationships will\nimmaterialize, not destroy, the ghost.",
        "rdfs:label": [
          "$V.ghostOwner"
        ]
      },
      "ghostOwnlings": {
        "@type": "VState:CoupledField",
        "rdfs:domain": "V:Resource",
        "rdfs:range": "V:Resource",
        "VState:isOwnerOf": true,
        "VState:coupledToField": "V:ghostOwner",
        "VState:ownDefaultValue": [],
        "rdfs:comment": "Materialized ghost resources which have this instance as their ghost\nhost.",
        "rdfs:label": [
          "$V.ghostOwnlings"
        ]
      },
      "hashAlgorithm": {
        "@type": "VState:GeneratedField",
        "rdfs:domain": "V:Bvob",
        "rdfs:range": "xsd:string",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:cardinality": 1
        },
        "VState:expressor": [
          "@$VValk.resolveContextTerm:@!$valos.vrid:1:1@@"
        ],
        "rdfs:comment": "The hash algorithm used to create the content hash of this Bvob",
        "rdfs:label": [
          "$V.hashAlgorithm"
        ]
      },
      "contentHash": {
        "@type": "VState:GeneratedField",
        "rdfs:domain": "V:Bvob",
        "rdfs:range": "xsd:string",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:cardinality": 1
        },
        "VState:expressor": [
          "@!$valos.vrid:1:3@@"
        ],
        "rdfs:comment": "The content hash of the octet-stream associated with this Bvob",
        "rdfs:label": [
          "$V.contentHash"
        ]
      },
      "contentLength": {
        "@type": "VState:GeneratedField",
        "rdfs:domain": "V:Bvob",
        "rdfs:range": "xsd:nonNegativeInteger",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:cardinality": 1
        },
        "VState:expressor": [
          "@$VValk.resolveContentLength@@"
        ],
        "rdfs:comment": "The number of octets in the octet-stream associated with this Bvob.",
        "rdfs:label": [
          "$V.contentLength"
        ]
      },
      "contentReferrers": {
        "@type": "VState:CoupledField",
        "rdfs:domain": "V:Bvob",
        "rdfs:range": "V:Extant",
        "VState:defaultCoupledField": "V:content",
        "rdfs:comment": "The unordered set of V:content references to this Bvob from\nwithin this view of the world.",
        "rdfs:label": [
          "$V.contentReferrers"
        ]
      },
      "Absent": {
        "@type": "VState:Type",
        "VRevdoc:brief": "absent resource type",
        "rdfs:subClassOf": "V:Resource",
        "rdfs:comment": "The dominant type class of absent valospace resources. An absent\nresource doesn't have a known representation in this view of the world,\nbuts its existence is inferred due to existing references to it.\n\nThe transition from Absent to and from other dominant types is the\nonly possible runtime type change and happens dynamically based on\nthe chronicle sourcery and banishment."
      },
      "Extant": {
        "@type": "VState:Type",
        "VRevdoc:brief": "extant and present resource interface",
        "rdfs:subClassOf": "V:Resource",
        "rdfs:comment": "The class of valospace resources that are present and extant in this\nview of the world. An extant resource has all of its fields and\nproperties available and it can thus be manipulated.",
        "VEngine:domainOfField": [
          {
            "@id": "#owner",
            "VRevdoc:indexLabel": ".$V.owner"
          },
          {
            "@id": "#name",
            "VRevdoc:indexLabel": ".$V.name"
          },
          {
            "@id": "#inheritancePrototype",
            "VRevdoc:indexLabel": ".$V.inheritancePrototype"
          },
          {
            "@id": "#instancePrototype",
            "VRevdoc:indexLabel": ".$V.instancePrototype"
          },
          {
            "@id": "#ownlings",
            "VRevdoc:indexLabel": ".$V.ownlings"
          },
          {
            "@id": "#unnamedOwnlings",
            "VRevdoc:indexLabel": ".$V.unnamedOwnlings"
          },
          {
            "@id": "#isFrozen",
            "VRevdoc:indexLabel": ".$V.isFrozen"
          },
          {
            "@id": "#nameAlias",
            "VRevdoc:indexLabel": ".$V.nameAlias"
          },
          {
            "@id": "#prototypeAlias",
            "VRevdoc:indexLabel": ".$V.prototypeAlias"
          }
        ]
      },
      "owner": {
        "@type": "VState:EventLoggedField",
        "rdfs:domain": "V:Extant",
        "rdfs:range": "V:Extant",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:isOwnedBy": true,
        "VState:defaultCoupledField": "V:ownlings",
        "rdfs:comment": "The owner of this extant resource.",
        "rdfs:label": [
          "$V.owner"
        ]
      },
      "name": {
        "@type": "VState:EventLoggedField",
        "VState:expressor": [
          "@$VValk.resolveVPlot@@"
        ],
        "VState:impressor": [
          "@$VValk.impressViaVPlot@@"
        ],
        "rdfs:domain": "V:Extant",
        "rdfs:range": [
          "xsd:string",
          "VPlot:VParam"
        ],
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "rdfs:comment": "The primary ValOS name of this extant resource. This name is a local\nidentifier to differentiate the resource from other resources within\nthe same context. Idiomatically this context is all resources of\na particular type which are owned by the same resource.",
        "rdfs:label": [
          "$V.name"
        ]
      },
      "inheritancePrototype": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": "V:prototype",
        "rdfs:domain": "V:Extant",
        "rdfs:range": "V:Resource",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:coupledToField": "V:inheritors",
        "rdfs:comment": "The inheritance prototype of this extant resource. This represents the\ntraditional prototypical inheritance where inherited field values are\nnot remapped in any way.",
        "rdfs:label": [
          "$V.inheritancePrototype"
        ]
      },
      "instancePrototype": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": "V:prototype",
        "rdfs:domain": "V:Extant",
        "rdfs:range": "V:Resource",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:coupledToField": "V:instances",
        "rdfs:comment": "The instance prototype of this extant resource. This represents\nvalos 'ghost instantiation' where all recursively owned resources of\nthe instancePrototype are also inherited as 'ghosts' under this extant\nresource.",
        "rdfs:label": [
          "$V.instancePrototype"
        ]
      },
      "ownlings": {
        "@type": "VState:EventLoggedField",
        "rdfs:domain": "V:Extant",
        "rdfs:range": "rdfs:List",
        "VState:isOwnerOf": true,
        "VState:coupledToField": "V:owner",
        "rdfs:comment": "The ordered list of all resources owned by this extant resource. This\nlist is a union of all fields which define a VState:isOwnerOf.",
        "rdfs:label": [
          "$V.ownlings"
        ]
      },
      "unnamedOwnlings": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": "V:ownlings",
        "rdfs:domain": "V:Extant",
        "rdfs:range": "V:Extant",
        "VState:isOwnerOf": true,
        "VState:coupledToField": "V:owner",
        "rdfs:comment": "The ordered list of all resources owned by this extant resource which\nare not contained in another VState:isOwnerOf field list.",
        "rdfs:label": [
          "$V.unnamedOwnlings"
        ]
      },
      "isFrozen": {
        "@type": "VState:EventLoggedField",
        "rdfs:domain": "V:Extant",
        "rdfs:range": "xsd:boolean",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:cardinality": 1
        },
        "VState:isDuplicateable": false,
        "VState:ownDefaultValue": false,
        "rdfs:comment": "Indicates whether this extant resource is frozen. A frozen resource\nnor any of its ownlings cannot have any of their primary fields be\nmodified.\nSetting isFrozen to true is (by design) an irreversible operation.",
        "rdfs:label": [
          "$V.isFrozen"
        ]
      },
      "NonExistent": {
        "@type": "VState:Type",
        "VRevdoc:brief:": "non-existent resource type",
        "rdfs:subClassOf": "V:Resource",
        "rdfs:comment": "The dominant type class of resources which should be present but are\nnot. This is typically because they have been destroyed or because they\nhave never existed in the first place.\n\nOnly provides the transient fields of the Resource interface."
      },
      "nameAlias": {
        "@type": "VState:AliasField",
        "VState:aliasOf": "V:name",
        "rdfs:subPropertyOf": "V:name",
        "rdfs:domain": "V:Extant",
        "rdfs:range": "xsd:string",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "rdfs:comment": "The primary name of this resource. It is globally non-unique but often\ncontext-dependently unique.\n\nThis is an alias of V:name for circumventing conflicts with the\nnative javascript property 'name' in certain execution contexts",
        "rdfs:label": [
          "$V.nameAlias"
        ]
      },
      "prototypeAlias": {
        "@type": "VState:AliasField",
        "VState:aliasOf": "V:prototype",
        "rdfs:subPropertyOf": "V:prototype",
        "rdfs:domain": "V:Extant",
        "rdfs:range": "V:Resource",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "rdfs:comment": "The prototype of this resource.\n\nThis is an alias for V:prototype to bypass conflicts with native\njavascript property 'prototype' in certain execution contexts.",
        "rdfs:label": [
          "$V.prototypeAlias"
        ]
      },
      "ScopeProperty": {
        "@type": "VState:Type",
        "VRevdoc:brief": "scope property type",
        "rdfs:subClassOf": [
          "V:Resource",
          "V:Extant",
          "rdf:Statement"
        ],
        "rdfs:comment": "The dominant type class of resources representing properties with a\nlocally unique name inside an owning Scope namespace resource.\n\nAdditionally a ScopeProperty represents the core hypertwin building\nblock as an rdf:Statement reification of hypertwinned triples.",
        "VEngine:domainOfField": [
          {
            "@id": "#scope",
            "VRevdoc:indexLabel": ".$V.scope"
          },
          {
            "@id": "#value",
            "VRevdoc:indexLabel": ".$V.value"
          },
          {
            "@id": "#twinspace",
            "VRevdoc:indexLabel": ".$V.twinspace"
          },
          {
            "@id": "#subject",
            "VRevdoc:indexLabel": ".$V.subject"
          },
          {
            "@id": "#predicate",
            "VRevdoc:indexLabel": ".$V.predicate"
          },
          {
            "@id": "#object",
            "VRevdoc:indexLabel": ".$V.object"
          }
        ]
      },
      "scope": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": "V:owner",
        "rdfs:domain": "V:ScopeProperty",
        "rdfs:range": "V:Scope",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:isOwnedBy": true,
        "VState:coupledToField": "V:properties",
        "rdfs:comment": "The scope resource (and owner) of this ScopeProperty.",
        "rdfs:label": [
          "$V.scope"
        ]
      },
      "value": {
        "@type": "VState:EventLoggedField",
        "VState:expressor": [
          "@$VValk.resolveVPlot@@"
        ],
        "VState:impressor": [
          "@$VValk.impressViaVPlot@@"
        ],
        "rdfs:domain": "V:ScopeProperty",
        "rdfs:range": [
          "xsd:string",
          "VPlot:VPlot"
        ],
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "rdfs:comment": "The value of this ScopeProperty.",
        "rdfs:label": [
          "$V.value"
        ]
      },
      "twinspace": {
        "@type": "VState:GeneratedField",
        "rdfs:domain": "V:ScopeProperty",
        "rdfs:range": "rdfs:Resource",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:expressor": [
          "@$VValk.resolveTwinspace@@"
        ],
        "rdfs:comment": "The twinspace of this ScopeProperty. Equates to the expanded prefix\nof the V:name of this ScopeProperty using the context of this\nchronicle. Additionally if the local part of the V:name is an empty\nstring then the V:value of this ScopeProperty defines\nthe twinspace id of the scope resource for this twinspace.",
        "rdfs:label": [
          "$V.twinspace"
        ]
      },
      "subject": {
        "@type": "VState:GeneratedField",
        "rdfs:subPropertyOf": "rdf:subject",
        "rdfs:domain": "V:ScopeProperty",
        "rdfs:range": "rdfs:Resource",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:expressor": [
          "@$VValk.resolveTwinSubject@@"
        ],
        "rdfs:comment": "The subject of this ScopeProperty when interpreted as a reified\nrdf:Statement. Equates to the twinspace id of the scope resource using\nthe V:twinspace of this ScopeProperty.",
        "rdfs:label": [
          "$V.subject"
        ]
      },
      "predicate": {
        "@type": "VState:GeneratedField",
        "rdfs:subPropertyOf": "rdf:predicate",
        "rdfs:domain": "V:ScopeProperty",
        "rdfs:range": "rdfs:Resource",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:expressor": [
          "@$valos.name@@"
        ],
        "rdfs:comment": "The predicate of this ScopeProperty when interpreted as a reified\nrdf:Statement. Equates to the IRI expansion of V:name of this\nScopeProperty using the context of this chronicle.",
        "rdfs:label": [
          "$V.predicate"
        ]
      },
      "object": {
        "@type": "VState:GeneratedField",
        "rdfs:subPropertyOf": "rdf:object",
        "VState:aliasOf": "V:value",
        "rdfs:domain": "V:ScopeProperty",
        "rdfs:range": "rdfs:Resource",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "VState:expressor": [
          "@$VValk.resolveTwinObject@@"
        ],
        "rdfs:comment": "The object of this ScopeProperty when interpreted as a reified\nrdf:Statement. If the V:value refers to a scope which has this\ntwinspace id defined (ie. it owns a property with twinspace id as a\nname), then this field will be expressed as that twinspace id.\nOtherwise equals to the V:value itself.\n",
        "rdfs:label": [
          "$V.object"
        ]
      },
      "properties": {
        "@type": "VState:EventLoggedField",
        "rdfs:subPropertyOf": "V:ownlings",
        "rdfs:domain": "V:Scope",
        "rdfs:range": "rdfs:List",
        "VState:isOwnerOf": true,
        "VState:coupledToField": "V:scope",
        "rdfs:comment": "The ordered list of ScopeProperty resources of this scope",
        "rdfs:label": [
          "$V.properties"
        ]
      }
    },
    "context": {
      "@id": "context",
      "restriction": {
        "@reverse": "owl:onProperty"
      },
      "@base": "https://valospace.org/0#",
      "V:Chronicle.createPartitionURI": {
        "@id": "#Chronicle.createPartitionURI",
        "@type": "@id"
      },
      "V:Chronicle.createChronicleURI": {
        "@id": "#Chronicle.createChronicleURI",
        "@type": "@id"
      },
      "V:Chronicle.tryPartitionConnection": {
        "@id": "#Chronicle.tryPartitionConnection",
        "@type": "@id"
      },
      "V:Chronicle.tryConnection": {
        "@id": "#Chronicle.tryConnection",
        "@type": "@id"
      },
      "V:Chronicle.acquirePartitionConnection": {
        "@id": "#Chronicle.acquirePartitionConnection",
        "@type": "@id"
      },
      "V:Chronicle.acquireConnection": {
        "@id": "#Chronicle.acquireConnection",
        "@type": "@id"
      },
      "V:Chronicle.sourcerChronicle": {
        "@id": "#Chronicle.sourcerChronicle",
        "@type": "@id"
      },
      "V:immediateContent": {
        "@id": "#immediateContent",
        "@type": "@id"
      },
      "V:interpretContent": {
        "@id": "#interpretContent",
        "@type": "@id"
      },
      "V:immediateURL": {
        "@id": "#immediateURL",
        "@type": "@id"
      },
      "V:getURL": {
        "@id": "#getURL",
        "@type": "@id"
      },
      "V:Relatable.getRelationsOf": {
        "@id": "#Relatable.getRelationsOf",
        "@type": "@id"
      },
      "V:Relatable.getIncomingRelationsOf": {
        "@id": "#Relatable.getIncomingRelationsOf",
        "@type": "@id"
      },
      "V:getRelations": {
        "@id": "#getRelations",
        "@type": "@id"
      },
      "V:getRelationTargets": {
        "@id": "#getRelationTargets",
        "@type": "@id"
      },
      "V:setRelations": {
        "@id": "#setRelations",
        "@type": "@id"
      },
      "V:getIncomingRelations": {
        "@id": "#getIncomingRelations",
        "@type": "@id"
      },
      "V:getIncomingRelationSources": {
        "@id": "#getIncomingRelationSources",
        "@type": "@id"
      },
      "V:setIncomingRelations": {
        "@id": "#setIncomingRelations",
        "@type": "@id"
      },
      "V:Resource.activate": {
        "@id": "#Resource.activate",
        "@type": "@id"
      },
      "V:Resource.isActive": {
        "@id": "#Resource.isActive",
        "@type": "@id"
      },
      "V:Resource.getFieldOf": {
        "@id": "#Resource.getFieldOf",
        "@type": "@id"
      },
      "V:Resource.setFieldOf": {
        "@id": "#Resource.setFieldOf",
        "@type": "@id"
      },
      "V:Resource.getOwnerOf": {
        "@id": "#Resource.getOwnerOf",
        "@type": "@id"
      },
      "V:Resource.setOwnerOf": {
        "@id": "#Resource.setOwnerOf",
        "@type": "@id"
      },
      "V:Resource.getActiveResource": {
        "@id": "#Resource.getActiveResource",
        "@type": "@id"
      },
      "V:Resource.tryActiveResource": {
        "@id": "#Resource.tryActiveResource",
        "@type": "@id"
      },
      "V:Resource.recombine": {
        "@id": "#Resource.recombine",
        "@type": "@id"
      },
      "V:Resource.destroy": {
        "@id": "#Resource.destroy",
        "@type": "@id"
      },
      "V:Resource.prototype.hasOwnProperty": {
        "@id": "#Resource.prototype.hasOwnProperty",
        "@type": "@id"
      },
      "V:getField": {
        "@id": "#getField",
        "@type": "@id"
      },
      "V:getFieldCoupling": {
        "@id": "#getFieldCoupling",
        "@type": "@id"
      },
      "V:setField": {
        "@id": "#setField",
        "@type": "@id"
      },
      "V:addToField": {
        "@id": "#addToField",
        "@type": "@id"
      },
      "V:removeFromField": {
        "@id": "#removeFromField",
        "@type": "@id"
      },
      "V:replaceWithinField": {
        "@id": "#replaceWithinField",
        "@type": "@id"
      },
      "V:setOwner": {
        "@id": "#setOwner",
        "@type": "@id"
      },
      "V:getEntity": {
        "@id": "#getEntity",
        "@type": "@id"
      },
      "V:getMedia": {
        "@id": "#getMedia",
        "@type": "@id"
      },
      "V:getFixedResource": {
        "@id": "#getFixedResource",
        "@type": "@id"
      },
      "V:getFixedEntity": {
        "@id": "#getFixedEntity",
        "@type": "@id"
      },
      "V:getFixedMedia": {
        "@id": "#getFixedMedia",
        "@type": "@id"
      },
      "V:getFixedRelation": {
        "@id": "#getFixedRelation",
        "@type": "@id"
      },
      "V:obtainFixedResource": {
        "@id": "#obtainFixedResource",
        "@type": "@id"
      },
      "V:instantiate": {
        "@id": "#instantiate",
        "@type": "@id"
      },
      "V:duplicate": {
        "@id": "#duplicate",
        "@type": "@id"
      },
      "V:prepareBlob": {
        "@id": "#prepareBlob",
        "@type": "@id"
      },
      "V:prepareBvob": {
        "@id": "#prepareBvob",
        "@type": "@id"
      },
      "V:Scope.createIdentifer": {
        "@id": "#Scope.createIdentifer",
        "@type": "@id"
      },
      "V:getProperty": {
        "@id": "#getProperty",
        "@type": "@id"
      },
      "V:getHostGlobal": {
        "@id": "#getHostGlobal",
        "@type": "@id"
      },
      "V:getFickleId": {
        "@id": "#getFickleId",
        "@type": "@id"
      },
      "V:createDerivedId": {
        "@id": "#createDerivedId",
        "@type": "@id"
      },
      "V:hasInterface": {
        "@id": "#hasInterface",
        "@type": "@id"
      },
      "V:chronicleRoot": {
        "@id": "#chronicleRoot",
        "@type": "@id"
      },
      "V:partition": {
        "@id": "#partition",
        "@type": "@id"
      },
      "V:container": {
        "@id": "#container",
        "@type": "@id"
      },
      "V:nodes": {
        "@id": "#nodes",
        "@container": "@list",
        "@type": "@id"
      },
      "V:directory": {
        "@id": "#directory",
        "@type": "@id"
      },
      "V:entries": {
        "@id": "#entries",
        "@container": "@list",
        "@type": "@id"
      },
      "V:parent": {
        "@id": "#parent",
        "@type": "@id"
      },
      "V:entities": {
        "@id": "#entities",
        "@container": "@list",
        "@type": "@id"
      },
      "V:folder": {
        "@id": "#folder",
        "@type": "@id"
      },
      "V:medias": {
        "@id": "#medias",
        "@container": "@list",
        "@type": "@id"
      },
      "V:content": {
        "@id": "#content",
        "@type": "@id"
      },
      "V:connector": {
        "@id": "#connector",
        "@type": "@id"
      },
      "V:connectedRelations": {
        "@id": "#connectedRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "V:source": {
        "@id": "#source",
        "@type": "@id"
      },
      "V:outRelations": {
        "@id": "#outRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "V:target": {
        "@id": "#target",
        "@type": "@id"
      },
      "V:inRelations": {
        "@id": "#inRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "V:pairedSource": {
        "@id": "#pairedSource",
        "@type": "@id"
      },
      "V:pairedOutRelations": {
        "@id": "#pairedOutRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "V:pairedTarget": {
        "@id": "#pairedTarget",
        "@type": "@id"
      },
      "V:pairedInRelations": {
        "@id": "#pairedInRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "V:connectedSource": {
        "@id": "#connectedSource",
        "@type": "@id"
      },
      "V:connectedOutRelations": {
        "@id": "#connectedOutRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "V:connectedTarget": {
        "@id": "#connectedTarget",
        "@type": "@id"
      },
      "V:connectedInRelations": {
        "@id": "#connectedInRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "V:relations": {
        "@id": "#relations",
        "@container": "@list",
        "@type": "@id"
      },
      "V:outgoingRelations": {
        "@id": "#outgoingRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "V:incomingRelations": {
        "@id": "#incomingRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "V:vrid": {
        "@id": "#vrid",
        "@container": "@list",
        "@type": "@id"
      },
      "V:prototype": {
        "@id": "#prototype",
        "@type": "@id"
      },
      "V:derivations": {
        "@id": "#derivations",
        "@type": "@id"
      },
      "V:ownFields": {
        "@id": "#ownFields",
        "@type": "@id"
      },
      "V:inheritors": {
        "@id": "#inheritors",
        "@type": "@id"
      },
      "V:instances": {
        "@id": "#instances",
        "@type": "@id"
      },
      "V:ghostPrototype": {
        "@id": "#ghostPrototype",
        "@type": "@id"
      },
      "V:ghosts": {
        "@id": "#ghosts",
        "@type": "@id"
      },
      "V:materializedGhosts": {
        "@id": "#materializedGhosts",
        "@type": "@id"
      },
      "V:unnamedCouplings": {
        "@id": "#unnamedCouplings",
        "@type": "@id"
      },
      "V:ghostHost": {
        "@id": "#ghostHost",
        "@type": "@id"
      },
      "V:ghostOwner": {
        "@id": "#ghostOwner",
        "@type": "@id"
      },
      "V:ghostOwnlings": {
        "@id": "#ghostOwnlings",
        "@type": "@id"
      },
      "V:contentReferrers": {
        "@id": "#contentReferrers",
        "@type": "@id"
      },
      "V:owner": {
        "@id": "#owner",
        "@type": "@id"
      },
      "V:name": {
        "@id": "#name",
        "@type": "@id"
      },
      "V:inheritancePrototype": {
        "@id": "#inheritancePrototype",
        "@type": "@id"
      },
      "V:instancePrototype": {
        "@id": "#instancePrototype",
        "@type": "@id"
      },
      "V:ownlings": {
        "@id": "#ownlings",
        "@container": "@list",
        "@type": "@id"
      },
      "V:unnamedOwnlings": {
        "@id": "#unnamedOwnlings",
        "@type": "@id"
      },
      "V:prototypeAlias": {
        "@id": "#prototypeAlias",
        "@type": "@id"
      },
      "V:scope": {
        "@id": "#scope",
        "@type": "@id"
      },
      "V:value": {
        "@id": "#value",
        "@type": "@id"
      },
      "V:properties": {
        "@id": "#properties",
        "@container": "@list",
        "@type": "@id"
      }
    },
    "abstract": {
      "@id": "abstract",
      "@type": "VDoc:Chapter",
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            [
              {
                "@type": "VRevdoc:Tooltip",
                "VDoc:content": [
                  {
                    "VDoc:em": true,
                    "VDoc:content": [
                      {
                        "VDoc:strong": true,
                        "VDoc:content": [
                          "'Valos extends boundlessly across the valospace-time fabric.'"
                        ]
                      },
                      " (...in progress(tm))"
                    ]
                  }
                ],
                "VRevdoc:tooltipContent": [
                  {
                    "VDoc:strong": true,
                    "VDoc:content": [
                      "-> Vertically"
                    ]
                  },
                  ": as a full application development solution\nvalos radically simplifies the semantic web technology stack.",
                  null,
                  {
                    "VDoc:strong": true,
                    "VDoc:content": [
                      "-> Horizontally"
                    ]
                  },
                  ": as a global, de-centralized ecosystem\nvalos eases cross-organization interfacing.",
                  null,
                  {
                    "VDoc:strong": true,
                    "VDoc:content": [
                      "-> In depth"
                    ]
                  },
                  ": with its unified resource model valos blurs\nthe boundary between frontends and backends.",
                  null,
                  {
                    "VDoc:strong": true,
                    "VDoc:content": [
                      "-> Temporally"
                    ]
                  },
                  ": valos unifies document state and change\nupdates into seamless event stream *chronicles*."
                ]
              }
            ]
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "In other words, valos is a bit ambitious and a lot to take in at once."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "To address this the first part of this document provides separate\nintroduction paths into valos for a software developer\n(referred to as ",
            {
              "VDoc:em": true,
              "VDoc:content": [
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "a valonaut"
                  ],
                  "VDoc:ref": "/valonaut"
                }
              ]
            },
            "), for a\nsystems operator (as ",
            {
              "VDoc:em": true,
              "VDoc:content": [
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "a technician"
                  ],
                  "VDoc:ref": "/technician"
                }
              ]
            },
            ") and\nfor a project manager (as ",
            {
              "VDoc:em": true,
              "VDoc:content": [
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "a voyager"
                  ],
                  "VDoc:ref": "/voyager"
                }
              ]
            },
            ")."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "Choosing the most familiar path helps you to get hands-on the quickest."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "The second part of this document is the ",
            {
              "@type": "VDoc:Reference",
              "VDoc:content": [
                "valospace"
              ],
              "VDoc:ref": "valospace"
            },
            " API reference and is aimed for valonauts for repeat viewing."
          ]
        }
      ]
    },
    "sotd": {
      "@id": "sotd",
      "@type": "VDoc:Chapter",
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "This document is part of the vault workspace ",
            {
              "@type": "VRevdoc:Package",
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "@valos/kernel"
                  ]
                }
              ],
              "VDoc:ref": "@valos/kernel"
            },
            "\n(of domain ",
            {
              "@type": "VRevdoc:Package",
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "@valos/kernel"
                  ]
                }
              ],
              "VDoc:ref": "@valos/kernel"
            },
            ") which has the description:\n`ValOS common infrastructure tools and libraries monorepository`."
          ]
        }
      ]
    },
    "introduction": {
      "@id": "introduction",
      "@type": "VDoc:Chapter",
      "dc:title": "First valosteps to the three primary valos roles",
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "The three traditional roles of application developer, systems operator\nand project manager have their own unique characteristics in valos\necosystem and are called valonaut, technician and voyager respectively."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "Each role has a detailed (editor's note: eventually) how-to guide which\nare linked and briefly introduced below. The roles support each other\nand the guides reflect this. The hands-on introduction section of each\nguide also gives a high-level overview of the rest."
          ]
        },
        {
          "VDoc:entries": {
            "valonaut": {
              "@id": "https://valospace.org/valonaut",
              "tags": [
                "PRIMARY",
                "ROLE"
              ],
              "subProfiles": [
                "everyone",
                "personal",
                "student",
                "prototypist",
                "etc"
              ],
              "title": [
                {
                  "VDoc:strong": true,
                  "VDoc:content": [
                    "Valonauts"
                  ]
                },
                " develop valospace apps for users"
              ],
              "abstract": {
                "@type": "VDoc:Chapter",
                "VDoc:content": [
                  {
                    "@type": "VDoc:Paragraph",
                    "VDoc:content": [
                      "This document is the first introduction for valonauts - the primary\ncontent creators - to the ValOS ecosystem and its core tools."
                    ]
                  }
                ]
              },
              "introduction": {
                "@type": "VDoc:Chapter",
                "VDoc:content": [
                  {
                    "@type": "VDoc:Paragraph",
                    "VDoc:content": [
                      "As a valonaut you create, share and deploy web content and\ninteractive applications fully from inside ",
                      {
                        "@type": "VDoc:Reference",
                        "VDoc:content": [
                          "valospace"
                        ],
                        "VDoc:ref": "@valos/space"
                      },
                      "."
                    ]
                  },
                  {
                    "@type": "VDoc:Paragraph",
                    "VDoc:content": [
                      "You use a web editor called ",
                      {
                        "@type": "VDoc:Reference",
                        "VDoc:content": [
                          "Zero"
                        ],
                        "VDoc:ref": "Zero"
                      },
                      " and with it employ\ntraditional web technologies; HTML5, CSS and the Javascript\ndialect ",
                      {
                        "@type": "VDoc:Reference",
                        "VDoc:content": [
                          "valoscript"
                        ],
                        "VDoc:ref": "@valos/script"
                      }
                    ]
                  },
                  {
                    "@type": "VDoc:Paragraph",
                    "VDoc:content": [
                      "The skills you learn to do this are like cycling or writing - they\nare used to support your other interests. While you don't need to\nbecome a professional you certainly can!"
                    ]
                  }
                ]
              },
              "package": "@valos/kernel-vault",
              "version": "0.35.0-rc.34"
            },
            "technician": {
              "@id": "https://valospace.org/technician",
              "tags": [
                "PRIMARY",
                "ROLE"
              ],
              "subProfiles": [
                "contributor",
                "developer",
                "administrator",
                "devops",
                "hacker",
                "etc"
              ],
              "title": [
                {
                  "VDoc:strong": true,
                  "VDoc:content": [
                    "Technicians"
                  ]
                },
                " deploy and maintain the valos fabric infrastructure"
              ],
              "abstract": {
                "@type": "VDoc:Chapter",
                "VDoc:content": [
                  {
                    "@type": "VDoc:Paragraph",
                    "VDoc:content": [
                      "This document is the first introduction for ValOS technicians -\nthe primary infrastructure developers and operators - to the ValOS\necosystem and its infrastructure toolchains and workflows."
                    ]
                  }
                ]
              },
              "introduction": {
                "@type": "VDoc:Chapter",
                "VDoc:content": [
                  {
                    "@type": "VDoc:Paragraph",
                    "VDoc:content": [
                      "As a technician you develop and operate the ",
                      {
                        "VRevdoc:dfn": "#fabric",
                        "VDoc:content": [
                          {
                            "VDoc:strong": true,
                            "VDoc:content": [
                              {
                                "@type": "VDoc:Reference",
                                "VDoc:content": [
                                  "ValOS fabric"
                                ],
                                "VDoc:ref": "#fabric"
                              }
                            ]
                          },
                          ", ",
                          "the globally distributed web-like infrastructure of servers,\n    services and components which underlies the Valospace"
                        ]
                      },
                      "."
                    ]
                  },
                  {
                    "@type": "VDoc:Paragraph",
                    "VDoc:content": [
                      "You use ",
                      {
                        "@type": "VDoc:Reference",
                        "VDoc:content": [
                          "vlm"
                        ],
                        "VDoc:ref": "@/valma"
                      },
                      " and employ your existing,\nlikely professional knowledge of JavaScript, Node.js, DevOps,\nbackend, library and other software development skills."
                    ]
                  },
                  {
                    "@type": "VDoc:Paragraph",
                    "VDoc:content": [
                      "You create new open source and/or proprietary node packages. These\npermanently create new fabric functionalities and ",
                      {
                        "@type": "VDoc:Reference",
                        "VDoc:content": [
                          "expand"
                        ],
                        "VDoc:ref": "expand"
                      },
                      " the Valospace by integrating it to old world systems."
                    ]
                  }
                ]
              },
              "package": "@valos/kernel-vault",
              "version": "0.35.0-rc.34"
            },
            "voyager": {
              "@id": "https://valospace.org/voyager",
              "tags": [
                "PRIMARY",
                "ROLE"
              ],
              "subProfiles": [
                "enthusiast",
                "entrepreneur",
                "evangelist",
                "investor",
                "business_owner",
                "sales_rep",
                "etc"
              ],
              "title": [
                {
                  "VDoc:strong": true,
                  "VDoc:content": [
                    "Voyagers"
                  ]
                },
                " understand valos capabilities in order to make decisions"
              ],
              "abstract": {
                "@type": "VDoc:Chapter",
                "VDoc:content": [
                  {
                    "@type": "VDoc:Paragraph",
                    "VDoc:content": [
                      "This document is the first introduction for ValOS voyagers - the first\nadopters, entrepreneurs and evangelists - to the ValOS ecosystem, its\nphilosophy and its ultimate goals."
                    ]
                  }
                ]
              },
              "introduction": {
                "@type": "VDoc:Chapter",
                "VDoc:content": [
                  {
                    "@type": "VDoc:Paragraph",
                    "VDoc:content": [
                      "As a voyager you have stakes that matter. Whether you were to\ninvest on a ValOS collaborator as a financier, to adopt ValOS as\ntechnology as an executive or just to commit your personal time and\nenergy on a ValOS project you need to ",
                      {
                        "VDoc:em": true,
                        "VDoc:content": [
                          "see"
                        ]
                      },
                      " forward."
                    ]
                  },
                  {
                    "@type": "VDoc:Paragraph",
                    "VDoc:content": [
                      "To make sound decisions and to position yourself proactively you\nneed to understand the big picture and philosophy of the ValOS\necosystem. Only then you can enlighten others."
                    ]
                  },
                  {
                    "@type": "VDoc:Paragraph",
                    "VDoc:content": [
                      "You use tailored but real-world ValOS demo setups to illustrate\nhow ValOS a solution could be configured to meet the needs at hand.\nYour audience can be your customer, your team or even just\nyourself."
                    ]
                  }
                ]
              },
              "package": "@valos/kernel-vault",
              "version": "0.35.0-rc.34"
            }
          },
          "VDoc:map": {
            "VDoc:content": [
              {
                "@type": "VDoc:Chapter",
                "dc:title": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        [
                          "How do ",
                          {
                            "VDoc:selectField": "title"
                          },
                          "?"
                        ]
                      ],
                      "VDoc:ref": [
                        "VDoc:selectKey",
                        "#introduction"
                      ]
                    }
                  ]
                },
                "VDoc:content": [
                  {
                    "VDoc:selectField": "introduction"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "section_valospace": {
      "@id": "section_valospace",
      "@type": "VDoc:Chapter",
      "dc:title": [
        "The ",
        {
          "VDoc:em": true,
          "VDoc:content": [
            "V"
          ]
        },
        " valospace namespace"
      ],
      "VDoc:content": [
        {
          "@id": "section_valospace_abstract"
        },
        {
          "@id": "section_prefixes"
        },
        {
          "@id": "section_types"
        },
        {
          "@id": "section_classes"
        },
        {
          "@id": "section_fields"
        },
        {
          "@id": "section_properties"
        },
        {
          "@id": "section_methods"
        },
        {
          "@id": "section_object_properties"
        },
        {
          "@id": "section_object_methods"
        },
        {
          "@id": "section_vocabulary_other"
        },
        {
          "@id": "section_context"
        }
      ]
    },
    "section_valospace_abstract": {
      "@id": "section_valospace_abstract",
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "The 'V' namespace defines the valospace resource types and fields."
          ]
        }
      ]
    },
    "section_prefixes": {
      "@id": "section_prefixes",
      "@type": "VDoc:Chapter",
      "dc:title": [
        {
          "VDoc:em": true,
          "VDoc:content": [
            "V"
          ]
        },
        " IRI prefixes"
      ],
      "VDoc:content": [
        {
          "VDoc:lookup": "prefixes",
          "@type": "VDoc:Table",
          "VDoc:columns": [
            {
              "VDoc:cell": "VDoc:selectKey",
              "@type": "VDoc:Header",
              "VDoc:content": [
                "Prefix"
              ]
            },
            {
              "VDoc:cell": "VDoc:selectValue",
              "@type": "VDoc:Header",
              "VDoc:content": [
                "IRI"
              ]
            }
          ]
        }
      ]
    },
    "section_types": {
      "@id": "section_types",
      "@type": "VDoc:Chapter",
      "dc:title": [
        {
          "VDoc:em": true,
          "VDoc:content": [
            "V"
          ]
        },
        " ",
        {
          "@type": "VDoc:Reference",
          "VDoc:content": [
            "valospace resource types"
          ],
          "VDoc:ref": "VState:Type"
        }
      ],
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "This section defines all valospace resource types introduced by the\n@valos/kernel packages. Any instance of a resource type is always\nrecorded in an event log."
          ]
        },
        {
          "VDoc:lookup": "vocabulary",
          "@type": "VDoc:Table",
          "VDoc:columns": {
            "VDoc:entries": [
              {
                "@type": "VDoc:Header",
                "VDoc:content": null,
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:resourceId": "VDoc:selectKey",
                  "VDoc:heading": true,
                  "VDoc:content": [
                    {
                      "VDoc:words": [
                        {
                          "VDoc:strong": true,
                          "VDoc:content": [
                            {
                              "VDoc:em": true,
                              "VDoc:content": [
                                {
                                  "@type": "VDoc:Reference",
                                  "VDoc:content": [
                                    [
                                      "#",
                                      "VDoc:selectKey"
                                    ]
                                  ],
                                  "VDoc:ref": [
                                    "#",
                                    "VDoc:selectKey"
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "VDoc:words": {
                            "VDoc:selectField": "rdfs:label"
                          },
                          "VDoc:elidable": true
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "VDoc:strong": true,
                      "VDoc:content": [
                        "DEPRECATED"
                      ]
                    },
                    " in favor of:"
                  ]
                },
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:entries": {
                    "VDoc:selectField": "VRevdoc:deprecatedInFavorOf"
                  },
                  "VDoc:elidable": true,
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": [
                  "VRevdoc:brief"
                ],
                "VDoc:cell": {
                  "VDoc:strong": true,
                  "VDoc:content": [
                    {
                      "VDoc:selectField": "VRevdoc:brief"
                    }
                  ]
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": [
                  "rdfs:subClassOf"
                ],
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "rdfs:subClassOf"
                  },
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "VDoc:cell": "rdfs:comment",
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "description"
                      ],
                      "VDoc:ref": "rdfs:comment"
                    }
                  ]
                },
                "VDoc:wide": true
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "instance fields"
                  ],
                  "VDoc:ref": "VState:Field"
                },
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "VEngine:domainOfField"
                  },
                  "VDoc:elidable": true,
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      {
                        "VDoc:selectField": "VRevdoc:indexLabel"
                      }
                    ],
                    "VDoc:ref": {
                      "VDoc:selectField": "@id"
                    }
                  }
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "instance properties"
                  ],
                  "VDoc:ref": "VEngine:Property"
                },
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "VEngine:domainOfProperty"
                  },
                  "VDoc:elidable": true,
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      {
                        "VDoc:selectField": "VRevdoc:indexLabel"
                      }
                    ],
                    "VDoc:ref": {
                      "VDoc:selectField": "@id"
                    }
                  }
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "instance methods"
                  ],
                  "VDoc:ref": "VEngine:Method"
                },
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "VEngine:domainOfMethod"
                  },
                  "VDoc:elidable": true,
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      {
                        "VDoc:selectField": "VRevdoc:indexLabel"
                      }
                    ],
                    "VDoc:ref": {
                      "VDoc:selectField": "@id"
                    }
                  }
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "type object properties"
                  ],
                  "VDoc:ref": "VEngine:ObjectProperty"
                },
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "VEngine:hasProperty"
                  },
                  "VDoc:elidable": true,
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      {
                        "VDoc:selectField": "VRevdoc:indexLabel"
                      }
                    ],
                    "VDoc:ref": {
                      "VDoc:selectField": "@id"
                    }
                  }
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "type object methods"
                  ],
                  "VDoc:ref": "VEngine:ObjectMethod"
                },
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "VEngine:hasMethod"
                  },
                  "VDoc:elidable": true,
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      {
                        "VDoc:selectField": "VRevdoc:indexLabel"
                      }
                    ],
                    "VDoc:ref": {
                      "VDoc:selectField": "@id"
                    }
                  }
                }
              },
              {
                "VDoc:cell": "VRevdoc:introduction",
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "introduction"
                      ],
                      "VDoc:ref": "VRevdoc:introduction"
                    }
                  ]
                },
                "VDoc:wide": true,
                "VDoc:collapsed": true,
                "VDoc:elidable": true
              }
            ]
          },
          "VDoc:entries": [
            "Bvob",
            "Entity",
            "Media",
            "Relation",
            "Resource",
            "Scope",
            "SourcerableNode",
            "UnsourceredNode",
            "NonExistentNode",
            "SourceredNode",
            "Absent",
            "Extant",
            "NonExistent",
            "ScopeProperty"
          ]
        }
      ]
    },
    "section_classes": {
      "@id": "section_classes",
      "@type": "VDoc:Chapter",
      "dc:title": [
        {
          "VDoc:em": true,
          "VDoc:content": [
            "V"
          ]
        },
        " ",
        {
          "@type": "VDoc:Reference",
          "VDoc:content": [
            "valosheath classes"
          ],
          "VDoc:ref": "VEngine:Class"
        }
      ],
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "This section describes all valosheath classes introduced by the\n@valos/kernel packages. These classes are provided for scripts by the\n@valos/engine and their instances are not recorded in event logs."
          ]
        },
        {
          "VDoc:lookup": "vocabulary",
          "@type": "VDoc:Table",
          "VDoc:columns": {
            "VDoc:entries": [
              {
                "@type": "VDoc:Header",
                "VDoc:content": null,
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:resourceId": "VDoc:selectKey",
                  "VDoc:heading": true,
                  "VDoc:content": [
                    {
                      "VDoc:words": [
                        {
                          "VDoc:strong": true,
                          "VDoc:content": [
                            {
                              "VDoc:em": true,
                              "VDoc:content": [
                                {
                                  "@type": "VDoc:Reference",
                                  "VDoc:content": [
                                    [
                                      "#",
                                      "VDoc:selectKey"
                                    ]
                                  ],
                                  "VDoc:ref": [
                                    "#",
                                    "VDoc:selectKey"
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "VDoc:words": {
                            "VDoc:selectField": "rdfs:label"
                          },
                          "VDoc:elidable": true
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "VDoc:strong": true,
                      "VDoc:content": [
                        "DEPRECATED"
                      ]
                    },
                    " in favor of:"
                  ]
                },
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:entries": {
                    "VDoc:selectField": "VRevdoc:deprecatedInFavorOf"
                  },
                  "VDoc:elidable": true,
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": [
                  "rdfs:subClassOf"
                ],
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "rdfs:subClassOf"
                  },
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "VDoc:cell": "rdfs:comment",
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "description"
                      ],
                      "VDoc:ref": "rdfs:comment"
                    }
                  ]
                },
                "VDoc:wide": false
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "instance properties"
                  ],
                  "VDoc:ref": "VEngine:Property"
                },
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "VEngine:domainOfProperty"
                  },
                  "VDoc:elidable": true,
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      {
                        "VDoc:selectField": "VRevdoc:indexLabel"
                      }
                    ],
                    "VDoc:ref": {
                      "VDoc:selectField": "@id"
                    }
                  }
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "instance methods"
                  ],
                  "VDoc:ref": "VEngine:Method"
                },
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "VEngine:domainOfMethod"
                  },
                  "VDoc:elidable": true,
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      {
                        "VDoc:selectField": "VRevdoc:indexLabel"
                      }
                    ],
                    "VDoc:ref": {
                      "VDoc:selectField": "@id"
                    }
                  }
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "class properties"
                  ],
                  "VDoc:ref": "VEngine:ObjectProperty"
                },
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "VEngine:hasProperty"
                  },
                  "VDoc:elidable": true,
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      {
                        "VDoc:selectField": "VRevdoc:indexLabel"
                      }
                    ],
                    "VDoc:ref": {
                      "VDoc:selectField": "@id"
                    }
                  }
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "class methods"
                  ],
                  "VDoc:ref": "VEngine:ObjectMethod"
                },
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "VEngine:hasMethod"
                  },
                  "VDoc:elidable": true,
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      {
                        "VDoc:selectField": "VRevdoc:indexLabel"
                      }
                    ],
                    "VDoc:ref": {
                      "VDoc:selectField": "@id"
                    }
                  }
                }
              },
              {
                "VDoc:cell": "VRevdoc:introduction",
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "introduction"
                      ],
                      "VDoc:ref": "VRevdoc:introduction"
                    }
                  ]
                },
                "VDoc:wide": true,
                "VDoc:collapsed": true,
                "VDoc:elidable": true
              }
            ]
          },
          "VDoc:entries": []
        }
      ]
    },
    "section_fields": {
      "@id": "section_fields",
      "@type": "VDoc:Chapter",
      "dc:title": [
        {
          "VDoc:em": true,
          "VDoc:content": [
            "V"
          ]
        },
        " ",
        {
          "@type": "VDoc:Reference",
          "VDoc:content": [
            "valospace fields"
          ],
          "VDoc:ref": "VState:Field"
        }
      ],
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "This section defines all valospace resource fields introduced by the\n@valos/kernel packages. The values of these fields are either directly\nrecorded in or indirectly resolved from event log(s)."
          ]
        },
        {
          "VDoc:lookup": "vocabulary",
          "@type": "VDoc:Table",
          "VDoc:columns": {
            "VDoc:entries": [
              {
                "@type": "VDoc:Header",
                "VDoc:content": null,
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:resourceId": "VDoc:selectKey",
                  "VDoc:heading": true,
                  "VDoc:content": [
                    {
                      "VDoc:words": [
                        {
                          "VDoc:strong": true,
                          "VDoc:content": [
                            {
                              "VDoc:em": true,
                              "VDoc:content": [
                                {
                                  "@type": "VDoc:Reference",
                                  "VDoc:content": [
                                    [
                                      "#",
                                      "VDoc:selectKey"
                                    ]
                                  ],
                                  "VDoc:ref": [
                                    "#",
                                    "VDoc:selectKey"
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "VDoc:words": {
                            "VDoc:selectField": "rdfs:label"
                          },
                          "VDoc:elidable": true
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "VDoc:strong": true,
                      "VDoc:content": [
                        "DEPRECATED"
                      ]
                    },
                    " in favor of:"
                  ]
                },
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:entries": {
                    "VDoc:selectField": "VRevdoc:deprecatedInFavorOf"
                  },
                  "VDoc:elidable": true,
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": [
                  "rdfs:domain"
                ],
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "rdfs:domain"
                  },
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": [
                  "rdfs:range"
                ],
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "rdfs:range"
                  },
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": "rdf:type",
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "@type"
                  },
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": "rdfs:subPropertyOf",
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "rdfs:subPropertyOf"
                  },
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": "VState:coupledToField",
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "VState:coupledToField"
                  },
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "VDoc:cell": "rdfs:comment",
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "description"
                      ],
                      "VDoc:ref": "rdfs:comment"
                    }
                  ]
                },
                "VDoc:wide": true
              },
              {
                "VDoc:cell": "VRevdoc:introduction",
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "introduction"
                      ],
                      "VDoc:ref": "VRevdoc:introduction"
                    }
                  ]
                },
                "VDoc:wide": true,
                "VDoc:collapsed": true,
                "VDoc:elidable": true
              }
            ]
          },
          "VDoc:entries": [
            "chronicleRoot",
            "chronicleURI",
            "url",
            "partition",
            "partitionURI",
            "container",
            "nodes",
            "authorityURI",
            "createdAt",
            "modifiedAt",
            "partitionAuthorityURI",
            "directory",
            "entries",
            "parent",
            "entities",
            "folder",
            "medias",
            "sourceURL",
            "content",
            "connector",
            "connectedRelations",
            "source",
            "outRelations",
            "target",
            "inRelations",
            "pairedSource",
            "pairedOutRelations",
            "pairedTarget",
            "pairedInRelations",
            "connectedSource",
            "connectedOutRelations",
            "connectedTarget",
            "connectedInRelations",
            "relations",
            "outgoingRelations",
            "incomingRelations",
            "id",
            "rawId",
            "vrid",
            "typeName",
            "prototype",
            "derivations",
            "ownFields",
            "inheritors",
            "instances",
            "ghostPrototype",
            "ghosts",
            "materializedGhosts",
            "unnamedCouplings",
            "ghostHost",
            "ghostOwner",
            "ghostOwnlings",
            "hashAlgorithm",
            "contentHash",
            "contentLength",
            "contentReferrers",
            "owner",
            "name",
            "inheritancePrototype",
            "instancePrototype",
            "ownlings",
            "unnamedOwnlings",
            "isFrozen",
            "nameAlias",
            "prototypeAlias",
            "scope",
            "value",
            "twinspace",
            "subject",
            "predicate",
            "object",
            "properties"
          ]
        }
      ]
    },
    "section_properties": {
      "@id": "section_properties",
      "@type": "VDoc:Chapter",
      "dc:title": [
        {
          "VDoc:em": true,
          "VDoc:content": [
            "V"
          ]
        },
        " ",
        {
          "@type": "VDoc:Reference",
          "VDoc:content": [
            "valosheath properties"
          ],
          "VDoc:ref": "VEngine:Property"
        }
      ],
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "This section describes all valosheath properties introduced by the\n@valos/kernel packages. These properties are provided for scripts by\nthe @valos/engine and their values are not recorded in event logs."
          ]
        },
        {
          "VDoc:lookup": "vocabulary",
          "@type": "VDoc:Table",
          "VDoc:columns": {
            "VDoc:entries": [
              {
                "@type": "VDoc:Header",
                "VDoc:content": null,
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:resourceId": "VDoc:selectKey",
                  "VDoc:heading": true,
                  "VDoc:content": [
                    {
                      "VDoc:words": [
                        {
                          "VDoc:strong": true,
                          "VDoc:content": [
                            {
                              "VDoc:em": true,
                              "VDoc:content": [
                                {
                                  "@type": "VDoc:Reference",
                                  "VDoc:content": [
                                    [
                                      "#",
                                      "VDoc:selectKey"
                                    ]
                                  ],
                                  "VDoc:ref": [
                                    "#",
                                    "VDoc:selectKey"
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "VDoc:words": {
                            "VDoc:selectField": "rdfs:label"
                          },
                          "VDoc:elidable": true
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "VDoc:strong": true,
                      "VDoc:content": [
                        "DEPRECATED"
                      ]
                    },
                    " in favor of:"
                  ]
                },
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:entries": {
                    "VDoc:selectField": "VRevdoc:deprecatedInFavorOf"
                  },
                  "VDoc:elidable": true,
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": [
                  "rdfs:domain"
                ],
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "rdfs:domain"
                  },
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": [
                  "rdfs:range"
                ],
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "rdfs:range"
                  },
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "VDoc:cell": "rdfs:comment",
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "description"
                      ],
                      "VDoc:ref": "rdfs:comment"
                    }
                  ]
                },
                "VDoc:wide": true
              },
              {
                "VDoc:cell": "VRevdoc:introduction",
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "introduction"
                      ],
                      "VDoc:ref": "VRevdoc:introduction"
                    }
                  ]
                },
                "VDoc:wide": true,
                "VDoc:collapsed": true,
                "VDoc:elidable": true
              }
            ]
          },
          "VDoc:entries": []
        }
      ]
    },
    "section_methods": {
      "@id": "section_methods",
      "@type": "VDoc:Chapter",
      "dc:title": [
        {
          "VDoc:em": true,
          "VDoc:content": [
            "V"
          ]
        },
        " ",
        {
          "@type": "VDoc:Reference",
          "VDoc:content": [
            "valosheath methods"
          ],
          "VDoc:ref": "VEngine:Method"
        }
      ],
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "This section describes all valosheath methods introduced by the\n@valos/kernel packages. "
          ]
        },
        {
          "VDoc:lookup": "vocabulary",
          "@type": "VDoc:Table",
          "VDoc:columns": {
            "VDoc:entries": [
              {
                "@type": "VDoc:Header",
                "VDoc:content": null,
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:resourceId": "VDoc:selectKey",
                  "VDoc:heading": true,
                  "VDoc:content": [
                    {
                      "VDoc:words": [
                        {
                          "VDoc:strong": true,
                          "VDoc:content": [
                            {
                              "VDoc:em": true,
                              "VDoc:content": [
                                {
                                  "@type": "VDoc:Reference",
                                  "VDoc:content": [
                                    [
                                      "#",
                                      "VDoc:selectKey"
                                    ]
                                  ],
                                  "VDoc:ref": [
                                    "#",
                                    "VDoc:selectKey"
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "VDoc:words": {
                            "VDoc:selectField": "rdfs:label"
                          },
                          "VDoc:elidable": true
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "VDoc:strong": true,
                      "VDoc:content": [
                        "DEPRECATED"
                      ]
                    },
                    " in favor of:"
                  ]
                },
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:entries": {
                    "VDoc:selectField": "VRevdoc:deprecatedInFavorOf"
                  },
                  "VDoc:elidable": true,
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": [
                  "rdfs:domain"
                ],
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "rdfs:domain"
                  },
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": [
                  "rdfs:range"
                ],
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "rdfs:range"
                  },
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "VDoc:cell": "rdfs:comment",
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "description"
                      ],
                      "VDoc:ref": "rdfs:comment"
                    }
                  ]
                },
                "VDoc:wide": true
              },
              {
                "VDoc:cell": "VRevdoc:introduction",
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "introduction"
                      ],
                      "VDoc:ref": "VRevdoc:introduction"
                    }
                  ]
                },
                "VDoc:wide": true,
                "VDoc:collapsed": true,
                "VDoc:elidable": true
              }
            ]
          },
          "VDoc:entries": [
            "immediateContent",
            "interpretContent",
            "immediateURL",
            "getURL",
            "getRelations",
            "getRelationTargets",
            "setRelations",
            "getIncomingRelations",
            "getIncomingRelationSources",
            "setIncomingRelations",
            "Resource.prototype.hasOwnProperty",
            "getField",
            "getFieldCoupling",
            "setField",
            "addToField",
            "removeFromField",
            "replaceWithinField",
            "setOwner",
            "getEntity",
            "getMedia",
            "getFixedResource",
            "getFixedEntity",
            "getFixedMedia",
            "getFixedRelation",
            "obtainFixedResource",
            "instantiate",
            "duplicate",
            "prepareBlob",
            "prepareBvob",
            "getProperty",
            "getHostGlobal",
            "getFickleId",
            "createDerivedId",
            "hasInterface"
          ]
        }
      ]
    },
    "section_object_properties": {
      "@id": "section_object_properties",
      "@type": "VDoc:Chapter",
      "dc:title": [
        {
          "VDoc:em": true,
          "VDoc:content": [
            "V"
          ]
        },
        " ",
        {
          "@type": "VDoc:Reference",
          "VDoc:content": [
            "valosheath object properties"
          ],
          "VDoc:ref": "VEngine:ObjectProperty"
        }
      ],
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "This section describes all valosheath object properties introduced by\nthe @valos/kernel packages. This includes direct properties on type and\nclass objects themselves. These properties are provided for scripts by\nthe  @valos/engine and their values are not recorded in event logs."
          ]
        },
        {
          "VDoc:lookup": "vocabulary",
          "@type": "VDoc:Table",
          "VDoc:columns": {
            "VDoc:entries": [
              {
                "@type": "VDoc:Header",
                "VDoc:content": null,
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:resourceId": "VDoc:selectKey",
                  "VDoc:heading": true,
                  "VDoc:content": [
                    {
                      "VDoc:words": [
                        {
                          "VDoc:strong": true,
                          "VDoc:content": [
                            {
                              "VDoc:em": true,
                              "VDoc:content": [
                                {
                                  "@type": "VDoc:Reference",
                                  "VDoc:content": [
                                    [
                                      "#",
                                      "VDoc:selectKey"
                                    ]
                                  ],
                                  "VDoc:ref": [
                                    "#",
                                    "VDoc:selectKey"
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "VDoc:words": {
                            "VDoc:selectField": "rdfs:label"
                          },
                          "VDoc:elidable": true
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "VDoc:strong": true,
                      "VDoc:content": [
                        "DEPRECATED"
                      ]
                    },
                    " in favor of:"
                  ]
                },
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:entries": {
                    "VDoc:selectField": "VRevdoc:deprecatedInFavorOf"
                  },
                  "VDoc:elidable": true,
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": [
                  "rdf:subject"
                ],
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "rdf:subject"
                  },
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": [
                  "rdfs:range"
                ],
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "rdfs:range"
                  },
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "VDoc:cell": "rdfs:comment",
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "description"
                      ],
                      "VDoc:ref": "rdfs:comment"
                    }
                  ]
                },
                "VDoc:wide": true
              },
              {
                "VDoc:cell": "VRevdoc:introduction",
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "introduction"
                      ],
                      "VDoc:ref": "VRevdoc:introduction"
                    }
                  ]
                },
                "VDoc:wide": true,
                "VDoc:collapsed": true,
                "VDoc:elidable": true
              }
            ]
          },
          "VDoc:entries": []
        }
      ]
    },
    "section_object_methods": {
      "@id": "section_object_methods",
      "@type": "VDoc:Chapter",
      "dc:title": [
        {
          "VDoc:em": true,
          "VDoc:content": [
            "V"
          ]
        },
        " ",
        {
          "@type": "VDoc:Reference",
          "VDoc:content": [
            "valosheath object methods"
          ],
          "VDoc:ref": "VEngine:ObjectMethod"
        }
      ],
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "This section describes all valosheath object methods introduced by the\n@valos/kernel packages. This includes direct methods on the type and\nclass objects themselves. These properties are provided for scripts by\nthe @valos/engine and their values are not recorded in event logs."
          ]
        },
        {
          "VDoc:lookup": "vocabulary",
          "@type": "VDoc:Table",
          "VDoc:columns": {
            "VDoc:entries": [
              {
                "@type": "VDoc:Header",
                "VDoc:content": null,
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:resourceId": "VDoc:selectKey",
                  "VDoc:heading": true,
                  "VDoc:content": [
                    {
                      "VDoc:words": [
                        {
                          "VDoc:strong": true,
                          "VDoc:content": [
                            {
                              "VDoc:em": true,
                              "VDoc:content": [
                                {
                                  "@type": "VDoc:Reference",
                                  "VDoc:content": [
                                    [
                                      "#",
                                      "VDoc:selectKey"
                                    ]
                                  ],
                                  "VDoc:ref": [
                                    "#",
                                    "VDoc:selectKey"
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "VDoc:words": {
                            "VDoc:selectField": "rdfs:label"
                          },
                          "VDoc:elidable": true
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "VDoc:strong": true,
                      "VDoc:content": [
                        "DEPRECATED"
                      ]
                    },
                    " in favor of:"
                  ]
                },
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:entries": {
                    "VDoc:selectField": "VRevdoc:deprecatedInFavorOf"
                  },
                  "VDoc:elidable": true,
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": [
                  "rdf:subject"
                ],
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "rdf:subject"
                  },
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": [
                  "rdfs:range"
                ],
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "rdfs:range"
                  },
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "VDoc:cell": "rdfs:comment",
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "description"
                      ],
                      "VDoc:ref": "rdfs:comment"
                    }
                  ]
                },
                "VDoc:wide": true
              },
              {
                "VDoc:cell": "VRevdoc:introduction",
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "introduction"
                      ],
                      "VDoc:ref": "VRevdoc:introduction"
                    }
                  ]
                },
                "VDoc:wide": true,
                "VDoc:collapsed": true,
                "VDoc:elidable": true
              }
            ]
          },
          "VDoc:entries": [
            "Chronicle.createPartitionURI",
            "Chronicle.createChronicleURI",
            "Chronicle.tryPartitionConnection",
            "Chronicle.tryConnection",
            "Chronicle.acquirePartitionConnection",
            "Chronicle.acquireConnection",
            "Chronicle.sourcerChronicle",
            "Relatable.getRelationsOf",
            "Relatable.getIncomingRelationsOf",
            "Resource.activate",
            "Resource.isActive",
            "Resource.getFieldOf",
            "Resource.setFieldOf",
            "Resource.getOwnerOf",
            "Resource.setOwnerOf",
            "Resource.getActiveResource",
            "Resource.tryActiveResource",
            "Resource.recombine",
            "Resource.destroy",
            "Scope.createIdentifer"
          ]
        }
      ]
    },
    "section_vocabulary_other": {
      "@id": "section_vocabulary_other",
      "@type": "VDoc:Chapter",
      "dc:title": [
        {
          "VDoc:em": true,
          "VDoc:content": [
            "V"
          ]
        },
        " remaining vocabulary"
      ],
      "VDoc:content": [
        {
          "VDoc:lookup": "vocabulary",
          "@type": "VDoc:Table",
          "VDoc:columns": {
            "VDoc:entries": [
              {
                "@type": "VDoc:Header",
                "VDoc:content": null,
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:resourceId": "VDoc:selectKey",
                  "VDoc:heading": true,
                  "VDoc:content": [
                    {
                      "VDoc:words": [
                        {
                          "VDoc:strong": true,
                          "VDoc:content": [
                            {
                              "VDoc:em": true,
                              "VDoc:content": [
                                {
                                  "@type": "VDoc:Reference",
                                  "VDoc:content": [
                                    [
                                      "#",
                                      "VDoc:selectKey"
                                    ]
                                  ],
                                  "VDoc:ref": [
                                    "#",
                                    "VDoc:selectKey"
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "VDoc:words": {
                            "VDoc:selectField": "rdfs:label"
                          },
                          "VDoc:elidable": true
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "VDoc:strong": true,
                      "VDoc:content": [
                        "DEPRECATED"
                      ]
                    },
                    " in favor of:"
                  ]
                },
                "VDoc:wide": true,
                "VDoc:cell": {
                  "VDoc:entries": {
                    "VDoc:selectField": "VRevdoc:deprecatedInFavorOf"
                  },
                  "VDoc:elidable": true,
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": "rdf:type",
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "@type"
                  },
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "@type": "VDoc:Header",
                "VDoc:content": [
                  "rdfs:subClassOf"
                ],
                "VDoc:cell": {
                  "VDoc:words": {
                    "VDoc:selectField": "rdfs:subClassOf"
                  },
                  "VDoc:map": {
                    "@type": "VDoc:Reference",
                    "VDoc:content": [
                      "VDoc:selectValue"
                    ],
                    "VDoc:ref": "VDoc:selectValue"
                  }
                }
              },
              {
                "VDoc:cell": "rdfs:comment",
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "description"
                      ],
                      "VDoc:ref": "rdfs:comment"
                    }
                  ]
                },
                "VDoc:wide": true
              },
              {
                "VDoc:cell": "VRevdoc:introduction",
                "@type": "VDoc:Header",
                "VDoc:content": {
                  "VDoc:em": true,
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "introduction"
                      ],
                      "VDoc:ref": "VRevdoc:introduction"
                    }
                  ]
                },
                "VDoc:wide": true,
                "VDoc:collapsed": true,
                "VDoc:elidable": true
              }
            ]
          },
          "VDoc:entries": [
            "Chronicle",
            "Describable",
            "DestroyedScriptResource",
            "Discoverable",
            "InactiveScriptResource",
            "Property",
            "Relatable",
            "TransientFields",
            "TransientScriptFields"
          ]
        }
      ]
    },
    "section_context": {
      "@id": "section_context",
      "dc:title": "JSON-LD context term definitions",
      "@type": "VDoc:Chapter",
      "VDoc:content": [
        {
          "VDoc:lookup": "context",
          "@type": "VDoc:Table",
          "VDoc:columns": [
            {
              "VDoc:cell": "VDoc:selectKey",
              "@type": "VDoc:Header",
              "VDoc:content": [
                "Term"
              ]
            },
            {
              "VDoc:cell": "VDoc:selectValue",
              "@type": "VDoc:Header",
              "VDoc:content": [
                "Definition"
              ]
            },
            {
              "VDoc:cell": "@id",
              "@type": "VDoc:Header",
              "VDoc:content": [
                "@id"
              ]
            },
            {
              "VDoc:cell": "@type",
              "@type": "VDoc:Header",
              "VDoc:content": [
                "@type"
              ]
            },
            {
              "VDoc:cell": "@container",
              "@type": "VDoc:Header",
              "VDoc:content": [
                "@container"
              ]
            }
          ]
        }
      ]
    },
    "@type": "VRevdoc:Document",
    "VDoc:content": [
      {
        "@id": "abstract"
      },
      {
        "@id": "sotd"
      },
      {
        "@id": "introduction"
      },
      {
        "@id": "section_valospace"
      }
    ]
  }
]