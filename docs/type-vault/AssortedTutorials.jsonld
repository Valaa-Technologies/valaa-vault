[
  {
    "@id": "https://valospace.org/type-vault/AssortedTutorials",
    "@context": {
      "@base": "https://valospace.org/type-vault/AssortedTutorials#",
      "sbomdoc": "https://valospace.org/sbomdoc#",
      "revdoc": "https://valospace.org/revdoc#",
      "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
      "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
      "xsd": "http://www.w3.org/2001/XMLSchema#",
      "owl": "http://www.w3.org/2002/07/owl#",
      "dc": "http://purl.org/dc/elements/1.1/",
      "vdoc": "https://valospace.org/vdoc#",
      "vdoc:content": {
        "@id": "https://valospace.org/vdoc#content",
        "@container": "@list",
        "@type": "@id"
      },
      "vdoc:words": {
        "@id": "https://valospace.org/vdoc#words",
        "@container": "@list",
        "@type": "@id"
      },
      "vdoc:entries": {
        "@id": "https://valospace.org/vdoc#entries",
        "@container": "@list",
        "@type": "@id"
      },
      "vdoc:headers": {
        "@id": "https://valospace.org/vdoc#headers",
        "@container": "@list",
        "@type": "@id"
      },
      "vdoc:cell": {
        "@id": "https://valospace.org/vdoc#cell",
        "@container": "@list",
        "@type": "@id"
      }
    },
    "dc:title": "Assorted tutorials",
    "vdoc:tags": [
      "PRIMARY",
      "HOW_TO"
    ],
    "respecConfig": {
      "specStatus": "unofficial",
      "editors": [
        {
          "name": "Jaradacl",
          "url": "https://valaatech.github.io/fabric/authors/Jaradacl",
          "github": "http://github.com/valospace"
        }
      ],
      "authors": [],
      "shortName": "assortedTutorials"
    },
    "abstract": {
      "@id": "abstract",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        "This document is a collection of tutorials and possibly other notes",
        " created by Jaradacl based on the tasks given. (During first few days at least)"
      ]
    },
    "sotd": {
      "@id": "sotd",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        "This document is part of the toolset workspace ",
        {
          "@type": "revdoc:Package",
          "vdoc:content": [
            {
              "vdoc:em": true,
              "vdoc:content": [
                "@valos/type-vault"
              ]
            }
          ],
          "vdoc:ref": "@valos/type-vault"
        },
        " (of domain ",
        {
          "@type": "revdoc:Package",
          "vdoc:content": [
            {
              "vdoc:em": true,
              "vdoc:content": [
                "@valos/kernel"
              ]
            }
          ],
          "vdoc:ref": "@valos/kernel"
        },
        ") which is ",
        "A valma toolset for managing valos vault monorepository workspaces"
      ]
    },
    "how_to_create_revdoc": {
      "@id": "how_to_create_revdoc",
      "dc:title": "How to create RevDoc",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        "This is a step-by-step guide on how to create RevDoc using cli.",
        {
          "vdoc:content": [
            {
              "@type": "vdoc:NumberedList",
              "vdoc:entries": [
                [
                  "Ensure you have python installed."
                ],
                [
                  "Navigate to the folder you want your revdoc.js to reside and run the following command: ",
                  {
                    "@type": "revdoc:CommandLineInteraction",
                    "vdoc:entries": [
                      [
                        "",
                        "$ ",
                        {
                          "@type": "revdoc:Invokation",
                          "vdoc:words": [
                            {
                              "@type": "revdoc:Command",
                              "vdoc:content": [
                                "vlm"
                              ]
                            },
                            "write-revdoc",
                            "YOUR_DOCUMENT_NAME_WITHOUT_FILE_EXTENSION"
                          ]
                        }
                      ]
                    ]
                  },
                  " Note: If you create your RevDoc under the revdocs/ folder, ",
                  "your HTML and VDocLD files will be generated to the project root"
                ],
                [
                  "You will now be asked the following information: ",
                  {
                    "vdoc:content": [
                      {
                        "@type": "vdoc:BulletList",
                        "vdoc:entries": [
                          [
                            "Title of the document: This is human-readable title of the document."
                          ],
                          [
                            "ReSpec short name"
                          ],
                          [
                            "Document editors: Comma-separated value of the editors of your document."
                          ],
                          [
                            "Document authors: Comma-separated value of the authors of your document."
                          ]
                        ]
                      }
                    ]
                  }
                ],
                [
                  "Next navigate to the root of your project and run the following command ",
                  {
                    "@type": "revdoc:CommandLineInteraction",
                    "vdoc:entries": [
                      [
                        "",
                        "$ ",
                        {
                          "@type": "revdoc:Invokation",
                          "vdoc:words": [
                            {
                              "@type": "revdoc:Command",
                              "vdoc:content": [
                                "vlm"
                              ]
                            },
                            "regenerate-docs"
                          ]
                        }
                      ]
                    ]
                  },
                  " This will create HTML and VDocLD files based on your RevDoc"
                ],
                [
                  "Now run the following command ",
                  {
                    "@type": "revdoc:CommandLineInteraction",
                    "vdoc:entries": [
                      [
                        "",
                        "$ ",
                        {
                          "@type": "revdoc:Invokation",
                          "vdoc:words": [
                            {
                              "@type": "revdoc:Command",
                              "vdoc:content": [
                                "python"
                              ]
                            },
                            "-m",
                            "SimpleHTTPServer"
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  "Open browser and navigate to the localhost in the port you just opened. (8000 by default)"
                ],
                [
                  "Your HTML and VDocLD files can now be found ",
                  "under docs/ in the same path as where you saved your RevDoc file; ",
                  "for example if you saved your RevDoc under packages/type-vault ",
                  "it can now be found under docs/packages/type-vault."
                ]
              ]
            }
          ]
        }
      ]
    },
    "@type": "revdoc:Document",
    "feature_branch_lifecycle_git": {
      "@id": "feature_branch_lifecycle_git",
      "dc:title": "Feature branch lifecycle in Git",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        "This chapter briefly describes the lifecycle of a feature branch step-by-step using Git.",
        "Chapter works as a guide.",
        {
          "vdoc:content": [
            {
              "rdf:type": "vdoc:NumberedList",
              "vdoc:entries": [
                [
                  "After ensuring you are in a prerelease branch, creating new branch is as easy as running: ",
                  {
                    "rdf:type": "revdoc:CommandLineInteraction",
                    "vdoc:entries": [
                      [
                        "",
                        "$ ",
                        {
                          "rdf:type": "revdoc:Command",
                          "vdoc:words": [
                            "git",
                            "checkout",
                            "-b",
                            "path/to/your/branch"
                          ]
                        }
                      ]
                    ]
                  }
                ],
                "Now you have your branch, so it's time for edits.",
                "TO BE CONTINUED (rebase, commit, push etc.)"
              ]
            }
          ]
        }
      ]
    },
    "creating_new_library_valma": {
      "@id": "creating_new_library_valma",
      "dc:title": "Creating a new library with valma",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        "Guide on how to create a new library using valma. ",
        "Note: Scope of this guide covers only the creation of a public library. ",
        "It does not cover all of the different options while initalizing.",
        "As of now does not cover other use cases either.",
        {
          "vdoc:content": [
            {
              "rdf:type": "vdoc:NumberedList",
              "vdoc:entries": [
                [
                  "Create a folder for your new library and navigate to there. Run the following command: ",
                  {
                    "rdf:type": "revdoc:CommandLineInteraction",
                    "vdoc:entries": [
                      [
                        "",
                        "$ ",
                        {
                          "rdf:type": "revdoc:Command",
                          "vdoc:words": [
                            "vlm",
                            "init"
                          ]
                        }
                      ]
                    ]
                  },
                  " Script will prompt you multiple times to choose, right options are listed here."
                ],
                {
                  "vdoc:content": [
                    {
                      "rdf:type": "vdoc:NumberedList",
                      "vdoc:entries": [
                        "Select \"Initialize\" when it asks about package.json initialization.",
                        "Select \"Yes\" for whether the package is public.",
                        "Select \"Initialize\" when it asks about initializing repository info.",
                        "Select \"Library\" as the valos.type and confirm it.",
                        "Select \"@valos/kernel\" for the valos.domain and confirm twice.",
                        "Select \"skip\" for whether to add initial workshops or toolsets as devDependencies",
                        [
                          "Select \"configure\" for whether to configure the repository with ",
                          {
                            "rdf:type": "revdoc:CommandLineInteraction",
                            "vdoc:entries": [
                              [
                                "",
                                "$ ",
                                {
                                  "rdf:type": "revdoc:Command",
                                  "vdoc:words": [
                                    "vlm",
                                    "configure"
                                  ]
                                }
                              ]
                            ]
                          }
                        ],
                        "Select \"@valos/type-vault/enable-babel\" to use from available toolsets.",
                        "Select \"Yes\" for whether to enable babel transpilation for the library"
                      ]
                    }
                  ]
                },
                [
                  "Your library is now created. ",
                  {
                    "rdf:type": "vdoc:Reference",
                    "vdoc:content": [
                      "You can now continue by getting your library ready for testing."
                    ],
                    "vdoc:ref": "#getting_ready_for_testing"
                  }
                ]
              ]
            }
          ]
        }
      ]
    },
    "getting_ready_for_testing": {
      "@id": "getting_ready_for_testing",
      "dc:title": "Getting ready for testing with Jest",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        "Guide on how to get your library ready for testing with Jest.",
        {
          "vdoc:content": [
            {
              "rdf:type": "vdoc:NumberedList",
              "vdoc:entries": [
                [
                  "Create the following files into your library folder: ",
                  {
                    "vdoc:content": [
                      {
                        "rdf:type": "vdoc:BulletList",
                        "vdoc:entries": [
                          "your-library-name.test.js",
                          "index.js"
                        ]
                      }
                    ]
                  }
                ],
                [
                  "Add the following code snippet to your \"your-library-name.test.js\" file:",
                  null,
                  "import foo from \"./index.js\";\n\n          describe(\"your-library-name\", () => {\n            it(\"*\", () => {\n              expect(foo())\n                  .toEqual(true);\n            });\n          });"
                ],
                [
                  "And then the following snippet to the  \"index.js\" file:\"",
                  null,
                  "// @flow\n\n          export default function foo () {\n            return true;\n          }"
                ],
                [
                  "And lastly ensure that you have the following section in your \"package.json",
                  "{\n            \"scripts\": {\n              \"test\": \"jest\"\n            }\n          }"
                ],
                "Before trying out your test environment, ensure you have Jest installed using yarn.",
                [
                  "Finally, you can test your test environment by navigating ",
                  "to the project root and running the following command:",
                  {
                    "rdf:type": "revdoc:CommandLineInteraction",
                    "vdoc:entries": [
                      [
                        "",
                        "$ ",
                        {
                          "rdf:type": "revdoc:Command",
                          "vdoc:words": [
                            "yarn",
                            "test",
                            "your-library-name"
                          ]
                        }
                      ]
                    ]
                  },
                  "If all tests pass, your test environment is up and running! ",
                  "You can find more on Jest ",
                  {
                    "rdf:type": "vdoc:Reference",
                    "vdoc:content": [
                      "here"
                    ],
                    "vdoc:ref": "https://jestjs.io"
                  }
                ]
              ]
            }
          ]
        }
      ]
    },
    "adding_bash_completion_vlm_commands": {
      "@id": "adding_bash_completion_vlm_commands",
      "dc:title": "Adding bash completion for Valma commands",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        "Just run the following command:",
        {
          "rdf:type": "revdoc:CommandLineInteraction",
          "vdoc:entries": [
            [
              "",
              "$ ",
              {
                "rdf:type": "revdoc:Command",
                "vdoc:words": [
                  "/path/to/your/project/node_modules/.bin/vlm",
                  "bash-completion",
                  ">>",
                  "~/.bashrc"
                ]
              }
            ]
          ]
        },
        "This adds the bash-completion script inside you .bashrc.",
        "Now you can complete your vlm commands as you would",
        " e.g. your paths by just pressing tab."
      ]
    },
    "assembling_local_packages": {
      "@id": "assembling_local_packages",
      "dc:title": "How to assemble local packages for local use",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        "Sometimes you may need to use your own packages with your project. ",
        "To do this you need to assemble the packages and add them to a local repository ",
        "from which they can then be used. ",
        "To assemble your packages and add them ",
        "to a local repository, run the following command inside your project root:",
        {
          "rdf:type": "revdoc:CommandLineInteraction",
          "vdoc:entries": [
            [
              "",
              "$ ",
              {
                "rdf:type": "revdoc:Command",
                "vdoc:words": [
                  "vlm",
                  "assemble-packages",
                  "--add-unchanged",
                  "--yalc-push",
                  "--yalc-add"
                ]
              }
            ]
          ]
        },
        "This assembles your packages and adds them to a local Yalc repository. ",
        "Find out more about Yalc ",
        {
          "rdf:type": "vdoc:Reference",
          "vdoc:content": [
            "here"
          ],
          "vdoc:ref": "https://github.com/whitecolor/yalc"
        }
      ]
    },
    "creating_new_vault": {
      "@id": "creating_new_vault",
      "dc:title": "Guide on how to create a new vault",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        "This guide will go through the steps on creating a new vault with valma\n    and releasing a prerelease version of it. Setting up credentials\n    for npm and setting remote github repository is out of the scope of this guide.",
        {
          "vdoc:content": [
            {
              "rdf:type": "vdoc:NumberedList",
              "vdoc:entries": [
                "Create new folder for your vault and navigate there.",
                [
                  "Run the following command: ",
                  {
                    "rdf:type": "revdoc:CommandLineInteraction",
                    "vdoc:entries": [
                      [
                        "",
                        "$ ",
                        {
                          "rdf:type": "revdoc:Command",
                          "vdoc:words": [
                            "vlm",
                            "init"
                          ]
                        }
                      ]
                    ]
                  },
                  "Following list will go through the steps of the initialization script:",
                  {
                    "vdoc:content": [
                      {
                        "rdf:type": "vdoc:NumberedList",
                        "vdoc:entries": [
                          [
                            "Select \"Initialize\" on whether to initialize package.json with 'yarn init'.\n          The initialization script will prompt\n          multiple questions about the basic information of the package which will be\n          written to the root package.json. Answer to the questions as you wish,\n          except for \"private\" which needs to be \"true\" as vaults\n          themselves are never published."
                          ],
                          "Select \"Initialize\" on whether to initialize repository valos stanza type and domain,\n          and then select \"vault\" from the list of different types.\n          Confirm your selection when the scripts asks for it.",
                          "Select \"<custom>\" when the scripts asks for stanza valos.domain.\n          Enter the desired domain and confirm both the domain selection\n          as well as the whole stanza configuration.",
                          "Select \"bypass\" when the scripts asks for whether to add\n          initial workshops as devDependencies.",
                          "Select \"Configure\" when asked whether to configure repository\n          with \"vlm configure\".",
                          "For the comma-separated list of package.json .workspaces stanza globs\n          the initial \"packages/*\" will suffice. This list will determine\n          the workspaces for the vault. All of the necessary dependencies\n          will now be installed.",
                          "Select \"@valos/toolset-domain\" when asked to select a toolset\n          to be used for the vault as vaults should always use the\n          domain toolset. Said toolset will now be installed.",
                          "Select \"docs\" when asked to select tools for the type-vault toolset.",
                          "Select \"Yes\" when asked to initialize git repository,\n          set up initial release branch and whether to regenerate software\n          bill of materials. This will set up the initial local git repository\n          and release branch for the vault and ensure that sbom documents\n          are regenerated on each release or prerelease.",
                          "Choose the base URI for your published vauld documents when\n          asked."
                        ]
                      }
                    ]
                  },
                  "You have now initialized the vault. If everything went accordingly,\n        your vault root directory should now contain all basic necessary files."
                ],
                [
                  "*NOT IN CORRECT PLACE* You need to also configure domain toolset.\n      Following steps guide you through the configuration.",
                  {
                    "vdoc:content": [
                      {
                        "rdf:type": "vdoc:NumberedList",
                        "vdoc:entries": [
                          "First step"
                        ]
                      }
                    ]
                  }
                ],
                "Before releasing your vault you need to have commited all changes.\n      If there are uncommitted changes that you haven't made, you should amend\n      them to the initial commit.",
                [
                  "Releasing your vault is as simple as running the following command:",
                  {
                    "rdf:type": "revdoc:CommandLineInteraction",
                    "vdoc:entries": [
                      [
                        "",
                        "$ ",
                        {
                          "rdf:type": "revdoc:Command",
                          "vdoc:words": [
                            "vlm",
                            "release-vault",
                            "--prerelease"
                          ]
                        }
                      ]
                    ]
                  },
                  "This command will run all the set hooks & assemble all the packages\n      from your workspaces. If you have configured npm credentials and set up\n      remote github repository the script will also publish your packages\n      to npm and push the vault to the github repository."
                ]
              ]
            }
          ]
        }
      ]
    },
    "rdf:type": "revdoc:Document",
    "vdoc:content": [
      {
        "@id": "abstract"
      },
      {
        "@id": "sotd"
      },
      {
        "@id": "how_to_create_revdoc"
      },
      {
        "@id": "feature_branch_lifecycle_git"
      },
      {
        "@id": "creating_new_library_valma"
      },
      {
        "@id": "getting_ready_for_testing"
      },
      {
        "@id": "adding_bash_completion_vlm_commands"
      },
      {
        "@id": "assembling_local_packages"
      },
      {
        "@id": "creating_new_vault"
      }
    ]
  }
]